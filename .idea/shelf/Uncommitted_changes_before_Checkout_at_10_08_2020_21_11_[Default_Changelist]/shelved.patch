Index: Server/src/main/java/Server/core/game/node/entity/player/link/appearance/BodyPart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link.appearance;\r\n\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Represents a body part of a player encapsulating the type and color.\r\n * @author 'Vexia\r\n */\r\npublic final class BodyPart implements SavingModule {\r\n\r\n\t/**\r\n\t * Represents the look value of the part.\r\n\t */\r\n\tprivate int look;\r\n\r\n\t/**\r\n\t * Represents the color of this part.\r\n\t */\r\n\tprivate int color;\r\n\r\n\t/**\r\n\t * Constructs a new {@code BodyPart} {@code Object}.\r\n\t */\r\n\tpublic BodyPart() {\r\n\t\t/**\r\n\t\t * empty.\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a new {@code BodyPart} {@code Object}.\r\n\t * @param look the look.\r\n\t * @param color the color.\r\n\t */\r\n\tpublic BodyPart(final int look, final int color) {\r\n\t\tthis.look = look;\r\n\t\tthis.color = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a new {@code BodyPart} {@code Object}.\r\n\t * @param look the look.\r\n\t */\r\n\tpublic BodyPart(final int look) {\r\n\t\tthis(look, 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tbuffer.putInt(look);\r\n\t\tbuffer.putInt(color);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tchangeLook(buffer.getInt());\r\n\t\tchangeColor(buffer.getInt());\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to change the look value.\r\n\t * @param look the look value.\r\n\t */\r\n\tpublic void changeLook(final int look) {\r\n\t\tthis.look = look;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to change the color value.\r\n\t * @param color the color value.\r\n\t */\r\n\tpublic void changeColor(final int color) {\r\n\t\tthis.color = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the look.\r\n\t * @return The look.\r\n\t */\r\n\tpublic int getLook() {\r\n\t\treturn look;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the color.\r\n\t * @return The color.\r\n\t */\r\n\tpublic int getColor() {\r\n\t\treturn color;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/appearance/BodyPart.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/appearance/BodyPart.java	(date 1597089529775)
@@ -1,6 +1,7 @@
 package core.game.node.entity.player.link.appearance;
 
 import core.game.node.entity.player.info.login.SavingModule;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 
@@ -53,6 +54,11 @@
 		buffer.putInt(color);
 	}
 
+	public void parse(JSONObject part){
+		changeLook(Integer.parseInt( part.get("look").toString()));
+		changeColor(Integer.parseInt( part.get("color").toString()));
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		changeLook(buffer.getInt());
Index: Server/src/main/java/Server/plugin/ai/general/ScriptAPI.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.ai.general\r\n\r\nimport core.cache.def.impl.ItemDefinition\r\nimport core.game.interaction.MovementPulse\r\nimport core.game.node.Node\r\nimport core.game.node.`object`.GameObject\r\nimport core.game.node.entity.Entity\r\nimport core.game.node.entity.npc.NPC\r\nimport core.game.node.entity.player.Player\r\nimport core.game.node.item.GroundItem\r\nimport core.game.node.item.GroundItemManager\r\nimport core.game.node.item.Item\r\nimport core.game.system.SystemLogger\r\nimport core.game.system.task.Pulse\r\nimport core.game.world.GameWorld\r\nimport core.game.world.map.Location\r\nimport core.game.world.map.RegionManager\r\nimport core.game.world.map.path.Path\r\nimport core.game.world.map.path.Pathfinder\r\nimport core.game.world.update.flag.context.Animation\r\nimport core.game.world.update.flag.context.Graphics\r\nimport core.tools.ItemNames\r\nimport core.tools.RandomFunction\r\nimport plugin.ai.AIPlayer\r\nimport plugin.ai.AIRepository\r\nimport plugin.ai.general.scriptrepository.LobsterCatcher\r\nimport plugin.ai.general.scriptrepository.SeersMagicTrees\r\nimport plugin.ge.GEOfferDispatch\r\nimport plugin.ge.GrandExchangeOffer\r\nimport java.util.ArrayList\r\nimport java.util.concurrent.Executors\r\nimport kotlin.math.abs\r\nimport kotlin.math.pow\r\nimport kotlin.math.sqrt\r\n\r\nclass ScriptAPI(private val bot: Player) {\r\n    val GRAPHICSUP = Graphics(1576)\r\n    val ANIMATIONUP = Animation(8939)\r\n    val GRAPHICSDOWN = Graphics(1577)\r\n    val ANIMATIONDOWN = Animation(8941)\r\n\r\n    fun distance(n1: Node, n2: Node): Double {\r\n        return sqrt((n1.location.x - n2.location.x.toDouble()).pow(2.0) + (n2.location.y - n1.location.y.toDouble()).pow(2.0))\r\n    }\r\n\r\n    fun getNearestNode(entityName: String): Node? {\r\n        var entity: Node? = null\r\n        var minDistance = Double.MAX_VALUE\r\n        for (node in RegionManager.forId(bot.location.regionId).planes[bot.location.z].entities) {\r\n            if (node != null && node.name == entityName && distance(bot, node) < minDistance && !Pathfinder.find(bot, node).isMoveNear) {\r\n                entity = node\r\n                minDistance = distance(bot, node)\r\n            }\r\n        }\r\n        return entity\r\n    }\r\n\r\n    fun getNearestNode(id: Int, `object`: Boolean): Node? {\r\n        if (`object`) {\r\n            var entity: Node? = null\r\n            var minDistance = Double.MAX_VALUE\r\n            for (objects in RegionManager.forId(bot.location.regionId).planes[bot.location.z].objects) {\r\n                for(e in objects) {\r\n                    if (e != null && e.id == id && distance(bot, e) < minDistance && !Pathfinder.find(bot, e).isMoveNear && e.isActive) {\r\n                        entity = e\r\n                        minDistance = distance(bot, e)\r\n                    }\r\n                }\r\n            }\r\n            return if(entity == null) null else entity as GameObject\r\n        } else {\r\n            var entity: Node? = null\r\n            var minDistance = Double.MAX_VALUE\r\n            for (e in RegionManager.forId(bot.location.regionId).planes[bot.location.z].entities) {\r\n                if (e != null && e.id == id && distance(bot, e) < minDistance && !Pathfinder.find(bot, e).isMoveNear) {\r\n                    entity = e\r\n                    minDistance = distance(bot, e)\r\n                }\r\n            }\r\n            return entity\r\n        }\r\n    }\r\n\r\n    fun getNearestNode(name: String, `object`: Boolean): Node? {\r\n        if (`object`) {\r\n            var entity: Node? = null\r\n            var minDistance = Double.MAX_VALUE\r\n            for (objects in RegionManager.forId(bot.location.regionId).planes[bot.location.z].objects) {\r\n                for(e in objects) {\r\n                    if (e != null && e.name.toLowerCase() == name.toLowerCase() && distance(bot, e) < minDistance && !Pathfinder.find(bot, e).isMoveNear && e.isActive) {\r\n                        entity = e\r\n                        minDistance = distance(bot, e)\r\n                    }\r\n                }\r\n            }\r\n            return if(entity == null) null else entity as GameObject\r\n        } else {\r\n            var entity: Node? = null\r\n            var minDistance = Double.MAX_VALUE\r\n            for (e in RegionManager.forId(bot.location.regionId).planes[bot.location.z].entities) {\r\n                if (e != null && e.name.toLowerCase() == name.toLowerCase() && distance(bot, e) < minDistance && !Pathfinder.find(bot, e).isMoveNear) {\r\n                    entity = e\r\n                    minDistance = distance(bot, e)\r\n                }\r\n            }\r\n            return entity\r\n        }\r\n    }\r\n\r\n    private fun getNearestGroundItem(id: Int): GroundItem? {\r\n        var distance = 11.0\r\n        var closest: GroundItem? = null\r\n        if(AIRepository.getItems(bot) == null) return null\r\n        for(item in AIRepository.getItems(bot)!!.filter { it.distance(bot.location) < 10 }){\r\n            if(item.id == id){\r\n                //distance = item.distance(bot.location)\r\n                closest = item\r\n            }\r\n        }\r\n        return closest\r\n    }\r\n\r\n    fun takeNearestGroundItem(id: Int){\r\n        val item = getNearestGroundItem(id)\r\n        if(item != null)\r\n            item.interaction?.handle(bot,item.interaction[2])\r\n    }\r\n\r\n    fun getNearestGameObject(loc: Location, objectId: Int): GameObject? {\r\n        var nearestObject: GameObject? = null\r\n        val minDistance = Double.MAX_VALUE\r\n        for (o in RegionManager.forId(loc.regionId).planes[0].objects) {\r\n            for (obj in o) {\r\n                if (obj != null) {\r\n                    if (distance(loc, obj) < minDistance && obj.id == objectId) {\r\n                        nearestObject = obj\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return nearestObject\r\n    }\r\n\r\n    private fun findTargets(entity: Entity?, radius: Int, name: String? = null): List<Entity>? {\r\n        val targets: MutableList<Entity> = ArrayList()\r\n        val localNPCs: Array<Any> = RegionManager.getLocalNpcs(entity, radius).toTypedArray()\r\n        var length = localNPCs.size\r\n        if (length > 5) {\r\n            length = 5\r\n        }\r\n        for (i in 0 until length) {\r\n            val npc = localNPCs[i] as NPC\r\n            run { if (checkValidTargets(npc,name)) targets.add(npc) }\r\n        }\r\n        return if (targets.size == 0) null else targets\r\n    }\r\n\r\n    private fun checkValidTargets(target: NPC,name: String?): Boolean {\r\n        if (!target.isActive) {\r\n            return false\r\n        }\r\n        if (!target.properties.isMultiZone && target.inCombat()) {\r\n            return false\r\n        }\r\n        if (name != null){\r\n            if(target.name != name)\r\n                return false\r\n        }\r\n        return target.definition.hasAction(\"attack\")\r\n    }\r\n\r\n    fun attackNpcsInRadius(bot: Player, radius: Int): Boolean {\r\n        if (bot.inCombat()) return true\r\n        var creatures: List<Entity>? = findTargets(bot, radius) ?: return false\r\n        bot.attack(creatures!![RandomFunction.getRandom(creatures.size - 1)])\r\n        return if (creatures.isNotEmpty()) {\r\n            true\r\n        } else {\r\n            creatures = findTargets(bot, radius)\r\n            if (!creatures!!.isEmpty()) {\r\n                bot.attack(creatures[RandomFunction.getRandom(creatures.size - 1)])\r\n                return true\r\n            }\r\n            false\r\n        }\r\n    }\r\n\r\n    fun walkTo(loc: Location){\r\n        if(!bot.walkingQueue.isMoving) {\r\n            Executors.newSingleThreadExecutor().execute {\r\n                walkToIterator(loc)\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun walkToIterator(loc: Location){\r\n        var diffX = loc.x - bot.location.x\r\n        var diffY = loc.y - bot.location.y\r\n        while(!bot.location.transform(diffX,diffY,0).withinDistance(bot.location)) {\r\n            diffX /= 2\r\n            diffY /= 2\r\n        }\r\n        GameWorld.Pulser.submit(object : MovementPulse(bot,bot.location.transform(diffX,diffY,0), Pathfinder.SMART){\r\n            override fun pulse(): Boolean {\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    fun attackNpcInRadius(bot: Player,name: String, radius: Int): Boolean {\r\n        if (bot.inCombat()) return true\r\n        var creatures: List<Entity>? = findTargets(bot, radius,name) ?: return false\r\n        bot.attack(creatures!![RandomFunction.getRandom(creatures.size - 1)])\r\n        return if (creatures.isNotEmpty()) {\r\n            true\r\n        } else {\r\n            creatures = findTargets(bot, radius,name)\r\n            if (!creatures!!.isEmpty()) {\r\n                bot.attack(creatures.random())\r\n                return true\r\n            }\r\n            false\r\n        }\r\n    }\r\n\r\n    fun GroundItem.distance(loc: Location): Double{\r\n        return location.getDistance(loc)\r\n    }\r\n\r\n    fun teleportToGE(){\r\n        bot.lock()\r\n        bot.visualize(ANIMATIONUP, GRAPHICSUP)\r\n        bot.impactHandler.disabledTicks = 4\r\n        val location = Location.create(3165, 3482, 0)\r\n        bot.pulseManager.run(object : Pulse(4, bot) {\r\n            override fun pulse(): Boolean {\r\n                bot.unlock()\r\n                bot.properties.teleportLocation = location\r\n                bot.animator.reset()\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    fun sellOnGE(id: Int){\r\n        class toCounterPulse : MovementPulse(bot,Location.create(3165, 3487, 0) ){\r\n            override fun pulse(): Boolean {\r\n                val offer = GrandExchangeOffer(id,true)\r\n                val itemAmt = bot.bank.getAmount(id)\r\n                offer.amount = itemAmt\r\n                offer.offeredValue = ItemDefinition.forId(id).value\r\n                SystemLogger.log(\"Offered \" + offer.amount)\r\n                GEOfferDispatch.dispatch(bot,offer)\r\n                bot.bank.remove(Item(id,itemAmt))\r\n                bot.bank.refresh()\r\n                SystemLogger.log(\"Banked fish: \" + bot.bank.getAmount(ItemNames.RAW_LOBSTER))\r\n                return true\r\n            }\r\n        }\r\n        bot.pulseManager.run(toCounterPulse())\r\n    }\r\n\r\n    fun sellOnGE(id: Int, value: Int){\r\n        class toCounterPulseWithPrice : MovementPulse(bot,Location.create(3165, 3487, 0) ){\r\n            override fun pulse(): Boolean {\r\n                val offer = GrandExchangeOffer(id,true)\r\n                val itemAmt = bot.bank.getAmount(id)\r\n                offer.amount = itemAmt\r\n                offer.offeredValue = value\r\n                SystemLogger.log(\"Offered \" + offer.amount)\r\n                GEOfferDispatch.dispatch(bot,offer)\r\n                bot.bank.remove(Item(id,itemAmt))\r\n                bot.bank.refresh()\r\n                SystemLogger.log(\"Banked fish: \" + bot.bank.getAmount(ItemNames.RAW_LOBSTER))\r\n                return true\r\n            }\r\n        }\r\n        bot.pulseManager.run(toCounterPulseWithPrice())\r\n    }\r\n\r\n    fun teleport(loc: Location){\r\n        bot.lock()\r\n        bot.visualize(ANIMATIONUP, GRAPHICSUP)\r\n        bot.impactHandler.disabledTicks = 4\r\n        val location = loc\r\n        GameWorld.Pulser.submit(object : Pulse(4, bot) {\r\n            override fun pulse(): Boolean {\r\n                bot.unlock()\r\n                bot.properties.teleportLocation = location\r\n                bot.animator.reset()\r\n                return true\r\n            }\r\n        })\r\n    }\r\n\r\n    fun bankItem(item: Int){\r\n        class BankingPulse() : Pulse(20){\r\n            override fun pulse(): Boolean {\r\n                val logs = bot.inventory.getAmount(item)\r\n                bot.inventory.remove(Item(item,logs))\r\n                bot.bank.add(Item(item,logs))\r\n                SystemLogger.log(\"${bot.username}: Banked $logs ${ItemDefinition.forId(item).name.toLowerCase()}\")\r\n                SystemLogger.log(\"${bot.username}: Bank currently contains ${bot.bank.getAmount(item)} ${ItemDefinition.forId(item).name.toLowerCase()}\")\r\n                return true\r\n            }\r\n        }\r\n        bot.pulseManager.run(BankingPulse())\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/ai/general/ScriptAPI.kt	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/ai/general/ScriptAPI.kt	(date 1597089529797)
@@ -33,6 +33,10 @@
 import kotlin.math.pow
 import kotlin.math.sqrt
 
+/**
+ * API used by bot scripts
+ * @author Ceikry
+ */
 class ScriptAPI(private val bot: Player) {
     val GRAPHICSUP = Graphics(1576)
     val ANIMATIONUP = Animation(8939)
Index: Server/src/main/java/Server/core/game/node/entity/player/link/QuestData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.item.Item;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.Arrays;\r\n\r\n/**\r\n * Represents the quest data to save.\r\n * @author 'Vexia\r\n */\r\npublic final class QuestData implements SavingModule {\r\n\r\n\t/**\r\n\t * Represents the cooks assist attribute array.\r\n\t */\r\n\tprivate final boolean[] cooksAssistant = new boolean[4];\r\n\r\n\t/**\r\n\t * Represents the demon slayer boolean array.\r\n\t */\r\n\tprivate final boolean[] demonSlayer = new boolean[2];\r\n\r\n\t/**\r\n\t * Represents the draynor levers for ernest the chicken.\r\n\t */\r\n\tprivate final boolean[] draynorLever = new boolean[6];\r\n\r\n\t/**\r\n\t * Represents the dragon slayer attribute array.\r\n\t */\r\n\tprivate final boolean[] dragonSlayer = new boolean[9];\r\n\r\n\t/**\r\n\t * The desert treasure items.\r\n\t */\r\n\tprivate final Item[] desertTreasure = new Item[7];\r\n\r\n\t/**\r\n\t * Represents the dragon slayer planks.\r\n\t */\r\n\tprivate int dragonSlayerPlanks;\r\n\r\n\t/**\r\n\t * Represents if the gardener has attacked.\r\n\t */\r\n\tprivate boolean gardenerAttack;\r\n\r\n\t/**\r\n\t * Represents if they talked to drezzel.\r\n\t */\r\n\tprivate boolean talkedDrezel;\r\n\r\n\tprivate int witchsExerimentStage;\r\n\r\n\r\n\tprivate boolean witchsExerimentKilled;\r\n\r\n\r\n\t/**\r\n\t * Constructs a new {@code QuestData} {@code Object}.\r\n\t */\r\n\tpublic QuestData() {\r\n\t\tArrays.fill(draynorLever, true);\r\n\t\tpopulateDesertTreasureNode();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tSavedData.save(buffer, draynorLever, 1);\r\n\t\tSavedData.save(buffer, dragonSlayer, 2);\r\n\t\tSavedData.save(buffer, (byte) dragonSlayerPlanks, 3);\r\n\t\tSavedData.save(buffer, demonSlayer, 4);\r\n\t\tSavedData.save(buffer, cooksAssistant, 5);\r\n\t\tSavedData.save(buffer, gardenerAttack, 6);\r\n\t\tSavedData.save(buffer, talkedDrezel, 7);\r\n\t\tsaveDesertTreasureNode(buffer);\r\n\t\tSavedData.save(buffer, witchsExerimentStage, 9);\r\n\t\tSavedData.save(buffer, witchsExerimentKilled, 10);\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get()) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tfor (int i = 0; i < draynorLever.length; i++) {\r\n\t\t\t\t\tdraynorLever[i] = SavedData.getBoolean(buffer.get());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfor (int i = 0; i < dragonSlayer.length; i++) {\r\n\t\t\t\t\tdragonSlayer[i] = SavedData.getBoolean(buffer.get());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tdragonSlayerPlanks = buffer.get();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tfor (int i = 0; i < demonSlayer.length; i++) {\r\n\t\t\t\t\tdemonSlayer[i] = SavedData.getBoolean(buffer.get());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tfor (int i = 0; i < cooksAssistant.length; i++) {\r\n\t\t\t\t\tcooksAssistant[i] = SavedData.getBoolean(buffer.get());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tgardenerAttack = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\ttalkedDrezel = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tfor (int i = 0; i < desertTreasure.length; i++) {\r\n\t\t\t\t\tdesertTreasure[i] = new Item(buffer.getShort(), buffer.get());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\twitchsExerimentStage = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10:\r\n\t\t\t\twitchsExerimentKilled = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the desert treasure node.\r\n\t * @param buffer The buffer.\r\n\t */\r\n\tprivate final void saveDesertTreasureNode(ByteBuffer buffer) {\r\n\t\tbuffer.put((byte) 8);\r\n\t\tfor (int i = 0; i < desertTreasure.length; i++) {\r\n\t\t\tItem item = desertTreasure[i];\r\n\t\t\tbuffer.putShort((short) item.getId());\r\n\t\t\tbuffer.put((byte) item.getAmount());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the draynorLever.\r\n\t * @return The draynorLever.\r\n\t */\r\n\tpublic boolean[] getDraynorLevers() {\r\n\t\treturn draynorLever;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the dragon slayer items.\r\n\t * @return the dragon slayer.\r\n\t */\r\n\tpublic boolean[] getDragonSlayerItems() {\r\n\t\treturn dragonSlayer;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the value of a inserted dragon slayer item.\r\n\t * @param name the name.\r\n\t * @return the value of the item being inserted.\r\n\t */\r\n\tpublic boolean getDragonSlayerItem(String name) {\r\n\t\treturn name == \"lobster\" ? dragonSlayer[0] : name == \"wizard\" ? dragonSlayer[3] : name == \"silk\" ? dragonSlayer[2] : name == \"bowl\" ? dragonSlayer[1] : dragonSlayer[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the dragon slayer attribute.\r\n\t * @param name the name.\r\n\t * @return the value of the attribute.\r\n\t */\r\n\tpublic boolean getDragonSlayerAttribute(String name) {\r\n\t\treturn name == \"ship\" ? dragonSlayer[4] : name == \"memorized\" ? dragonSlayer[5] : name == \"repaired\" ? dragonSlayer[6] : name == \"ned\" ? dragonSlayer[7] : name == \"poured\" ? dragonSlayer[8] : dragonSlayer[8];\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to set a dragon slayer attribute.\r\n\t * @param name the name.\r\n\t * @param value the value.\r\n\t */\r\n\tpublic void setDragonSlayerAttribute(String name, boolean value) {\r\n\t\tdragonSlayer[(name == \"ship\" ? 4 : name == \"memorized\" ? 5 : name == \"repaired\" ? 6 : name == \"ned\" ? 7 : name == \"poured\" ? 8 : 8)] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the cooks assistant attribute value.\r\n\t * @param name the name.\r\n\t * @return the value.\r\n\t */\r\n\tpublic boolean getCookAssist(String name) {\r\n\t\treturn name == \"milk\" ? cooksAssistant[0] : name == \"egg\" ? cooksAssistant[1] : name == \"flour\" ? cooksAssistant[2] : name == \"gave\" ? cooksAssistant[3] : cooksAssistant[3];\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to set a cooks assistant attribute.\r\n\t * @param name the name.\r\n\t * @param value the value.\r\n\t */\r\n\tpublic void setCooksAssistant(String name, boolean value) {\r\n\t\tcooksAssistant[(name == \"milk\" ? 0 : name == \"egg\" ? 1 : name == \"flour\" ? 2 : name == \"gave\" ? 3 : 3)] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the dragonSlayerPlanks.\r\n\t * @return The dragonSlayerPlanks.\r\n\t */\r\n\tpublic int getDragonSlayerPlanks() {\r\n\t\treturn dragonSlayerPlanks;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the dragonSlayerPlanks.\r\n\t * @param i The dragonSlayerPlanks to set.\r\n\t */\r\n\tpublic void setDragonSlayerPlanks(int i) {\r\n\t\tthis.dragonSlayerPlanks = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the demonSlayer.\r\n\t * @return The demonSlayer.\r\n\t */\r\n\tpublic boolean[] getDemonSlayer() {\r\n\t\treturn demonSlayer;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the cooksAssistant.\r\n\t * @return The cooksAssistant.\r\n\t */\r\n\tpublic boolean[] getCooksAssistant() {\r\n\t\treturn cooksAssistant;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the gardenerAttack.\r\n\t * @return The gardenerAttack.\r\n\t */\r\n\tpublic boolean isGardenerAttack() {\r\n\t\treturn gardenerAttack;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the gardenerAttack.\r\n\t * @param gardenerAttack The gardenerAttack to set.\r\n\t */\r\n\tpublic void setGardenerAttack(boolean gardenerAttack) {\r\n\t\tthis.gardenerAttack = gardenerAttack;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the talkedDrezel.\r\n\t * @return The talkedDrezel.\r\n\t */\r\n\tpublic boolean isTalkedDrezel() {\r\n\t\treturn talkedDrezel;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the talkedDrezel.\r\n\t * @param talkedDrezel The talkedDrezel to set.\r\n\t */\r\n\tpublic void setTalkedDrezel(boolean talkedDrezel) {\r\n\t\tthis.talkedDrezel = talkedDrezel;\r\n\t}\r\n\r\n\t/**\r\n\t * Populates the desert treasure node.\r\n\t */\r\n\tprivate final void populateDesertTreasureNode() {\r\n\t\tdesertTreasure[0] = new Item(1513, 12);\r\n\t\tdesertTreasure[1] = new Item(592, 10);\r\n\t\tdesertTreasure[2] = new Item(1775, 6);\r\n\t\tdesertTreasure[3] = new Item(2353, 6);\r\n\t\tdesertTreasure[4] = new Item(526, 2);\r\n\t\tdesertTreasure[5] = new Item(973, 2);\r\n\t\tdesertTreasure[6] = new Item(565, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the desert treasure item.\r\n\t * @param index The index.\r\n\t * @return The item.\r\n\t */\r\n\tpublic Item getDesertTreasureItem(int index) {\r\n\t\tif (index < 0 || index > desertTreasure.length) {\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Index out of bounds, index can only span from 0 - 6.\");\r\n\t\t}\r\n\t\treturn desertTreasure[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the desert treasure item.\r\n\t * @param index The index.\r\n\t * @param item The item to set.\r\n\t */\r\n\tpublic void setDesertTreasureItem(int index, Item item) {\r\n\t\tif (index < 0 || index > desertTreasure.length) {\r\n\t\t\tthrow new IndexOutOfBoundsException(\"Index out of bounds, index can only span from 0 - 6.\");\r\n\t\t}\r\n\t\tdesertTreasure[index] = item;\r\n\t}\r\n\r\n\tpublic int getWitchsExerimentStage() {\r\n\t\treturn witchsExerimentStage;\r\n\t}\r\n\r\n\tpublic void setWitchsExerimentStage(int witchsExerimentStage) {\r\n\t\tthis.witchsExerimentStage = witchsExerimentStage;\r\n\t}\r\n\tpublic boolean isWitchsExerimentKilled() {\r\n\t\treturn witchsExerimentKilled;\r\n\t}\r\n\r\n\tpublic void setWitchsExerimentKilled(boolean witchsExerimentKilled) {\r\n\t\tthis.witchsExerimentKilled = witchsExerimentKilled;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/QuestData.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/QuestData.java	(date 1597089529769)
@@ -2,6 +2,8 @@
 
 import core.game.node.entity.player.info.login.SavingModule;
 import core.game.node.item.Item;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 import java.util.Arrays;
@@ -81,6 +83,35 @@
 		buffer.put((byte) 0);
 	}
 
+	public void parse(JSONObject data){
+		JSONArray dl = (JSONArray) data.get("draynorLever");
+		for(int i = 0; i < dl.size(); i++){
+			draynorLever[i] = (boolean) dl.get(i);
+		}
+		JSONArray drs = (JSONArray) data.get("dragonSlayer");
+		for(int i = 0; i < drs.size(); i++){
+			dragonSlayer[i] = (boolean) drs.get(i);
+		}
+		dragonSlayerPlanks = Integer.parseInt( data.get("dragonSlayerPlanks").toString());
+		JSONArray des = (JSONArray) data.get("demonSlayer");
+		for(int i = 0; i < des.size(); i++){
+			demonSlayer[i] = (boolean) des.get(i);
+		}
+		JSONArray ca = (JSONArray) data.get("cooksAssistant");
+		for(int i = 0; i < ca.size(); i++){
+			cooksAssistant[i] = (boolean) ca.get(i);
+		}
+		gardenerAttack = (boolean) data.get("gardenerAttack");
+		talkedDrezel = (boolean) data.get("talkedDrezel");
+		JSONArray dtn = (JSONArray) data.get("desertTreasureNode");
+		for (int i = 0; i < dtn.size(); i++){
+			JSONObject item = (JSONObject) dtn.get(i);
+			desertTreasure[i] = new Item(Integer.parseInt(item.get("id").toString()), Integer.parseInt(item.get("amount").toString()));
+		}
+		witchsExerimentKilled = (boolean) data.get("witchsExperimentKilled");
+		witchsExerimentStage = Integer.parseInt( data.get("witchsExperimentStage").toString());
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
@@ -319,4 +350,16 @@
 	public void setWitchsExerimentKilled(boolean witchsExerimentKilled) {
 		this.witchsExerimentKilled = witchsExerimentKilled;
 	}
+
+	public boolean[] getDraynorLever() {
+		return draynorLever;
+	}
+
+	public boolean[] getDragonSlayer() {
+		return dragonSlayer;
+	}
+
+	public Item[] getDesertTreasure() {
+		return desertTreasure;
+	}
 }
\ No newline at end of file
Index: Server/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'java'\r\nsourceCompatibility = 1.8\r\ntargetCompatibility = 1.8\r\n\r\napply plugin: 'application'\r\n\r\nmainClassName = 'core.Server'\r\n\r\nrepositories {\r\n    flatDir {\r\n        dirs 'lib'\r\n    }\r\n}\r\n\r\n\r\ndependencies {\r\n    implementation name: 'clientlibs'\r\n    implementation name: 'commons-io-2.4'\r\n    implementation name: 'guava-18.0'\r\n    implementation name: 'javassist-3.20.0-GA'\r\n    implementation name: 'joda-time-2.9.9'\r\n    implementation name: 'json-simple-1.1.1'\r\n    implementation name: 'laf-plugin-7.2.1'\r\n    implementation name: 'laf-widget-7.2.1'\r\n    implementation name: 'mysql-connector-java-5.1.30-bin'\r\n    implementation name: 'reflections-0.9.10'\r\n    implementation name: 'substance-7.2.1'\r\n    implementation name: 'trident-7.2.1'\r\n    implementation name: 'twitter4j-core-4.0.3-SNAPSHOT'\r\n}\r\n\r\n\r\njar {\r\n    archiveBaseName = 'server'\r\n    archiveVersion =  '1.0.0'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/build.gradle	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/build.gradle	(date 1597089529731)
@@ -1,32 +1,32 @@
-apply plugin: 'java'
+plugins {
+    id "java"
+    id "org.jetbrains.kotlin.jvm" version "1.3.72"
+    id "application"
+}
+
 sourceCompatibility = 1.8
 targetCompatibility = 1.8
 
-apply plugin: 'application'
-
 mainClassName = 'core.Server'
 
+
 repositories {
     flatDir {
-        dirs 'lib'
+        dirs 'libs'
     }
+    mavenCentral()
 }
-
 
 dependencies {
+    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
     implementation name: 'clientlibs'
-    implementation name: 'commons-io-2.4'
     implementation name: 'guava-18.0'
     implementation name: 'javassist-3.20.0-GA'
-    implementation name: 'joda-time-2.9.9'
-    implementation name: 'json-simple-1.1.1'
-    implementation name: 'laf-plugin-7.2.1'
-    implementation name: 'laf-widget-7.2.1'
     implementation name: 'mysql-connector-java-5.1.30-bin'
     implementation name: 'reflections-0.9.10'
-    implementation name: 'substance-7.2.1'
-    implementation name: 'trident-7.2.1'
-    implementation name: 'twitter4j-core-4.0.3-SNAPSHOT'
+    implementation "com.googlecode.json-simple:json-simple:1.1.1"
+    implementation "io.github.classgraph:classgraph:4.8.62"
+    implementation "org.jetbrains.kotlin:kotlin-reflect"
 }
 
 
@@ -34,3 +34,14 @@
     archiveBaseName = 'server'
     archiveVersion =  '1.0.0'
 }
+
+sourceSets {
+    main.java.srcDirs = ['src/main/java/Server']
+    main.kotlin.srcDirs = ['src/main/java/Server']
+}
+
+compileKotlin {
+    kotlinOptions {
+        jvmTarget = "1.8"
+    }
+}
Index: Server/src/main/java/Server/core/game/node/entity/player/link/appearance/Appearance.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link.appearance;\r\n\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.cache.def.impl.NPCDefinition;\r\nimport core.game.container.impl.EquipmentContainer;\r\nimport core.game.node.entity.combat.equipment.WeaponInterface;\r\nimport core.game.node.entity.impl.Animator.Priority;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.item.Item;\r\nimport core.game.system.config.ItemConfigParser;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.game.world.update.flag.player.AppearanceFlag;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Represents an appearance managing class of a player.\r\n * @author Emperor\r\n * @author Vexia\r\n */\r\npublic final class Appearance implements SavingModule {\r\n\r\n\t/**\r\n\t * Represents the player instance.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * Represents the cached animations.\r\n\t */\r\n\tprivate final int[] animationCache = new int[] { AppearanceCache.STAND_ANIM, AppearanceCache.STAND_TURN_ANIM, AppearanceCache.WALK_ANIM, AppearanceCache.TURN_180_AIM, AppearanceCache.TURN_90_CW, AppearanceCache.TUNR_90_CWW, AppearanceCache.RUN_ANIM };\r\n\t\r\n\t/**\r\n\t * Represents the cached icons.\r\n\t */\r\n\tprivate final int[] iconCache = new int[] { -1, -1 };\r\n\r\n\t/**\r\n\t * Represents the shown body parts.\r\n\t */\r\n\tprivate final int[] bodyParts = new int[14];\r\n\r\n\t/**\r\n\t * Represents the cached body parts (default male).\r\n\t */\r\n\tprivate BodyPart[] appearanceCache = Gender.MALE.generateCache();\r\n\r\n\t/**\r\n\t * Represents the gender of a player.\r\n\t */\r\n\tprivate Gender gender = Gender.MALE;\r\n\r\n\t/**\r\n\t * Represents the npc id to represent if not -1.\r\n\t */\r\n\tprivate int npcId = -1;\r\n\t\r\n\t/**\r\n\t * The render animation id.\r\n\t */\r\n\tprivate int renderAnimationId = 1426;\r\n\r\n\t/**\r\n\t * If the player is riding a mining cart.\r\n\t */\r\n\tprivate boolean ridingMinecart;\r\n\r\n\t/**\r\n\t * Constructs a new {@code Appearance} {@code Object}.\r\n\t * @param player the player of this appearance.\r\n\t */\r\n\tpublic Appearance(final Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tbuffer.put(gender.toByte());\r\n\t\tfor (int i = 0; i < appearanceCache.length; i++) {\r\n\t\t\tappearanceCache[i].save(buffer);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tgender = gender.asByte(buffer.get());\r\n\t\tfor (int i = 0; i < appearanceCache.length; i++) {\r\n\t\t\tappearanceCache[i].parse(buffer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the player into an NPC.\r\n\t * @param id The NPC id.\r\n\t */\r\n\tpublic void transformNPC(int id) {\r\n\t\tthis.npcId = id;\r\n\t\tsetAnimations();\r\n\t\tif (id == -1) {\r\n\t\t\tplayer.setSize(1);\r\n\t\t\tAnimation[] anims = WeaponInterface.DEFAULT_ANIMS;\r\n\t\t\tif (player.getEquipment().get(3) != null) {\r\n\t\t\t\tanims = player.getEquipment().get(3).getDefinition().getConfiguration(ItemConfigParser.ATTACK_ANIMS, anims);\r\n\t\t\t}\r\n\t\t\tint index = player.getSettings().getAttackStyleIndex();\r\n\t\t\tif (index < 0 || index >= anims.length) {\r\n\t\t\t\tindex = 0;\r\n\t\t\t}\r\n\t\t\tplayer.getProperties().setAttackAnimation(anims[index]);\r\n\t\t\tplayer.getProperties().setDefenceAnimation(new Animation(404));\r\n\t\t\tplayer.getProperties().setDeathAnimation(new Animation(9055, Priority.HIGH));\r\n\t\t} else {\r\n\t\t\tNPCDefinition def = NPCDefinition.forId(id);\r\n\t\t\tplayer.setSize(def.getSize());\r\n\t\t\tif (def.getCombatAnimation(0) != null) {\r\n\t\t\t\tplayer.getProperties().setAttackAnimation(def.getCombatAnimation(0));\r\n\t\t\t}\r\n\t\t\tif (def.getCombatAnimation(3) != null) {\r\n\t\t\t\tplayer.getProperties().setDefenceAnimation(def.getCombatAnimation(3));\r\n\t\t\t}\r\n\t\t\tif (def.getCombatAnimation(4) != null) {\r\n\t\t\t\tplayer.getProperties().setDeathAnimation(def.getCombatAnimation(4));\r\n\t\t\t}\r\n\t\t}\r\n\t\tsync();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the rendering animations.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic void setAnimations() {\r\n\t\tif (npcId == -1) {\r\n\t\t\tItem weapon = player.getEquipment().get(3);\r\n\t\t\tif (isRidingMinecart()) {\r\n\t\t\t\tthis.setRidingMinecart(false);\r\n\t\t\t}\r\n\t\t\tif (weapon == null || weapon.getDefinition().getConfiguration(ItemConfigParser.WALK_ANIM, null) == null) {\r\n\t\t\t\tsetDefaultAnimations();\r\n\t\t\t} else {\r\n\t\t\t\tItemDefinition def = weapon.getDefinition();\r\n\t\t\t\tsetStandAnimation(def.getConfiguration(ItemConfigParser.STAND_ANIM, 0x328));\r\n\t\t\t\tsetStandTurnAnimation(def.getConfiguration(ItemConfigParser.STAND_TURN_ANIM, 0x337));\r\n\t\t\t\tsetWalkAnimation(def.getConfiguration(ItemConfigParser.WALK_ANIM, 0x333));\r\n\t\t\t\tsetRunAnimation(def.getConfiguration(ItemConfigParser.RUN_ANIM, 0x338));\r\n\t\t\t\tsetTurn180(def.getConfiguration(ItemConfigParser.TURN180_ANIM, 0x334));\r\n\t\t\t\tsetTurn90cw(def.getConfiguration(ItemConfigParser.TURN90CW_ANIM, 0x335));\r\n\t\t\t\tsetTurn90ccw(def.getConfiguration(ItemConfigParser.TURN90CCW_ANIM, 0x336));\r\n\t\t\t\trenderAnimationId = def.getRenderAnimationId();\r\n\t\t\t}\r\n\t\t\tif (weapon != null && weapon.getId() == 12842) {\r\n\t\t\t\tsetStandAnimation(8964);\r\n\t\t\t\tsetWalkAnimation(8961);\r\n\t\t\t\tsetRunAnimation(8963);\r\n\t\t\t\tsetTurn180(8963);\r\n\t\t\t\tsetTurn90ccw(8963);\r\n\t\t\t\tsetTurn90cw(8963);\r\n\t\t\t\tsetStandTurnAnimation(8963);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tNPCDefinition def = NPCDefinition.forId(npcId);\r\n\t\t\trenderAnimationId = def.getRenderAnimationId();\r\n\t\t\tsetStandAnimation(def.getStandAnimation());\r\n\t\t\tint turn = def.getTurnAnimation();\r\n\t\t\tif (turn < 1) {\r\n\t\t\t\tturn = def.getWalkAnimation();\r\n\t\t\t}\r\n\t\t\tsetStandTurnAnimation(turn);\r\n\t\t\tsetWalkAnimation(def.getWalkAnimation());\r\n\t\t\tsetRunAnimation(def.getWalkAnimation());\r\n\t\t\tif (def.getTurn180Animation() > 0) {\r\n\t\t\t\tsetTurn180(def.getTurn180Animation());\r\n\t\t\t} else {\r\n\t\t\t\tsetTurn180(turn);\r\n\t\t\t}\r\n\t\t\tif (def.getTurnCWAnimation() > 0) {\r\n\t\t\t\tsetTurn90cw(def.getTurnCWAnimation());\r\n\t\t\t} else {\r\n\t\t\t\tsetTurn90cw(turn);\r\n\t\t\t}\r\n\t\t\tif (def.getTurnCCWAnimation() > 0) {\r\n\t\t\t\tsetTurn90ccw(def.getTurnCCWAnimation());\r\n\t\t\t} else {\r\n\t\t\t\tsetTurn90ccw(turn);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the animations.\r\n\t * @param animation the animation.\r\n\t */\r\n\tpublic void setAnimations(Animation anim) {\r\n\t\trenderAnimationId = anim.getId();\r\n\t\tsync();\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to sync this appearance with the client.\r\n\t */\r\n\tpublic void sync() {\r\n\t\tplayer.getUpdateMasks().register(new AppearanceFlag(player));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the appearance.\r\n\t * @param appearance The appearance to copy from.\r\n\t */\r\n\tpublic void copy(Appearance appearance) {\r\n\t\tgender = appearance.gender;\r\n\t\tfor (int i = 0; i < appearanceCache.length; i++) {\r\n\t\t\tappearanceCache[i] = appearance.appearanceCache[i];\r\n\t\t}\r\n\t\tfor (int i = 0; i < animationCache.length; i++) {\r\n\t\t\tanimationCache[i] = appearance.animationCache[i];\r\n\t\t}\r\n\t\trenderAnimationId = appearance.renderAnimationId;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an item on a body part.\r\n\t * @param part The body part.\r\n\t * @param item The item to draw.\r\n\t */\r\n\tpublic void drawItem(int part, Item item) {\r\n\t\tthis.bodyParts[part] = item.getDefinition().getEquipId() + 0x8000;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws clothing on a body part.\r\n\t * @param part The body part.\r\n\t * @param clothesId The clothes id.\r\n\t */\r\n\tpublic void drawClothes(int part, int clothesId) {\r\n\t\tthis.bodyParts[part] = clothesId + 0x100;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears a body part.\r\n\t * @param part The part to clear.\r\n\t */\r\n\tpublic void clearBodyPart(int part) {\r\n\t\tthis.bodyParts[part] = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the data used for the appearance update mask.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic void prepareBodyData(Player player) {\r\n\t\tif (player.getRenderInfo().preparedAppearance()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.getRenderInfo().setPreparedAppearance(true);\r\n\t\tItem chest = player.getEquipment().get(EquipmentContainer.SLOT_CHEST);\r\n\t\tItem shield = player.getEquipment().get(EquipmentContainer.SLOT_SHIELD);\r\n\t\tItem legs = player.getEquipment().get(EquipmentContainer.SLOT_LEGS);\r\n\t\tItem hat = player.getEquipment().get(EquipmentContainer.SLOT_HAT);\r\n\t\tItem hands = player.getEquipment().get(EquipmentContainer.SLOT_HANDS);\r\n\t\tItem feet = player.getEquipment().get(EquipmentContainer.SLOT_FEET);\r\n\t\tItem cape = player.getEquipment().get(EquipmentContainer.SLOT_CAPE);\r\n\t\tItem amulet = player.getEquipment().get(EquipmentContainer.SLOT_AMULET);\r\n\t\tItem weapon = player.getEquipment().get(EquipmentContainer.SLOT_WEAPON);\r\n\t\tboolean castleWarsHood = cape != null && (cape.getId() == 4041 || cape.getId() == 4042); // Item\r\n\t\tif (hat != null) {\r\n\t\t\tdrawItem(0, hat);\r\n\t\t} else {\r\n\t\t\tclearBodyPart(0);\r\n\t\t}\r\n\t\tif (cape != null) {\r\n\t\t\tdrawItem(1, cape);\r\n\t\t} else {\r\n\t\t\tclearBodyPart(1);\r\n\t\t}\r\n\t\tif (amulet != null) {\r\n\t\t\tdrawItem(2, amulet);\r\n\t\t} else {\r\n\t\t\tclearBodyPart(2);\r\n\t\t}\r\n\t\tif (!ridingMinecart) {\r\n\t\t\tif (weapon != null) {\r\n\t\t\t\tdrawItem(3, weapon);\r\n\t\t\t} else {\r\n\t\t\t\tclearBodyPart(3);\r\n\t\t\t}\r\n\t\t\tif (shield != null) {\r\n\t\t\t\tdrawItem(5, shield);\r\n\t\t\t} else {\r\n\t\t\t\tclearBodyPart(5);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tclearBodyPart(5);\r\n\t\t\tdrawClothes(3, 82);\r\n\t\t}\r\n\t\tif (chest != null) {\r\n\t\t\tdrawItem(4, chest);\r\n\t\t} else {\r\n\t\t\tdrawClothes(4, getTorso().getLook());\r\n\t\t}\r\n\t\tif (chest != null && chest.getDefinition().getConfiguration(ItemConfigParser.REMOVE_SLEEVES, false)) {\r\n\t\t\tclearBodyPart(6);\r\n\t\t} else {\r\n\t\t\tdrawClothes(6, getArms().getLook());\r\n\t\t}\r\n\t\tif (legs != null) {\r\n\t\t\tdrawItem(7, legs);\r\n\t\t} else {\r\n\t\t\tdrawClothes(7, getLegs().getLook());\r\n\t\t}\r\n\t\tif ((hat != null && hat.getDefinition().getConfiguration(ItemConfigParser.REMOVE_HEAD, false)) || castleWarsHood) {\r\n\t\t\tclearBodyPart(8);\r\n\t\t} else {\r\n\t\t\tdrawClothes(8, getHair().getLook());\r\n\t\t}\r\n\t\tif (hands != null) {\r\n\t\t\tdrawItem(9, hands);\r\n\t\t} else {\r\n\t\t\tdrawClothes(9, getWrists().getLook());\r\n\t\t}\r\n\t\tif (feet != null) {\r\n\t\t\tdrawItem(10, feet);\r\n\t\t} else {\r\n\t\t\tdrawClothes(10, getFeet().getLook());\r\n\t\t}\r\n\t\tif (hat != null && hat.getDefinition().getConfiguration(ItemConfigParser.REMOVE_BEARD, false)) {\r\n\t\t\tclearBodyPart(11);\r\n\t\t} else {\r\n\t\t\tdrawClothes(11, getBeard().getLook());\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rides a mine cart.\r\n\t */\r\n\tpublic void rideCart(boolean ride) {\r\n\t\tif (!ride) {\r\n\t\t\tsetAnimations();\r\n\t\t} else {\r\n\t\t\tplayer.getAppearance().setAnimations(Animation.create(2148));\r\n\t\t}\r\n\t\tplayer.getAppearance().setRidingMinecart(ride);\r\n\t\tplayer.getAppearance().sync();\r\n\t}\r\n\r\n\t/**\r\n\t * Flys a gnome copter.\r\n\t */\r\n\tpublic void flyCopter() {\r\n\t\tplayer.animate(Animation.create(8956));\r\n\t\tplayer.getEquipment().replace(new Item(12842), 3);\r\n\t\tplayer.getAppearance().setStandAnimation(8964);\r\n\t\tplayer.getAppearance().setWalkAnimation(8961);\r\n\t\tplayer.getAppearance().setRunAnimation(8963);\r\n\t\tplayer.getAppearance().setTurn180(8963);\r\n\t\tplayer.getAppearance().setTurn90ccw(8963);\r\n\t\tplayer.getAppearance().setTurn90cw(8963);\r\n\t\tplayer.getAppearance().setStandTurnAnimation(8963);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the player.\r\n\t * @return The player.\r\n\t */\r\n\tpublic Player getPlayer() {\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the hair body part.\r\n\t * @return the hair.\r\n\t */\r\n\tpublic BodyPart getHair() {\r\n\t\treturn appearanceCache[AppearanceCache.HAIR];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the beard body part.\r\n\t * @return the beard.\r\n\t */\r\n\tpublic BodyPart getBeard() {\r\n\t\treturn appearanceCache[AppearanceCache.FACIAL_HAIR];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the torso body part.\r\n\t * @return the torso.\r\n\t */\r\n\tpublic BodyPart getTorso() {\r\n\t\treturn appearanceCache[AppearanceCache.TORSO];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the arms body part.\r\n\t * @return the body part.\r\n\t */\r\n\tpublic BodyPart getArms() {\r\n\t\treturn appearanceCache[AppearanceCache.ARMS];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the wrist part part.\r\n\t * @return the body part.\r\n\t */\r\n\tpublic BodyPart getWrists() {\r\n\t\treturn appearanceCache[AppearanceCache.WRISTS];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the skin part.\r\n\t * @return the part.\r\n\t */\r\n\tpublic BodyPart getSkin() {\r\n\t\treturn appearanceCache[AppearanceCache.WRISTS];\r\n\t}\r\n\r\n\t/**\r\n\t * Getsthe leg body parts.\r\n\t * @return the legs.\r\n\t */\r\n\tpublic BodyPart getLegs() {\r\n\t\treturn appearanceCache[AppearanceCache.LEGS];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the feet body parts.\r\n\t * @return the feet.\r\n\t */\r\n\tpublic BodyPart getFeet() {\r\n\t\treturn appearanceCache[AppearanceCache.FEET];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the stand animation.\r\n\t * @return the animation.\r\n\t */\r\n\tpublic int getStandAnimation() {\r\n\t\treturn animationCache[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to set the stand animation.\r\n\t * @param animation\r\n\t */\r\n\tpublic void setStandAnimation(int animation) {\r\n\t\tanimationCache[0] = animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the standing turn animation.\r\n\t * @return the animation.\r\n\t */\r\n\tpublic int getStandTurnAnimation() {\r\n\t\treturn animationCache[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the standing turn animation.\r\n\t */\r\n\tpublic void setStandTurnAnimation(int animation) {\r\n\t\tanimationCache[1] = animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the walk animation.\r\n\t * @return the animation.\r\n\t */\r\n\tpublic int getWalkAnimation() {\r\n\t\treturn animationCache[2];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the walk animation.\r\n\t * @param animation the animation.\r\n\t */\r\n\tpublic void setWalkAnimation(int animation) {\r\n\t\tanimationCache[2] = animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the turning 180 animation.\r\n\t * @return the animation.\r\n\t */\r\n\tpublic int getTurn180() {\r\n\t\treturn animationCache[3];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the tunring 180 animation.\r\n\t * @param animation the animation.\r\n\t */\r\n\tpublic void setTurn180(int animation) {\r\n\t\tanimationCache[3] = animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the turn90cw animation.\r\n\t * @return the animation.\r\n\t */\r\n\tpublic int getTurn90cw() {\r\n\t\treturn animationCache[4];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the turn90cw animation.\r\n\t * @param animation the animation.\r\n\t */\r\n\tpublic void setTurn90cw(int animation) {\r\n\t\tanimationCache[4] = animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the turn90ccw animation.\r\n\t * @return the animation.\r\n\t */\r\n\tpublic int getTurn90ccw() {\r\n\t\treturn animationCache[5];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets thr turn90cww animation.\r\n\t * @param animation\r\n\t */\r\n\tpublic void setTurn90ccw(int animation) {\r\n\t\tanimationCache[5] = animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the run animation.\r\n\t * @return the animation.\r\n\t */\r\n\tpublic int getRunAnimation() {\r\n\t\treturn animationCache[6];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the running animation.\r\n\t * @param animation the animation.\r\n\t */\r\n\tpublic void setRunAnimation(int animation) {\r\n\t\tanimationCache[6] = animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the render animation id.\r\n\t * @return The render animation id.\r\n\t */\r\n\tpublic int getRenderAnimation() {\r\n\t\treturn renderAnimationId;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to set the default animations.\r\n\t */\r\n\tpublic void setDefaultAnimations() {\r\n\t\tfor (int i = 0; i < animationCache.length; i++) {\r\n\t\t\tanimationCache[i] = AppearanceCache.ANIMATIONS[i];\r\n\t\t}\r\n\t\trenderAnimationId = 1426;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the skull icon.\r\n\t * @return the icon.\r\n\t */\r\n\tpublic int getSkullIcon() {\r\n\t\treturn iconCache[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the skull icon.\r\n\t * @param icon the icon.\r\n\t */\r\n\tpublic void setSkullIcon(int icon) {\r\n\t\ticonCache[0] = icon;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the head icon.\r\n\t * @return the icon.\r\n\t */\r\n\tpublic int getHeadIcon() {\r\n\t\treturn iconCache[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the head icon.\r\n\t * @param icon the icon.\r\n\t */\r\n\tpublic void setHeadIcon(int icon) {\r\n\t\tthis.iconCache[1] = icon;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the gender.\r\n\t * @return The gender.\r\n\t */\r\n\tpublic Gender getGender() {\r\n\t\treturn gender;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to change the gender of a player.\r\n\t * @param gender the gender.\r\n\t */\r\n\tpublic void changeGender(Gender gender) {\r\n\t\tsetGender(gender);\r\n\t\tsync();\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to set the gender.\r\n\t * @param gender the gender.\r\n\t */\r\n\tpublic void setGender(final Gender gender) {\r\n\t\tthis.gender = gender;\r\n\t\tthis.appearanceCache = gender.generateCache();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the value {@code True} if male.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isMale() {\r\n\t\treturn gender == Gender.MALE;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the npc id.\r\n\t * @return the npc id.\r\n\t */\r\n\tpublic int getNpcId() {\r\n\t\treturn npcId;\r\n\t}\r\n\r\n\t/**\r\n\t * If the player's appearance is a NPC.\r\n\t * @return If the player's appearance is a NPC {@code true}.\r\n\t */\r\n\tpublic boolean isNpc() {\r\n\t\treturn npcId != -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the appearanceCache.\r\n\t * @return The appearanceCache.\r\n\t */\r\n\tpublic BodyPart[] getAppearanceCache() {\r\n\t\treturn appearanceCache;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the animationCache.\r\n\t * @return The animationCache.\r\n\t */\r\n\tpublic int[] getAnimationCache() {\r\n\t\treturn animationCache;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bodyParts.\r\n\t * @return The bodyParts.\r\n\t */\r\n\tpublic int[] getBodyParts() {\r\n\t\treturn bodyParts;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the ridingMinecart.\r\n\t * @return The ridingMinecart.\r\n\t */\r\n\tpublic boolean isRidingMinecart() {\r\n\t\treturn ridingMinecart;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the ridingMinecart.\r\n\t * @param ridingMinecart The ridingMinecart to set.\r\n\t */\r\n\tpublic void setRidingMinecart(boolean ridingMinecart) {\r\n\t\tthis.ridingMinecart = ridingMinecart;\r\n\t}\r\n\r\n\t/**\r\n\t * Represents a class of cached appearance related information.\r\n\t * @author 'Vexia\r\n\t */\r\n\tpublic static class AppearanceCache {\r\n\r\n\t\t/**\r\n\t\t * Represents the appearance animations.\r\n\t\t */\r\n\t\tpublic static final int[] ANIMATIONS = new int[] { 0x328, 0x337, 0x333, 0x334, 0x335, 0x336, 0x338 };\r\n\r\n\t\t/**\r\n\t\t * Represents the index hair apperance is cached at.\r\n\t\t */\r\n\t\tpublic static final int HAIR = 0;\r\n\r\n\t\t/**\r\n\t\t * Represents the index facial hair appearance is cached at.\r\n\t\t */\r\n\t\tpublic static final int FACIAL_HAIR = 1;\r\n\r\n\t\t/**\r\n\t\t * Represents the index torso appearance is cached at.\r\n\t\t */\r\n\t\tpublic static final int TORSO = 2;\r\n\r\n\t\t/**\r\n\t\t * Represents the index arm appearance is cached at.\r\n\t\t */\r\n\t\tpublic static final int ARMS = 3;\r\n\r\n\t\t/**\r\n\t\t * Represents the index wrist appearance is cached at.\r\n\t\t */\r\n\t\tpublic static final int WRISTS = 4;\r\n\r\n\t\t/**\r\n\t\t * Represents the index leg appearance is cached at.\r\n\t\t */\r\n\t\tpublic static final int LEGS = 5;\r\n\r\n\t\t/**\r\n\t\t * Represents the index feet appearance is cached at.\r\n\t\t */\r\n\t\tpublic static final int FEET = 6;\r\n\r\n\t\t/**\r\n\t\t * Represents the index hair color is cached at.\r\n\t\t */\r\n\t\tpublic static final int HAIR_COLOR = 0;\r\n\r\n\t\t/**\r\n\t\t * Represents the index torso color is cached at.\r\n\t\t */\r\n\t\tpublic static final int TORSO_COLOR = 1;\r\n\r\n\t\t/**\r\n\t\t * Represents the index leg color is cached at.\r\n\t\t */\r\n\t\tpublic static final int LEG_COLOR = 2;\r\n\r\n\t\t/**\r\n\t\t * Represents the index feet color is cached at.\r\n\t\t */\r\n\t\tpublic static final int FEET_COLOR = 3;\r\n\r\n\t\t/**\r\n\t\t * Represents the index skin color is cached at.\r\n\t\t */\r\n\t\tpublic static final int SKIN_COLOR = 4;\r\n\r\n\t\t/**\r\n\t\t * The player's stand animation.\r\n\t\t */\r\n\t\tprivate static final int STAND_ANIM = 0x328;\r\n\r\n\t\t/**\r\n\t\t * The player's turn animation for standing.\r\n\t\t */\r\n\t\tprivate static final int STAND_TURN_ANIM = 0x337;\r\n\r\n\t\t/**\r\n\t\t * The player's walk animation.\r\n\t\t */\r\n\t\tpublic static final int WALK_ANIM = 0x333;\r\n\r\n\t\t/**\r\n\t\t * The player's turn 180 degrees animation.\r\n\t\t */\r\n\t\tprivate static final int TURN_180_AIM = 0x334;\r\n\r\n\t\t/**\r\n\t\t * The player's turn 90 degrees animation.\r\n\t\t */\r\n\t\tprivate static final int TURN_90_CW = 0x335;\r\n\r\n\t\t/**\r\n\t\t * The player's turn 90 degrees animation.\r\n\t\t */\r\n\t\tprivate static final int TUNR_90_CWW = 0x336;\r\n\r\n\t\t/**\r\n\t\t * The player's run animation.\r\n\t\t */\r\n\t\tprivate static final int RUN_ANIM = 0x338;\r\n\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/appearance/Appearance.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/appearance/Appearance.java	(date 1597089529773)
@@ -11,6 +11,8 @@
 import core.game.system.config.ItemConfigParser;
 import core.game.world.update.flag.context.Animation;
 import core.game.world.update.flag.player.AppearanceFlag;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 
@@ -82,6 +84,14 @@
 		}
 	}
 
+	public void parse(JSONObject appearance){
+		gender = gender.asByte(Byte.parseByte(appearance.get("gender").toString()));
+		JSONArray appCache = (JSONArray) appearance.get("appearance_cache");
+		for(int i = 0; i < appearanceCache.length; i++){
+			(appearanceCache[i]).parse((JSONObject) appCache.get(i));
+		}
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		gender = gender.asByte(buffer.get());
Index: Server/src/main/java/Server/core/game/node/entity/player/link/GlobalData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.game.content.global.GodBook;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Represents the quest data to save.\r\n * @author 'Vexia\r\n */\r\npublic final class GlobalData implements SavingModule {\r\n\r\n\t/**\r\n\t * Represents the tutorial stage.\r\n\t */\r\n\tprivate int tutorialStage;\r\n\r\n\t/**\r\n\t * Represents the home teleport delay.\r\n\t */\r\n\tprivate long homeTeleportDelay;\r\n\r\n\t/**\r\n\t * Represents the assist time.\r\n\t */\r\n\tprivate long assistTime;\r\n\r\n\t/**\r\n\t * Represents the last chat ping.\r\n\t */\r\n\tprivate long chatPing;\r\n\r\n\t/**\r\n\t * Represents the time between tutor claims.\r\n\t */\r\n\tprivate long tutorClaim;\r\n\r\n\t/**\r\n\t * Represents if luthas has given us a task.\r\n\t */\r\n\tprivate boolean luthasTask;\r\n\r\n\t/**\r\n\t * Represents the stahsed karamja bnnanas.\r\n\t */\r\n\tprivate int karamjaBananas;\r\n\r\n\tprivate int savedX;\r\n\t\r\n\tprivate int savedY;\r\n\t\r\n\tprivate int savedH;\r\n\t\r\n\tprivate int taskAmount;\r\n\t\r\n\tprivate int taskPoints;\r\n\t/**\r\n\t * Represents the silk steal time.\r\n\t */\r\n\tprivate long silkSteal;\r\n\r\n\t/**\r\n\t * Represents the assist experience.\r\n\t */\r\n\tprivate double[] assistExperience = new double[9];\r\n\r\n\t/**\r\n\t * Represents the strong hold rewards.\r\n\t */\r\n\tprivate boolean[] strongHoldRewards = new boolean[4];\r\n\r\n\t/**\r\n\t * Represents if the lumbridge rope has been tied;\r\n\t */\r\n\tprivate boolean lumbridgeRope;\r\n\r\n\t/**\r\n\t * Represents if the player has spoken to the apprentice.\r\n\t */\r\n\tprivate boolean apprentice;\r\n\r\n\t/**\r\n\t * Represents if the player has spoken to the friz glass blower.\r\n\t */\r\n\tprivate boolean fritzGlass;\r\n\r\n\t/**\r\n\t * Represents the zaff npc staff amount.\r\n\t */\r\n\tprivate int zafAmount = 8;\r\n\r\n\t/**\r\n\t * Represents the time until you can buy from zaff.\r\n\t */\r\n\tprivate long zafTime;\r\n\r\n\t/**\r\n\t * Represents if you're a wydin employee.\r\n\t */\r\n\tprivate boolean wydinEmployee;\r\n\r\n\t/**\r\n\t * Represents if the draynor recording has been seen.\r\n\t */\r\n\tprivate boolean draynorRecording;\r\n\r\n\t/**\r\n\t * Represents if the ge tutorial has been done.\r\n\t */\r\n\tprivate boolean geTutorial;\r\n\r\n\t/**\r\n\t * Represents the npc id of the essence teleporter.\r\n\t */\r\n\tprivate int essenceTeleporter;\r\n\r\n\t/**\r\n\t * The amount of recoil damage left (ring of recoil).\r\n\t */\r\n\tprivate int recoilDamage = 40;\r\n\r\n\t/**\r\n\t * The delay between the next use of double exp.\r\n\t */\r\n\tprivate long doubleExpDelay;\r\n\r\n\t/**\r\n\t * The delay between the next use of increased drops.\r\n\t */\r\n\tprivate long dropDelay;\r\n\r\n\t/**\r\n\t * If joined the monastery.\r\n\t */\r\n\tprivate boolean joinedMonastery;\r\n\r\n\t/**\r\n\t * If the player has read each plague\r\n\t */\r\n\tprivate boolean[] readPlaques = new boolean[7];\r\n\r\n\t/**\r\n\t * The ring of forging uses.\r\n\t */\r\n\tprivate int forgingUses;\r\n\r\n\t/**\r\n\t * The ectofuntus charges.\r\n\t */\r\n\tprivate int ectoCharges;\r\n\r\n\t/**\r\n\t * The bracelet of clay uses.\r\n\t */\r\n\tprivate int braceletClayUses;\r\n\r\n\t/**\r\n\t * The abbyss data.\r\n\t */\r\n\tprivate boolean[] abyssData = new boolean[4];\r\n\r\n\t/**\r\n\t * The amount of decays for the rc type.\r\n\t */\r\n\tprivate final int[] rcDecays = new int[3];\r\n\r\n\t/**\r\n\t * If the death screen is disabled.\r\n\t */\r\n\tprivate boolean disableDeathScreen;\r\n\r\n\t/**\r\n\t * The stage of the player safety test.\r\n\t */\r\n\tprivate int playerTestStage;\r\n\r\n\t/**\r\n\t * The delay between charming usage.\r\n\t */\r\n\tprivate long charmingDelay;\r\n\r\n\t/**\r\n\t * The fairy ring travel log.\r\n\t */\r\n\tprivate boolean[] travelLogs = new boolean[45];\r\n\r\n\t/**\r\n\t * The completed god books.\r\n\t */\r\n\tprivate boolean[] godBooks = new boolean[3];\r\n\r\n\t/**\r\n\t * The god book you are currently filling.\r\n\t */\r\n\tprivate int godBook = -1;\r\n\r\n\t/**\r\n\t * If the player see's news or not.\r\n\t */\r\n\tprivate boolean disableNews;\r\n\r\n\t/**\r\n\t * The completed god pages.\r\n\t */\r\n\tprivate boolean[] godPages = new boolean[4];\r\n\r\n\t/**\r\n\t * The time until the overcharge delay can be used.\r\n\t */\r\n\tprivate long overChargeDelay;\r\n\r\n\t/**\r\n\t * The boss kill counter.\r\n\t */\r\n\tprivate int[] bossCounters = new int[25];\r\n\r\n\t/**\r\n\t * The barrows loot counter.\r\n\t */\r\n\tprivate int barrowsLoots;\r\n\r\n\t/**\r\n\t * The amount of lootshare points.\r\n\t */\r\n\tprivate int lootSharePoints;\r\n\r\n\t/**\r\n\t * The delay between the next decrease of lootshare.\r\n\t */\r\n\tprivate long lootShareDelay;\r\n\t\r\n\t/**\r\n\t * The double exp time.\r\n\t */\r\n\tprivate long doubleExp;\r\n\t\r\n\t/**\r\n\t * If Ava's device should randomly collect loot.\r\n\t */\r\n\tprivate boolean avasDevice;\r\n\t\r\n\t/**\r\n\t * The delay of the global teleporter system.\r\n\t */\r\n\tprivate long globalTeleporterDelay;\r\n\t\r\n\t/**\r\n\t * The delay until you can exchange the star sprite again.\r\n\t */\r\n\tprivate long starSpriteDelay;\r\n\t\r\n\t/**\r\n\t * The run replenish delay.\r\n\t */\r\n\tprivate long runReplenishDelay;\r\n\t\r\n\t/**\r\n\t * The run replenish charges.\r\n\t */\r\n\tprivate int runReplenishCharges;\r\n\t\r\n\t/**\r\n\t * The amount of low alchemy charges.\r\n\t */\r\n\tprivate int lowAlchemyCharges;\r\n\t\r\n\t/**\r\n\t * The low alchemy delay.\r\n\t */\r\n\tprivate long lowAlchemyDelay;\r\n\t\r\n\t/**\r\n\t * Is the bone crusher perk enabled.\r\n\t */\r\n\tprivate boolean enableBoneCrusher = false;\r\n\t\r\n\t/**\r\n\t * Is the coin machine perk enabled.\r\n\t */\r\n\tprivate boolean enableCoinMachine = false;\r\n\t\r\n\t/**\r\n\t * Is the charm collector perk enabled.\r\n\t */\r\n\tprivate boolean enableCharmCollector = false;\r\n\t\r\n\t/**\r\n\t * The magic skill cape delay.\r\n\t */\r\n\tprivate long magicSkillCapeDelay;\r\n\t\r\n\t/**\r\n\t * The hunter cape delay.\r\n\t */\r\n\tprivate long hunterCapeDelay;\r\n\t\r\n\t/**\r\n\t * The hunter cape charges.\r\n\t */\r\n\tprivate int hunterCapeCharges;\r\n\r\n\tprivate long minigameTeleportDelay;\r\n\r\n\t/**\r\n\t * Whether or not randoms are enabled\r\n\t */\r\n\tprivate boolean macroDisabled = false;\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tSavedData.save(buffer, tutorialStage, 1);\r\n\t\tSavedData.save(buffer, homeTeleportDelay, 2);\r\n\t\tSavedData.save(buffer, lumbridgeRope, 3);\r\n\t\tSavedData.save(buffer, apprentice, 4);\r\n\t\tSavedData.save(buffer, assistTime, 6);\r\n\t\tSavedData.save(buffer, assistExperience, 7);\r\n\t\tSavedData.save(buffer, strongHoldRewards, 8);\r\n\t\tSavedData.save(buffer, chatPing, 9);\r\n\t\tSavedData.save(buffer, tutorClaim, 10);\r\n\t\tSavedData.save(buffer, luthasTask, 11);\r\n\t\tSavedData.save(buffer, (byte) karamjaBananas, 12);\r\n\t\tSavedData.save(buffer, silkSteal, 13);\r\n\t\tSavedData.save(buffer, (byte) zafAmount, 14);\r\n\t\tSavedData.save(buffer, zafTime, 15);\r\n\t\tSavedData.save(buffer, fritzGlass, 16);\r\n\t\tSavedData.save(buffer, wydinEmployee, 17);\r\n\t\tSavedData.save(buffer, draynorRecording, 18);\r\n\t\tSavedData.save(buffer, geTutorial, 19);\r\n\t\tSavedData.save(buffer, essenceTeleporter, 20);\r\n\t\tif (recoilDamage != 40) {\r\n\t\t\tSavedData.save(buffer, (byte) recoilDamage, 21);\r\n\t\t}\r\n\t\tSavedData.save(buffer, doubleExpDelay, 22);\r\n\t\tSavedData.save(buffer, joinedMonastery, 23);\r\n\t\tSavedData.save(buffer, readPlaques, 25);\r\n\t\tSavedData.save(buffer, forgingUses, 26);\r\n\t\tSavedData.save(buffer, getEctoCharges(), 27);\r\n\t\t// SavedData.save(buffer, xpLock, 28);\r\n\t\tSavedData.save(buffer, braceletClayUses, 29);\r\n\t\tSavedData.save(buffer, dropDelay, 30);\r\n\t\tbuffer.put((byte) 31);\r\n\t\tbuffer.put((byte) abyssData.length);\r\n\t\tfor (int i = 0; i < abyssData.length; i++) {\r\n\t\t\tbuffer.put((byte) (abyssData[i] ? 1 : 0));\r\n\t\t}\r\n\t\tbuffer.put((byte) 32);\r\n\t\tfor (int i = 0; i < rcDecays.length; i++) {\r\n\t\t\tbuffer.put((byte) rcDecays[i]);\r\n\t\t}\r\n\t\tSavedData.save(buffer, disableDeathScreen, 33);\r\n\t\tSavedData.save(buffer, playerTestStage, 34);\r\n\t\tSavedData.save(buffer, charmingDelay, 35);\r\n\t\tbuffer.put((byte) 36);\r\n\t\tbuffer.put(((byte) travelLogs.length));\r\n\t\tfor (int i = 0; i < travelLogs.length; i++) {\r\n\t\t\tbuffer.put((byte) (travelLogs[i] ? 1 : 0));\r\n\t\t}\r\n\t\tbuffer.put((byte) 37);\r\n\t\tbuffer.put((byte) godBooks.length);\r\n\t\tfor (int i = 0; i < godBooks.length; i++) {\r\n\t\t\tbuffer.put(((byte) (godBooks[i] ? 1 : 0)));\r\n\t\t}\r\n\t\tif (godBook != -1) {\r\n\t\t\tbuffer.put((byte) 38).putInt(godBook);\r\n\t\t}\r\n\t\tSavedData.save(buffer, disableNews, 39);\r\n\t\tif (godPages != new boolean[4]) {\r\n\t\t\tbuffer.put((byte) 40);\r\n\t\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\t\tbuffer.put((byte) (godPages[i] ? 1 : 0));\r\n\t\t\t}\r\n\t\t}\r\n\t\tSavedData.save(buffer, overChargeDelay, 41);\r\n\t\tSavedData.save(buffer, bossCounters, 42);\r\n\t\tSavedData.save(buffer, barrowsLoots, 43);\r\n\t\tSavedData.save(buffer, lootSharePoints, 44);\r\n\t\tSavedData.save(buffer, lootShareDelay, 45);\r\n\t\tSavedData.save(buffer, doubleExp, 46);\r\n\t\tSavedData.save(buffer, avasDevice, 47);\r\n\t\tSavedData.save(buffer, globalTeleporterDelay, 48);\r\n\t\tSavedData.save(buffer, starSpriteDelay, 49);\r\n\t\tSavedData.save(buffer, runReplenishDelay, 50);\r\n\t\tSavedData.save(buffer,  runReplenishCharges, 51);\r\n\t\tSavedData.save(buffer, lowAlchemyCharges, 52);\r\n\t\tSavedData.save(buffer, lowAlchemyDelay, 53);\r\n\t\tSavedData.save(buffer, enableBoneCrusher, 54);\r\n\t\tSavedData.save(buffer, enableCoinMachine, 55);\r\n\t\tSavedData.save(buffer, magicSkillCapeDelay, 56);\r\n\t\tSavedData.save(buffer, hunterCapeDelay, 57);\r\n\t\tSavedData.save(buffer, hunterCapeCharges, 58);\r\n\t\tSavedData.save(buffer, enableCharmCollector, 59);\r\n\t\tSavedData.save(buffer, minigameTeleportDelay, 60);\r\n\t\tSavedData.save(buffer, getSavedX(), 61);\r\n\t\tSavedData.save(buffer, getSavedY(), 62);\r\n\t\tSavedData.save(buffer, getSavedH(), 63);\r\n\t\tSavedData.save(buffer, getTaskAmount(), 64);\r\n\t\tSavedData.save(buffer, getTaskPoints(), 65);\r\n\t\tSavedData.save(buffer, macroDisabled,66);\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\tint size;\r\n\t\twhile ((opcode = buffer.get()) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\ttutorialStage = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\thomeTeleportDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tlumbridgeRope = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tapprentice = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tbuffer.getLong(); // Used to be skull time.\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tassistTime = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tfor (int i = 0; i < assistExperience.length; i++) {\r\n\t\t\t\t\tassistExperience[i] = buffer.getDouble();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tfor (byte i = 0; i < strongHoldRewards.length; i++) {\r\n\t\t\t\t\tstrongHoldRewards[i] = SavedData.getBoolean(buffer.get());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tchatPing = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10:\r\n\t\t\t\ttutorClaim = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 11:\r\n\t\t\t\tluthasTask = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 12:\r\n\t\t\t\tkaramjaBananas = buffer.get();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13:\r\n\t\t\t\tsilkSteal = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 14:\r\n\t\t\t\tzafAmount = buffer.get();\r\n\t\t\t\t;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 15:\r\n\t\t\t\tzafTime = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16:\r\n\t\t\t\tfritzGlass = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17:\r\n\t\t\t\twydinEmployee = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 18:\r\n\t\t\t\tdraynorRecording = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 19:\r\n\t\t\t\tgeTutorial = SavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 20:\r\n\t\t\t\tessenceTeleporter = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 21:\r\n\t\t\t\trecoilDamage = buffer.get();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 22:\r\n\t\t\t\tdoubleExpDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 23:\r\n\t\t\t\tSavedData.getBoolean(buffer.get());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 24:// tyler fuckup.\r\n\t\t\t\tfor (int i = 0; i < 7; i++) {\r\n\t\t\t\t\tbuffer.get();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 25:\r\n\t\t\t\tfor (int i = 0; i < readPlaques.length; i++) {\r\n\t\t\t\t\treadPlaques[i] = buffer.get() == 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 26:\r\n\t\t\t\tforgingUses = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 27:\r\n\t\t\t\tsetEctoCharges(buffer.getInt());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 28:\r\n\t\t\t\t// xpLock = SavedData.getBoolean(buffer);\r\n\t\t\t\tSavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 29:\r\n\t\t\t\tbraceletClayUses = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 30:\r\n\t\t\t\tdropDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 31:\r\n\t\t\t\tsize = buffer.get();\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\tabyssData[i] = buffer.get() == 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32:\r\n\t\t\t\tfor (int i = 0; i < rcDecays.length; i++) {\r\n\t\t\t\t\trcDecays[i] = buffer.get();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 33:\r\n\t\t\t\tdisableDeathScreen = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 34:\r\n\t\t\t\tplayerTestStage = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 35:\r\n\t\t\t\tcharmingDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 36:\r\n\t\t\t\tbyte size1 = buffer.get();\r\n\t\t\t\tfor (int i = 0; i < size1; i++) {\r\n\t\t\t\t\ttravelLogs[i] = buffer.get() == 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37:\r\n\t\t\t\tsize = buffer.get();\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\tgodBooks[i] = buffer.get() == 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38:\r\n\t\t\t\tgodBook = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39:\r\n\t\t\t\tdisableNews = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40:\r\n\t\t\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\t\t\tgodPages[i] = buffer.get() == 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 41:\r\n\t\t\t\toverChargeDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 42:\r\n\t\t\t\tfor (int i = 0; i < bossCounters.length; i++) {\r\n\t\t\t\t\tbossCounters[i] = buffer.getInt();\r\n\t\t\t\t\tif (bossCounters[i] < 0) {\r\n\t\t\t\t\t\tbossCounters[i] = 127 + (bossCounters[i] * -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 43:\r\n\t\t\t\tbarrowsLoots = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 44:\r\n\t\t\t\tlootSharePoints = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 45:\r\n\t\t\t\tlootShareDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 46:\r\n\t\t\t\tdoubleExp = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 47:\r\n\t\t\t\tavasDevice = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48:\r\n\t\t\t\tglobalTeleporterDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49:\r\n\t\t\t\tstarSpriteDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50:\r\n\t\t\t\trunReplenishDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 51:\r\n\t\t\t\trunReplenishCharges = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 52:\r\n\t\t\t\tlowAlchemyCharges = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 53:\r\n\t\t\t\tlowAlchemyDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54:\r\n\t\t\t\tenableBoneCrusher = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55:\r\n\t\t\t\tenableCoinMachine = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 56:\r\n\t\t\t\tmagicSkillCapeDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 57:\r\n\t\t\t\thunterCapeDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 58:\r\n\t\t\t\thunterCapeCharges = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 59:\r\n\t\t\t\tenableCharmCollector = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 60:\r\n\t\t\t\tminigameTeleportDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 61:\r\n\t\t\t\tsetSavedX(buffer.getInt());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 62:\r\n\t\t\t\tsetSavedY(buffer.getInt());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 63:\r\n\t\t\t\tsetSavedH(buffer.getInt());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 64:\r\n\t\t\t\tsetTaskAmount(buffer.getInt());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65:\r\n\t\t\t\tsetTaskPoints(buffer.getInt());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 66:\r\n\t\t\t\tmacroDisabled = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void setSavedLocation(int x, int y, int z) {\r\n\t\tsetSavedX(x);\r\n\t\tsetSavedY(y);\r\n\t\tsetSavedH(z);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Sets the star sprite delay.\r\n\t * @param value The value.\r\n\t */\r\n\tpublic void setStarSpriteDelay(long value) {\r\n\t\tstarSpriteDelay = value;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gets the star sprite delay.\r\n\t * @return The star sprite delay.\r\n\t */\r\n\tpublic long getStarSpriteDelay() {\r\n\t\treturn starSpriteDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the travel logs.\r\n\t * @return the logs.\r\n\t */\r\n\tpublic boolean[] getTravelLogs() {\r\n\t\treturn travelLogs;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a travel log.\r\n\t * @param index the index.\r\n\t */\r\n\tpublic void removeTravelLog(int index) {\r\n\t\ttravelLogs[index] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if they have the travel log.\r\n\t * @param index the index.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasTravelLog(int index) {\r\n\t\treturn travelLogs[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a travel log.\r\n\t * @param index the index.\r\n\t */\r\n\tpublic void setTravelLog(int index) {\r\n\t\ttravelLogs[index] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the charming delay.\r\n\t * @param delay the delay.\r\n\t */\r\n\tpublic void setCharmingDelay(long delay) {\r\n\t\tthis.charmingDelay = delay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the charming delay.\r\n\t * @return the delay.\r\n\t */\r\n\tpublic long getCharmingDelay() {\r\n\t\treturn charmingDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the stage.\r\n\t * @return the stage.\r\n\t */\r\n\tpublic int getTestStage() {\r\n\t\treturn playerTestStage;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the test stage.\r\n\t * @param stage the stage.\r\n\t */\r\n\tpublic void setTestStage(int stage) {\r\n\t\tplayerTestStage = stage;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the tutorialStage.\r\n\t * @return The tutorialStage.\r\n\t */\r\n\tpublic int getTutorialStage() {\r\n\t\treturn tutorialStage;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the tutorialStage.\r\n\t * @param tutorialStage The tutorialStage to set.\r\n\t */\r\n\tpublic void setTutorialStage(int tutorialStage) {\r\n\t\tthis.tutorialStage = tutorialStage;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the homeTeleportDelay.\r\n\t * @return The homeTeleportDelay.\r\n\t */\r\n\tpublic long getHomeTeleportDelay() {\r\n\t\treturn homeTeleportDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the homeTeleportDelay.\r\n\t * @param homeTeleportDelay The homeTeleportDelay to set.\r\n\t */\r\n\tpublic void setHomeTeleportDelay(long homeTeleportDelay) {\r\n\t\tthis.homeTeleportDelay = homeTeleportDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lumbridgeRope.\r\n\t * @return The lumbridgeRope.\r\n\t */\r\n\tpublic boolean hasTiedLumbridgeRope() {\r\n\t\treturn lumbridgeRope;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the lumbridgeRope.\r\n\t * @param lumbridgeRope The lumbridgeRope to set.\r\n\t */\r\n\tpublic void setLumbridgeRope(boolean lumbridgeRope) {\r\n\t\tthis.lumbridgeRope = lumbridgeRope;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the apprentice.\r\n\t * @return The apprentice.\r\n\t */\r\n\tpublic boolean hasSpokenToApprentice() {\r\n\t\treturn apprentice;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the apprentice.\r\n\t * @param apprentice The apprentice to set.\r\n\t */\r\n\tpublic void setApprentice(boolean apprentice) {\r\n\t\tthis.apprentice = apprentice;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the assistTime.\r\n\t * @return The assistTime.\r\n\t */\r\n\tpublic long getAssistTime() {\r\n\t\treturn assistTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the assistTime.\r\n\t * @param assistTime The assistTime to set.\r\n\t */\r\n\tpublic void setAssistTime(long assistTime) {\r\n\t\tthis.assistTime = assistTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the assistExperience.\r\n\t * @return The assistExperience.\r\n\t */\r\n\tpublic double[] getAssistExperience() {\r\n\t\treturn assistExperience;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the assistExperience.\r\n\t * @param assistExperience The assistExperience to set.\r\n\t */\r\n\tpublic void setAssistExperience(double[] assistExperience) {\r\n\t\tthis.assistExperience = assistExperience;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the strongHoldRewards.\r\n\t * @return The strongHoldRewards.\r\n\t */\r\n\tpublic boolean[] getStrongHoldRewards() {\r\n\t\treturn strongHoldRewards;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the strong hold reward value.\r\n\t * @param reward the reward.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasStrongholdReward(int reward) {\r\n\t\treturn strongHoldRewards[reward - 1];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the chatPing.\r\n\t * @return The chatPing.\r\n\t */\r\n\tpublic long getChatPing() {\r\n\t\treturn chatPing;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the chatPing.\r\n\t * @param chatPing The chatPing to set.\r\n\t */\r\n\tpublic void setChatPing(long chatPing) {\r\n\t\tthis.chatPing = chatPing;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the tutorClaim.\r\n\t * @return The tutorClaim.\r\n\t */\r\n\tpublic long getTutorClaim() {\r\n\t\treturn tutorClaim;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the tutorClaim.\r\n\t * @param tutorClaim The tutorClaim to set.\r\n\t */\r\n\tpublic void setTutorClaim(long tutorClaim) {\r\n\t\tthis.tutorClaim = tutorClaim;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the luthasTask.\r\n\t * @return The luthasTask.\r\n\t */\r\n\tpublic boolean isLuthasTask() {\r\n\t\treturn luthasTask;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the luthasTask.\r\n\t * @param luthasTask The luthasTask to set.\r\n\t */\r\n\tpublic void setLuthasTask(boolean luthasTask) {\r\n\t\tthis.luthasTask = luthasTask;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the karamjaBannanas.\r\n\t * @return The karamjaBannanas.\r\n\t */\r\n\tpublic int getKaramjaBananas() {\r\n\t\treturn karamjaBananas;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the karamjaBannanas.\r\n\t * @param karamjaBannanas The karamjaBannanas to set.\r\n\t */\r\n\tpublic void setKaramjaBannanas(int karamjaBannanas) {\r\n\t\tthis.karamjaBananas = karamjaBannanas;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the silkSteal.\r\n\t * @return The silkSteal.\r\n\t */\r\n\tpublic long getSilkSteal() {\r\n\t\treturn silkSteal;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the silkSteal.\r\n\t * @param silkSteal The silkSteal to set.\r\n\t */\r\n\tpublic void setSilkSteal(long silkSteal) {\r\n\t\tthis.silkSteal = silkSteal;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the zaffAmount.\r\n\t * @return The zaffAmount.\r\n\t */\r\n\tpublic int getZaffAmount() {\r\n\t\treturn zafAmount;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the zaffAmount.\r\n\t * @param zaffAmount The zaffAmount to set.\r\n\t */\r\n\tpublic void setZaffAmount(int zaffAmount) {\r\n\t\tthis.zafAmount = zaffAmount;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the zaffTime.\r\n\t * @return The zaffTime.\r\n\t */\r\n\tpublic long getZafTime() {\r\n\t\treturn zafTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the draynorRecording.\r\n\t * @return The draynorRecording.\r\n\t */\r\n\tpublic boolean isDraynorRecording() {\r\n\t\treturn draynorRecording;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the draynorRecording.\r\n\t * @param draynorRecording The draynorRecording to set.\r\n\t */\r\n\tpublic void setDraynorRecording(boolean draynorRecording) {\r\n\t\tthis.draynorRecording = draynorRecording;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the wydinEmployee.\r\n\t * @return The wydinEmployee.\r\n\t */\r\n\tpublic boolean isWydinEmployee() {\r\n\t\treturn wydinEmployee;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the wydinEmployee.\r\n\t * @param wydinEmployee The wydinEmployee to set.\r\n\t */\r\n\tpublic void setWydinEmployee(boolean wydinEmployee) {\r\n\t\tthis.wydinEmployee = wydinEmployee;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the zaffTime.\r\n\t * @param zaffTime The zaffTime to set.\r\n\t */\r\n\tpublic void setZafTime(long zaffTime) {\r\n\t\tthis.zafTime = zaffTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the frizGlass.\r\n\t * @return The frizGlass.\r\n\t */\r\n\tpublic boolean isFritzGlass() {\r\n\t\treturn fritzGlass;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the frizGlass.\r\n\t * @param frizGlass The frizGlass to set.\r\n\t */\r\n\tpublic void setFritzGlass(boolean frizGlass) {\r\n\t\tthis.fritzGlass = frizGlass;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the geTutorial.\r\n\t * @return The geTutorial.\r\n\t */\r\n\tpublic boolean isGeTutorial() {\r\n\t\treturn geTutorial;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the geTutorial.\r\n\t * @param geTutorial The geTutorial to set.\r\n\t */\r\n\tpublic void setGeTutorial(boolean geTutorial) {\r\n\t\tthis.geTutorial = geTutorial;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the essenceTeleporter.\r\n\t * @return The essenceTeleporter.\r\n\t */\r\n\tpublic int getEssenceTeleporter() {\r\n\t\treturn essenceTeleporter;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the essenceTeleporter.\r\n\t * @param essenceTeleporter The essenceTeleporter to set.\r\n\t */\r\n\tpublic void setEssenceTeleporter(int essenceTeleporter) {\r\n\t\tthis.essenceTeleporter = essenceTeleporter;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the recoilDamage.\r\n\t * @return The recoilDamage.\r\n\t */\r\n\tpublic int getRecoilDamage() {\r\n\t\treturn recoilDamage;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the recoilDamage.\r\n\t * @param recoilDamage The recoilDamage to set.\r\n\t */\r\n\tpublic void setRecoilDamage(int recoilDamage) {\r\n\t\tthis.recoilDamage = recoilDamage;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the doubleExpDelay.\r\n\t * @return The doubleExpDelay.\r\n\t */\r\n\tpublic long getDoubleExpDelay() {\r\n\t\treturn doubleExpDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the doubleExpDelay.\r\n\t * @param doubleExpDelay The doubleExpDelay to set.\r\n\t */\r\n\tpublic void setDoubleExpDelay(long doubleExpDelay) {\r\n\t\tthis.doubleExpDelay = doubleExpDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the joinedMonastery.\r\n\t * @return The joinedMonastery.\r\n\t */\r\n\tpublic boolean isJoinedMonastery() {\r\n\t\treturn joinedMonastery;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the joinedMonastery.\r\n\t * @param joinedMonastery The joinedMonastery to set.\r\n\t */\r\n\tpublic void setJoinedMonastery(boolean joinedMonastery) {\r\n\t\tthis.joinedMonastery = joinedMonastery;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the read plagues.\r\n\t * @return The plague\r\n\t */\r\n\tpublic boolean[] getReadPlaques() {\r\n\t\treturn readPlaques;\r\n\t}\r\n\r\n\t/**\r\n\t * If the player has read all of the jail-plaques in the jail.\r\n\t * @return If the player has read them all.\r\n\t */\r\n\tpublic boolean hasReadPlaques() {\r\n\t\tfor (int i = 0; i < getReadPlaques().length; i++) {\r\n\t\t\tif (!getReadPlaques()[i]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a god book to being completed.\r\n\t * @param book the book.\r\n\t */\r\n\tpublic void setGodBook(GodBook book) {\r\n\t\tgodBooks[book.ordinal()] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a god book has been completed.\r\n\t * @param book the book.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasCompletedGodBook(GodBook book) {\r\n\t\treturn godBooks[book.ordinal()];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the forgingUses.\r\n\t * @return The forgingUses.\r\n\t */\r\n\tpublic int getForgingUses() {\r\n\t\treturn forgingUses;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the forgingUses.\r\n\t * @param forgingUses The forgingUses to set.\r\n\t */\r\n\tpublic void setForgingUses(int forgingUses) {\r\n\t\tthis.forgingUses = forgingUses;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the ectoCharges.\r\n\t * @return The ectoCharges.\r\n\t */\r\n\tpublic int getEctoCharges() {\r\n\t\treturn ectoCharges;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the ectoCharges.\r\n\t * @param ectoCharges The ectoCharges to set.\r\n\t */\r\n\tpublic void setEctoCharges(int ectoCharges) {\r\n\t\tthis.ectoCharges = ectoCharges;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the braceletClayUses.\r\n\t * @return The braceletClayUses.\r\n\t */\r\n\tpublic int getBraceletClayUses() {\r\n\t\treturn braceletClayUses;\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the bracelet of clay uses.\r\n\t */\r\n\tpublic void incrementBraceletOfClay() {\r\n\t\tthis.braceletClayUses += 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the abyss data.\r\n\t */\r\n\tpublic void resetAbyss() {\r\n\t\tfor (int i = 0; i < abyssData.length; i++) {\r\n\t\t\tabyssData[i] = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the charge.\r\n\t * @param ordinal the ordinal.\r\n\t */\r\n\tpublic void setAbyssCharge(int ordinal) {\r\n\t\tabyssData[ordinal] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Has an anyss charge.\r\n\t * @param ordinal the ordinal.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasAbyssCharge(int ordinal) {\r\n\t\treturn abyssData[ordinal];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the braceletClayUses.\r\n\t * @param braceletClayUses The braceletClayUses to set.\r\n\t */\r\n\tpublic void setBraceletClayUses(int braceletClayUses) {\r\n\t\tthis.braceletClayUses = braceletClayUses;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the dropDelay.\r\n\t * @return The dropDelay.\r\n\t */\r\n\tpublic long getDropDelay() {\r\n\t\treturn dropDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the dropDelay.\r\n\t * @param dropDelay The dropDelay to set.\r\n\t */\r\n\tpublic void setDropDelay(long dropDelay) {\r\n\t\tthis.dropDelay = dropDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the rc decay.\r\n\t * @param ordinal the ordinal.\r\n\t * @return the decay.\r\n\t */\r\n\tpublic int getRcDecay(int ordinal) {\r\n\t\tif (ordinal < 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn rcDecays[ordinal];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the rc decays.\r\n\t * @return the decays.\r\n\t */\r\n\tpublic int[] getRcDecays() {\r\n\t\treturn rcDecays;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the death screen is disabled.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isDeathScreenDisabled() {\r\n\t\treturn disableDeathScreen;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if the death screen is disabled.\r\n\t * @param b the boolean.\r\n\t */\r\n\tpublic void setDisableDeathScreen(boolean b) {\r\n\t\tthis.disableDeathScreen = b;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the godBooks.\r\n\t * @return the godBooks\r\n\t */\r\n\tpublic boolean[] getGodBooks() {\r\n\t\treturn godBooks;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the godBooks.\r\n\t * @param godBooks the godBooks to set.\r\n\t */\r\n\tpublic void setGodBooks(boolean[] godBooks) {\r\n\t\tthis.godBooks = godBooks;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the godBook.\r\n\t * @return the godBook\r\n\t */\r\n\tpublic int getGodBook() {\r\n\t\treturn godBook;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the godBook.\r\n\t * @param godBook the godBook to set.\r\n\t */\r\n\tpublic void setGodBook(int godBook) {\r\n\t\tthis.godBook = godBook;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the disableNews.\r\n\t * @return the disableNews\r\n\t */\r\n\tpublic boolean isDisableNews() {\r\n\t\treturn disableNews;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the disableNews.\r\n\t * @param disableNews the disableNews to set.\r\n\t */\r\n\tpublic void setDisableNews(boolean disableNews) {\r\n\t\tthis.disableNews = disableNews;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the godPages.\r\n\t * @return the godPages\r\n\t */\r\n\tpublic boolean[] getGodPages() {\r\n\t\treturn godPages;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the godPages.\r\n\t * @param godPages the godPages to set.\r\n\t */\r\n\tpublic void setGodPages(boolean[] godPages) {\r\n\t\tthis.godPages = godPages;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the overChargeDelay.\r\n\t * @return the overChargeDelay.\r\n\t */\r\n\tpublic long getOverChargeDelay() {\r\n\t\treturn overChargeDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the overChargeDelay.\r\n\t * @param overChargeDelay the overChargeDelay to set\r\n\t */\r\n\tpublic void setOverChargeDelay(long overChargeDelay) {\r\n\t\tthis.overChargeDelay = overChargeDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bossCounters.\r\n\t * @return the bossCounters.\r\n\t */\r\n\tpublic int[] getBossCounters() {\r\n\t\treturn bossCounters;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the bossCounters.\r\n\t * @param bossCounters the bossCounters to set\r\n\t */\r\n\tpublic void setBossCounters(int[] bossCounters) {\r\n\t\tthis.bossCounters = bossCounters;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gets the barrowsLoots.\r\n\t * @return the barrowsLoots.\r\n\t */\r\n\tpublic int getBarrowsLoots() {\r\n\t\treturn barrowsLoots;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the barrowsLoots.\r\n\t * @param barrowsLoots the barrowsLoots to set\r\n\t */\r\n\tpublic void setBarrowsLoots(int barrowsLoots) {\r\n\t\tthis.barrowsLoots = barrowsLoots;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lootSharePoints.\r\n\t * @return the lootSharePoints.\r\n\t */\r\n\tpublic int getLootSharePoints() {\r\n\t\treturn lootSharePoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the lootSharePoints.\r\n\t * @param lootSharePoints the lootSharePoints to set\r\n\t */\r\n\tpublic void setLootSharePoints(int lootSharePoints) {\r\n\t\tthis.lootSharePoints = lootSharePoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lootShareDelay.\r\n\t * @return the lootShareDelay.\r\n\t */\r\n\tpublic long getLootShareDelay() {\r\n\t\treturn lootShareDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the lootShareDelay.\r\n\t * @param lootShareDelay the lootShareDelay to set\r\n\t */\r\n\tpublic void setLootShareDelay(long lootShareDelay) {\r\n\t\tthis.lootShareDelay = lootShareDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the doubleExp.\r\n\t * @return the doubleExp.\r\n\t */\r\n\tpublic long getDoubleExp() {\r\n\t\treturn doubleExp;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the doubleExp.\r\n\t * @param doubleExp the doubleExp to set\r\n\t */\r\n\tpublic void setDoubleExp(long doubleExp) {\r\n\t\tthis.doubleExp = doubleExp;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Checks if double exp is active.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasDoubleExp() {\r\n\t\treturn doubleExp > System.currentTimeMillis();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gets the avasDevice\r\n\t * @return the avasDevice\r\n\t */\r\n\tpublic boolean isAvasDisabled() {\r\n\t\treturn avasDevice;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the avasDevice\r\n\t * @param avasDevice\r\n\t */\r\n\tpublic void setAvasDisabled(boolean avasDevice) {\r\n\t\tthis.avasDevice = avasDevice;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the globalTeleporterDelay.\r\n\t * @return the globalTeleporterDelay.\r\n\t */\r\n\tpublic long getGlobalTeleporterDelay() {\r\n\t\treturn globalTeleporterDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the globalTeleporterDelay.\r\n\t * @param globalTeleporterDelay the globalTeleporterDelay to set\r\n\t */\r\n\tpublic void setGlobalTeleporterDelay(long globalTeleporterDelay) {\r\n\t\tthis.globalTeleporterDelay = globalTeleporterDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the runReplenishDelay\r\n\t */\r\n\tpublic long getRunReplenishDelay() {\r\n\t\treturn runReplenishDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @param runReplenishDelay the runReplenishDelay to set\r\n\t */\r\n\tpublic void setRunReplenishDelay(long runReplenishDelay) {\r\n\t\tthis.runReplenishDelay = runReplenishDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the runReplenishCharges\r\n\t */\r\n\tpublic int getRunReplenishCharges() {\r\n\t\treturn runReplenishCharges;\r\n\t}\r\n\r\n\t/**\r\n\t * @param runReplenishCharges the runReplenishCharges to set\r\n\t */\r\n\tpublic void setRunReplenishCharges(int runReplenishCharges) {\r\n\t\tthis.runReplenishCharges = runReplenishCharges;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the lowAlchemyCharges\r\n\t */\r\n\tpublic int getLowAlchemyCharges() {\r\n\t\treturn lowAlchemyCharges;\r\n\t}\r\n\r\n\t/**\r\n\t * @param lowAlchemyCharges the lowAlchemyCharges to set\r\n\t */\r\n\tpublic void setLowAlchemyCharges(int lowAlchemyCharges) {\r\n\t\tthis.lowAlchemyCharges = lowAlchemyCharges;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the lowAlchemyDelay\r\n\t */\r\n\tpublic long getLowAlchemyDelay() {\r\n\t\treturn lowAlchemyDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @param lowAlchemyDelay the lowAlchemyDelay to set\r\n\t */\r\n\tpublic void setLowAlchemyDelay(long lowAlchemyDelay) {\r\n\t\tthis.lowAlchemyDelay = lowAlchemyDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the enableBoneCrusher\r\n\t */\r\n\tpublic boolean isEnableBoneCrusher() {\r\n\t\treturn enableBoneCrusher;\r\n\t}\r\n\r\n\t/**\r\n\t * @param enableBoneCrusher the enableBoneCrusher to set\r\n\t */\r\n\tpublic void setEnableBoneCrusher(boolean enableBoneCrusher) {\r\n\t\tthis.enableBoneCrusher = enableBoneCrusher;\r\n\t}\r\n\r\n\tpublic boolean isEnableCoinMachine() {\r\n\t\treturn enableCoinMachine;\r\n\t}\r\n\r\n\tpublic void setEnableCoinMachine(boolean enableCoinMachine) {\r\n\t\tthis.enableCoinMachine = enableCoinMachine;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the magicSkillCapeDelay\r\n\t */\r\n\tpublic long getMagicSkillCapeDelay() {\r\n\t\treturn magicSkillCapeDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @param magicSkillCapeDelay the magicSkillCapeDelay to set\r\n\t */\r\n\tpublic void setMagicSkillCapeDelay(long magicSkillCapeDelay) {\r\n\t\tthis.magicSkillCapeDelay = magicSkillCapeDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the hunterCapeDelay\r\n\t */\r\n\tpublic long getHunterCapeDelay() {\r\n\t\treturn hunterCapeDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @param hunterCapeDelay the hunterCapeDelay to set\r\n\t */\r\n\tpublic void setHunterCapeDelay(long hunterCapeDelay) {\r\n\t\tthis.hunterCapeDelay = hunterCapeDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the hunterCapeCharges\r\n\t */\r\n\tpublic int getHunterCapeCharges() {\r\n\t\treturn hunterCapeCharges;\r\n\t}\r\n\r\n\t/**\r\n\t * @param hunterCapeCharges the hunterCapeCharges to set\r\n\t */\r\n\tpublic void setHunterCapeCharges(int hunterCapeCharges) {\r\n\t\tthis.hunterCapeCharges = hunterCapeCharges;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the enableCharmCollector\r\n\t */\r\n\tpublic boolean isEnableCharmCollector() {\r\n\t\treturn enableCharmCollector;\r\n\t}\r\n\r\n\t/**\r\n\t * @param enableCharmCollector the enableCharmCollector to set\r\n\t */\r\n\tpublic void setEnableCharmCollector(boolean enableCharmCollector) {\r\n\t\tthis.enableCharmCollector = enableCharmCollector;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Gets the Minigame Group Finder teleport delay.\r\n\t * @return\r\n\t */\r\n\tpublic long getMinigameTeleportDelay() {\r\n\t\treturn minigameTeleportDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the Minigame Group Finder teleport delay.\r\n\t * @param delay The delay to set.\r\n\t */\r\n\tpublic void setMinigameTeleportDelay(long delay) {\r\n\t\tthis.minigameTeleportDelay = delay;\r\n\t}\r\n\r\n\tpublic int getSavedH() {\r\n\t\treturn savedH;\r\n\t}\r\n\r\n\tpublic void setSavedH(int savedH) {\r\n\t\tthis.savedH = savedH;\r\n\t}\r\n\r\n\tpublic int getSavedY() {\r\n\t\treturn savedY;\r\n\t}\r\n\r\n\tpublic void setSavedY(int savedY) {\r\n\t\tthis.savedY = savedY;\r\n\t}\r\n\r\n\tpublic int getSavedX() {\r\n\t\treturn savedX;\r\n\t}\r\n\r\n\tpublic void setSavedX(int savedX) {\r\n\t\tthis.savedX = savedX;\r\n\t}\r\n\r\n\tpublic int getTaskAmount() {\r\n\t\treturn taskAmount;\r\n\t}\r\n\r\n\tpublic void setTaskAmount(int taskAmount) {\r\n\t\tthis.taskAmount = taskAmount;\r\n\t}\r\n\r\n\tpublic int getTaskPoints() {\r\n\t\treturn taskPoints;\r\n\t}\r\n\r\n\tpublic void setTaskPoints(int taskPoints) {\r\n\t\tthis.taskPoints = taskPoints;\r\n\t}\r\n\r\n\tpublic void setMacroDisabled(boolean disabled){this.macroDisabled = disabled;}\r\n\r\n\tpublic boolean getMacroDisabled() {return this.macroDisabled;}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/GlobalData.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/GlobalData.java	(date 1597089529764)
@@ -2,6 +2,8 @@
 
 import core.game.content.global.GodBook;
 import core.game.node.entity.player.info.login.SavingModule;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 
@@ -365,7 +367,7 @@
 			buffer.put((byte) 38).putInt(godBook);
 		}
 		SavedData.save(buffer, disableNews, 39);
-		if (godPages != new boolean[4]) {
+		if (!godPages.equals(new boolean[4])) {
 			buffer.put((byte) 40);
 			for (int i = 0; i < 4; i++) {
 				buffer.put((byte) (godPages[i] ? 1 : 0));
@@ -400,6 +402,91 @@
 		buffer.put((byte) 0);
 	}
 
+	public void parse(JSONObject data){
+		tutorialStage = Integer.parseInt( data.get("tutorialStage").toString());
+		homeTeleportDelay = Long.parseLong(data.get("homeTeleportDelay").toString());
+		lumbridgeRope = (boolean) data.get("lumbridgeRope");
+		apprentice = (boolean) data.get("apprentice");
+		assistTime = Long.parseLong(data.get("assistTime").toString());
+		JSONArray ae = (JSONArray) data.get("assistExperience");
+		for(int i = 0; i < ae.size(); i++){
+			assistExperience[i] = Double.parseDouble(ae.get(i).toString());
+		}
+		JSONArray sr = (JSONArray) data.get("strongHoldRewards");
+		for(int i = 0; i < sr.size(); i++){
+			strongHoldRewards[i] = (boolean) sr.get(i);
+		}
+		chatPing =  Long.parseLong(data.get("chatPing").toString());
+		tutorClaim = Long.parseLong(data.get("tutorClaim").toString());
+		luthasTask = (boolean) data.get("luthasTask");
+		karamjaBananas = Integer.parseInt( data.get("karamjaBananas").toString());
+		silkSteal = Long.parseLong(data.get("silkSteal").toString());
+		zafAmount = Integer.parseInt( data.get("zafAmount").toString());
+		zafTime =  Long.parseLong(data.get("zafTime").toString());
+		fritzGlass = (boolean) data.get("fritzGlass");
+		wydinEmployee = (boolean) data.get("wydinEmployee");
+		draynorRecording = (boolean) data.get("draynorRecording");
+		geTutorial = (boolean) data.get("geTutorial");
+		essenceTeleporter = Integer.parseInt( data.get("essenceTeleporter").toString());
+		recoilDamage = Integer.parseInt( data.get("recoilDamage").toString());
+		doubleExpDelay = Long.parseLong(data.get("doubleExpDelay").toString());
+		joinedMonastery = (boolean) data.get("joinedMonastery");
+		JSONArray rp = (JSONArray) data.get("readPlaques");
+		for(int i = 0; i < rp.size(); i++){
+			readPlaques[i] = (boolean) rp.get(i);
+		}
+		forgingUses = Integer.parseInt( data.get("forgingUses").toString());
+		ectoCharges = Integer.parseInt( data.get("ectoCharges").toString());
+		braceletClayUses = Integer.parseInt( data.get("braceletClayUses").toString());
+		dropDelay = Long.parseLong(data.get("dropDelay").toString());
+		JSONArray ad = (JSONArray) data.get("abyssData");
+		for(int i = 0; i < ad.size(); i++){
+			abyssData[i] = (boolean) ad.get(i);
+		}
+		JSONArray rd = (JSONArray) data.get("rcDecays");
+		for(int i = 0; i < rd.size(); i++){
+			rcDecays[i] = Integer.parseInt(rd.get(i).toString());
+		}
+		disableDeathScreen = (boolean) data.get("disableDeathScreen");
+		playerTestStage = Integer.parseInt( data.get("playerTestStage").toString());
+		charmingDelay = Long.parseLong(data.get("charmingDelay").toString());
+		JSONArray tl = (JSONArray) data.get("travelLogs");
+		for(int i = 0; i < tl.size(); i++){
+			travelLogs[i] = (boolean) tl.get(i);
+		}
+		JSONArray gb = (JSONArray) data.get("godBooks");
+		for(int i = 0 ; i < gb.size(); i++){
+			godBooks[i] = (boolean) gb.get(i);
+		}
+		disableNews = (boolean) data.get("disableNews");
+		JSONArray gp = (JSONArray) data.get("godPages");
+		for(int i = 0 ; i < gp.size(); i++){
+			godPages[i] = (boolean) gp.get(i);
+		}
+		overChargeDelay = Long.parseLong(data.get("overChargeDelay").toString());
+		JSONArray bc = (JSONArray) data.get("bossCounters");
+		for(int i = 0 ; i < bc.size(); i++){
+			bossCounters[i] = Integer.parseInt(bc.get(i).toString());
+		}
+		barrowsLoots = Integer.parseInt( data.get("barrowsLoots").toString());
+		lootShareDelay = Long.parseLong(data.get("lootShareDelay").toString());
+		lootSharePoints = Integer.parseInt( data.get("lootSharePoints").toString());
+		doubleExp = Long.parseLong(data.get("doubleExp").toString());
+		avasDevice = (boolean) data.get("avasDevice");
+		globalTeleporterDelay = Long.parseLong(data.get("globalTeleporterDelay").toString());
+		starSpriteDelay = Long.parseLong(data.get("starSpriteDelay").toString());
+		runReplenishDelay = Long.parseLong(data.get("runReplenishDelay").toString());
+		runReplenishCharges = Integer.parseInt( data.get("runReplenishCharges").toString());
+		lowAlchemyCharges = Integer.parseInt( data.get("lowAlchemyCharges").toString());
+		lowAlchemyDelay = Long.parseLong(data.get("lowAlchemyDelay").toString());
+		magicSkillCapeDelay = Long.parseLong(data.get("magicSkillCapeDelay").toString());
+		hunterCapeDelay = Long.parseLong(data.get("hunterCapeDelay").toString());
+		hunterCapeCharges = Integer.parseInt( data.get("hunterCapeCharges").toString());
+		taskAmount = Integer.parseInt( data.get("taskAmount").toString());
+		taskPoints = Integer.parseInt( data.get("taskPoints").toString());
+		macroDisabled = (boolean) data.get("macroDisabled");
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
@@ -1640,4 +1727,12 @@
 	public void setMacroDisabled(boolean disabled){this.macroDisabled = disabled;}
 
 	public boolean getMacroDisabled() {return this.macroDisabled;}
+
+	public boolean[] getAbyssData() {
+		return abyssData;
+	}
+
+	public int getPlayerTestStage() {
+		return playerTestStage;
+	}
 }
Index: Server/src/main/java/Server/plugin/skill/summoning/familiar/FamiliarManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.summoning.familiar;\r\n\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.game.component.Component;\r\nimport core.game.container.Container;\r\nimport plugin.skill.Skills;\r\nimport plugin.skill.summoning.SummoningPouch;\r\nimport plugin.skill.summoning.pet.Pet;\r\nimport plugin.skill.summoning.pet.PetDetails;\r\nimport plugin.skill.summoning.pet.Pets;\r\nimport core.game.node.entity.combat.BattleState;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.item.Item;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.map.zone.ZoneRestriction;\r\nimport core.game.world.update.flag.context.Animation;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Map.Entry;\r\n\r\n/**\r\n * Handles a player's familiar.\r\n * @author Emperor\r\n */\r\npublic final class FamiliarManager implements SavingModule {\r\n\r\n\t/**\r\n\t * The familiars mapping.\r\n\t */\r\n\tprivate static final Map<Integer, Familiar> FAMILIARS = new HashMap<>();\r\n\r\n\t/**\r\n\t * The pet details mapping, sorted by item id.\r\n\t */\r\n\tprivate final Map<Integer, PetDetails> petDetails = new HashMap<Integer, PetDetails>();\r\n\r\n\t/**\r\n\t * The player.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The familiar.\r\n\t */\r\n\tprivate Familiar familiar;\r\n\r\n\t/**\r\n\t * The combat level difference when using summoning.\r\n\t */\r\n\tprivate int summoningCombatLevel;\r\n\r\n\t/**\r\n\t * If the player has a summoning pouch.\r\n\t */\r\n\tprivate boolean hasPouch;\r\n\t\r\n\t/**\r\n\t * The list of insured pets.\r\n\t */\r\n\tprivate List<Pets> insuredPets = new ArrayList<>();\r\n\r\n\t/**\r\n\t * Constructs a new {@code FamiliarManager} {@code Object}.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic FamiliarManager(Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tfor (Entry<Integer, PetDetails> entry : petDetails.entrySet()) {\r\n\t\t\tbuffer.put((byte) 3);\r\n\t\t\tbuffer.putInt(entry.getKey());\r\n\t\t\tentry.getValue().save(buffer);\r\n\t\t}\r\n\t\tif (hasPet()) {\r\n\t\t\tbuffer.put((byte) 4);\r\n\t\t\tbuffer.putInt(((Pet) familiar).getPet().getBabyItemId());\r\n\t\t} else if (hasFamiliar()) {\r\n\t\t\tbuffer.put((byte) 1);\r\n\t\t\tbuffer.putShort((short) familiar.getOriginalId());\r\n\t\t\tbuffer.putShort((short) familiar.ticks);\r\n\t\t\tbuffer.put((byte) familiar.specialPoints);\r\n\t\t\tif (familiar.isBurdenBeast() && !((BurdenBeast) familiar).getContainer().isEmpty()) {\r\n\t\t\t\t((BurdenBeast) familiar).getContainer().save(buffer.put((byte) 2));\r\n\t\t\t}\r\n\t\t\tbuffer.put((byte) 5).putInt(familiar.getSkills().getLifepoints());\r\n\t\t}\r\n\t\tif (insuredPets.size() > 0) {\r\n\t\t\tbuffer.put((byte) 6);\r\n\t\t\tbuffer.put((byte) insuredPets.size());\r\n\t\t\tfor (Pets pet : insuredPets) {\r\n\t\t\t\tbuffer.putInt(pet.getBabyItemId());\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic final void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\tPetDetails details;\r\n\t\twhile ((opcode = buffer.get() & 0xFF) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tint npcId = buffer.getShort() & 0xFFFF;\r\n\t\t\t\tfamiliar = FAMILIARS.get(npcId).construct(player, npcId);\r\n\t\t\t\tfamiliar.ticks = buffer.getShort() & 0xFFFF;\r\n\t\t\t\tfamiliar.specialPoints = buffer.get() & 0xFF;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (familiar == null || !familiar.isBurdenBeast()) {\r\n\t\t\t\t\tSystem.err.println(\"Error parsing BoB container!\");\r\n\t\t\t\t\tnew Container(30).parse(buffer);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t((BurdenBeast) familiar).getContainer().parse(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tint baseItem = buffer.getInt();\r\n\t\t\t\tdetails = new PetDetails(0);\r\n\t\t\t\tdetails.parse(buffer);\r\n\t\t\t\tpetDetails.put(baseItem, details);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tint itemId = buffer.getInt();\r\n\t\t\t\tdetails = petDetails.get(itemId);\r\n\t\t\t\tPets pets = Pets.forId(itemId);\r\n\t\t\t\tif (details == null) {\r\n\t\t\t\t\tdetails = new PetDetails(pets.getGrowthRate() == 0.0 ? 100.0 : 0.0);\r\n\t\t\t\t\tpetDetails.put(itemId, details);\r\n\t\t\t\t}\r\n\t\t\t\tfamiliar = new Pet(player, details, itemId, pets.getNpcId(details.getStage()));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tint hp = buffer.getInt();\r\n\t\t\t\tif (familiar != null) {\r\n\t\t\t\t\tfamiliar.setAttribute(\"hp\", hp);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tint size = buffer.get();\r\n\t\t\t\tPets pet;\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\tpet = Pets.forId(buffer.getInt());\r\n\t\t\t\t\tif (pet != null) {\r\n\t\t\t\t\t\tinsuredPets.add(pet);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the player logs in.\r\n\t */\r\n\tpublic void login() {\r\n\t\tif (hasFamiliar()) {\r\n\t\t\tfamiliar.init();\r\n\t\t}\r\n\t\tplayer.getFamiliarManager().setConfig(243269632);\r\n\t}\r\n\r\n\t/**\r\n\t * Summons a familiar.\r\n\t * @param item The item.\r\n\t * @param pet If the familiar is a pet.\r\n\t * @param if we should delete the item.\r\n\t */\r\n\tpublic void summon(Item item, boolean pet, boolean deleteItem) {\r\n\t\tif (hasFamiliar()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You already have a follower.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (player.getZoneMonitor().isRestricted(ZoneRestriction.FOLLOWERS) && !player.getLocks().isLocked(\"enable_summoning\")) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"This is a Summoning-free area.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pet) {\r\n\t\t\tsummonPet(item, deleteItem);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfinal SummoningPouch pouch = SummoningPouch.get(item.getId());\r\n\t\tif (pouch == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (player.getSkills().getStaticLevel(Skills.SUMMONING) < pouch.getLevelRequired()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You need a Summoning level of \" + pouch.getLevelRequired() + \" to summon this familiar.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (player.getSkills().getLevel(Skills.SUMMONING) < pouch.getSummonCost()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You need at least \" + pouch.getSummonCost() + \" Summoning points to summon this familiar.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfinal int npcId = pouch.getNpcId();\r\n\t\tFamiliar fam = FAMILIARS.get(npcId);\r\n\t\tif (fam == null) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"Invalid familiar \" + npcId + \" - report on www.keldagrim.com\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfam = fam.construct(player, npcId);\r\n\t\tif (fam.getSpawnLocation() == null) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"The spirit in this pouch is too big to summon here. You will need to move to a larger\");\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"area.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!player.getInventory().remove(item)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.getSkills().updateLevel(Skills.SUMMONING, -pouch.getSummonCost(), 0);\r\n\t\tplayer.getSkills().addExperience(Skills.SUMMONING, pouch.getSummonExperience());\r\n\t\tfamiliar = fam;\r\n\t\tspawnFamiliar();\r\n\t\tif (player.getSkullManager().isWilderness()) {\r\n\t\t\tplayer.getAppearance().sync();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Summons a familiar.\r\n\t * @param item the item.\r\n\t * @param pet the pet.\r\n\t */\r\n\tpublic void summon(final Item item, boolean pet) {\r\n\t\tsummon(item, pet, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Morphs a pet.\r\n\t * @param item the item.\r\n\t * @param deleteItem the item.\r\n\t * @param location the location.\r\n\t */\r\n\tpublic void morphPet(final Item item, boolean deleteItem, Location location) {\r\n\t\tif (hasFamiliar()) {\r\n\t\t\tfamiliar.dismiss();\r\n\t\t}\r\n\t\tsummonPet(item, deleteItem, true, location);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Summons a pet.\r\n\t * @param item the item.\r\n\t * @param delete the item.\r\n\t */\r\n\tprivate boolean summonPet(final Item item, boolean deleteItem) {\r\n\t\treturn summonPet(item, deleteItem, false, null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Summons a pet.\r\n\t * @param item the item.\r\n\t * @param delete the item.\r\n\t * @param morph the pet.\r\n\t */\r\n\tprivate boolean summonPet(final Item item, boolean deleteItem, boolean morph, Location location) {\r\n\t\tfinal int itemId = item.getId();\r\n\t\tif (itemId > 8850 && itemId < 8900) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tPets pets = Pets.forId(itemId);\r\n\t\tif (pets == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (player.getSkills().getStaticLevel(Skills.SUMMONING) < pets.getSummoningLevel()) {\r\n\t\t\tplayer.getDialogueInterpreter().sendDialogue(\"You need a summoning level of \" + pets.getSummoningLevel() + \" to summon this.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tint baseItemId = pets.getBabyItemId();\r\n\t\tPetDetails details = petDetails.get(baseItemId);\r\n\t\tif (details == null) {\r\n\t\t\tdetails = new PetDetails(pets.getGrowthRate() == 0.0 ? 100.0 : 0.0);\r\n\t\t\tpetDetails.put(baseItemId, details);\r\n\t\t}\r\n\t\tint id = pets.getItemId(details.getStage());\r\n\t\tif (itemId != id) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"This is not the right pet, grow the pet correctly.\");\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tint npcId = pets.getNpcId(details.getStage());\r\n\t\tif (npcId > 0) {\r\n\t\t\tfamiliar = new Pet(player, details, itemId, npcId);\r\n\t\t\tif (deleteItem) {\r\n\t\t\t\tplayer.animate(new Animation(827));\r\n\t\t\t\tplayer.getInventory().remove(item);\r\n\t\t\t}\r\n\t\t\tif (morph) {\r\n\t\t\t\tmorphFamiliar(location);\r\n\t\t\t} else {\r\n\t\t\t\tspawnFamiliar();\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Morphs the current familiar.\r\n\t * @param location the location.\r\n\t */\r\n\tpublic void morphFamiliar(Location location) {\r\n\t\tfamiliar.init(location, false);\r\n\t\tplayer.getInterfaceManager().openTab(new Component(662));\r\n\t\tplayer.getInterfaceManager().setViewedTab(7);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Spawns the current familiar.\r\n\t */\r\n\tpublic void spawnFamiliar() {\r\n\t\tfamiliar.init();\r\n\t\tplayer.getInterfaceManager().openTab(new Component(662));\r\n\t\tplayer.getInterfaceManager().setViewedTab(7);\r\n\t}\r\n\r\n\t/**\r\n\t * Dumps the bob.\r\n\t */\r\n\tpublic void dumpBob() {\r\n\t\tif (!hasFamiliar()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You don't have a familiar.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tFamiliar familiar = getFamiliar();\r\n\t\tif (!familiar.isBurdenBeast()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"Your familiar is not a beast of burden.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tBurdenBeast beast = ((BurdenBeast) familiar);\r\n\t\tif (!player.getBank().hasSpaceFor(beast.getContainer())) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"There is not enough space left in your bank.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.getBank().addAll(beast.getContainer());\r\n\t\tbeast.getContainer().clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the pet eat.\r\n\t * @param foodId The food item id.\r\n\t * @param npc The pet NPC.\r\n\t */\r\n\tpublic void eat(int foodId, Pet npc) {\r\n\t\tif (npc != familiar) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"This isn't your pet!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPet pet = (Pet) familiar;\r\n\t\tPets pets = Pets.forId(pet.getItemId());\r\n\t\tif (pets == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (int food : pets.getFood()) {\r\n\t\t\tif (food == foodId) {\r\n\t\t\t\tplayer.getInventory().remove(new Item(foodId));\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(\"Your pet happily eats the \" + ItemDefinition.forId(food).getName() + \".\");\r\n\t\t\t\tplayer.animate(new Animation(827));\r\n\t\t\t\tnpc.getDetails().updateHunger(-15.0);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tplayer.getPacketDispatch().sendMessage(\"Nothing interesting happens.\");\r\n\t}\r\n\r\n\t/**\r\n\t * Picks up a pet.\r\n\t */\r\n\tpublic void pickup() {\r\n\t\tif (player.getInventory().freeSlots() == 0) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You don't have enough room in your inventory.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPet pet = ((Pet) familiar);\r\n\t\tPetDetails details = pet.getDetails();\r\n\t\tif (player.getInventory().add(new Item(pet.getPet().getItemId(details.getStage())))) {\r\n\t\t\tplayer.animate(Animation.create(827));\r\n\t\t\tplayer.getFamiliarManager().dismiss();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the battle state.\r\n\t * @param state the state.\r\n\t */\r\n\tpublic void adjustBattleState(final BattleState state) {\r\n\t\tif (!hasFamiliar()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfamiliar.adjustPlayerBattle(state);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a boost from a familiar.\r\n\t * @param skill the skill.\r\n\t * @return the boosted level.\r\n\t */\r\n\tpublic int getBoost(int skill) {\r\n\t\tif (!hasFamiliar()) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn familiar.getBoost(skill);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has an active familiar.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasFamiliar() {\r\n\t\treturn familiar != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has an active familiar and is a pet.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasPet() {\r\n\t\treturn hasFamiliar() && familiar instanceof Pet;\r\n\t}\r\n\r\n\t/**\r\n\t * Dismisses the familiar.\r\n\t * @param save the details of a pet.\r\n\t */\r\n\tpublic void dismiss(boolean saveDetails) {\r\n\t\tif (hasPet() && !saveDetails) {\r\n\t\t\tremoveDetails(((Pet) familiar).getItemId());\r\n\t\t}\r\n\t\tif (hasFamiliar()) {\r\n\t\t\tfamiliar.dismiss();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dismisses the familiar.\r\n\t */\r\n\tpublic void dismiss() {\r\n\t\tdismiss(true);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the details for this pet.\r\n\t * @param npcId The item id of the pet.\r\n\t */\r\n\tpublic void removeDetails(int itemId) {\r\n\t\tPets pets = Pets.forId(itemId);\r\n\t\tif (pets == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tpetDetails.remove(pets.getBabyItemId());\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if it's the owner of a familiar.\r\n\t * @param familiar the familiar\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isOwner(Familiar familiar) {\r\n\t\tif (!hasFamiliar()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.familiar != familiar) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"This is not your familiar.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a config value.\r\n\t * @param value the value.\r\n\t */\r\n\tpublic void setConfig(int value) {\r\n\t\tint current = player.getConfigManager().get(1160);\r\n\t\tint newVal = current + value;\r\n\t\tplayer.getConfigManager().set(1160, newVal);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the familiar.\r\n\t * @return The familiar.\r\n\t */\r\n\tpublic Familiar getFamiliar() {\r\n\t\treturn familiar;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the familiar.\r\n\t * @param familiar The familiar to set.\r\n\t */\r\n\tpublic void setFamiliar(Familiar familiar) {\r\n\t\tthis.familiar = familiar;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the familiars.\r\n\t * @return The familiars.\r\n\t */\r\n\tpublic static Map<Integer, Familiar> getFamiliars() {\r\n\t\treturn FAMILIARS;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the usingSummoning.\r\n\t * @return The usingSummoning.\r\n\t */\r\n\tpublic boolean isUsingSummoning() {\r\n\t\treturn hasPouch || hasFamiliar();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the hasPouch.\r\n\t * @return The hasPouch.\r\n\t */\r\n\tpublic boolean isHasPouch() {\r\n\t\treturn hasPouch;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the hasPouch.\r\n\t * @param hasPouch The hasPouch to set.\r\n\t */\r\n\tpublic void setHasPouch(boolean hasPouch) {\r\n\t\tthis.hasPouch = hasPouch;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the summoningCombatLevel.\r\n\t * @return The summoningCombatLevel.\r\n\t */\r\n\tpublic int getSummoningCombatLevel() {\r\n\t\treturn summoningCombatLevel;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the summoningCombatLevel.\r\n\t * @param summoningCombatLevel The summoningCombatLevel to set.\r\n\t */\r\n\tpublic void setSummoningCombatLevel(int summoningCombatLevel) {\r\n\t\tthis.summoningCombatLevel = summoningCombatLevel;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the insuredPets\r\n\t */\r\n\tpublic List<Pets> getInsuredPets() {\r\n\t\treturn insuredPets;\r\n\t}\r\n\r\n\t/**\r\n\t * @param insuredPets the insuredPets to set\r\n\t */\r\n\tpublic void setInsuredPets(List<Pets> insuredPets) {\r\n\t\tthis.insuredPets = insuredPets;\r\n\t}\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/summoning/familiar/FamiliarManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/summoning/familiar/FamiliarManager.java	(date 1597089529815)
@@ -3,6 +3,8 @@
 import core.cache.def.impl.ItemDefinition;
 import core.game.component.Component;
 import core.game.container.Container;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 import plugin.skill.Skills;
 import plugin.skill.summoning.SummoningPouch;
 import plugin.skill.summoning.pet.Pet;
@@ -102,6 +104,49 @@
 		buffer.put((byte) 0);
 	}
 
+	public final void parse(JSONObject familiarData){
+		JSONArray petDetails = (JSONArray) familiarData.get("petDetails");
+		for(int i = 0 ; i < petDetails.size(); i++){
+			JSONObject detail = (JSONObject) petDetails.get(i);
+			PetDetails details = new PetDetails(0);
+			details.updateHunger(Double.parseDouble(detail.get("hunger").toString()));
+			details.updateGrowth(Double.parseDouble(detail.get("growth").toString()));
+			details.setStage(Integer.parseInt(detail.get("stage").toString()));
+			this.petDetails.put(Integer.parseInt(detail.get("petId").toString()),details);
+		}
+
+		if(familiarData.containsKey("currentPet")){
+			int currentPet = Integer.parseInt( familiarData.get("currentPet").toString());
+			PetDetails details = this.petDetails.get(currentPet);
+			Pets pets = Pets.forId(currentPet);
+			if (details == null) {
+				details = new PetDetails(pets.getGrowthRate() == 0.0 ? 100.0 : 0.0);
+				this.petDetails.put(currentPet, details);
+			}
+			familiar = new Pet(player, details, currentPet, pets.getNpcId(details.getStage()));
+		} else if(familiarData.containsKey("familiar")){
+			JSONObject currentFamiliar = (JSONObject) familiarData.get("familiar");
+			int familiarId = Integer.parseInt( currentFamiliar.get("originalId").toString());
+			familiar = FAMILIARS.get(familiarId).construct(player,familiarId);
+			familiar.ticks = Integer.parseInt( currentFamiliar.get("ticks").toString());
+			familiar.specialPoints = Integer.parseInt( currentFamiliar.get("specialPoints").toString());
+			JSONArray famInv = (JSONArray) currentFamiliar.get("inventory");
+			if(famInv != null){
+				((BurdenBeast) familiar).container.parse(famInv);
+			}
+			familiar.setAttribute("hp",Integer.parseInt( currentFamiliar.get("lifepoints").toString()));
+		}
+
+		if(familiarData.containsKey("insuredPets")){
+			JSONArray insuredPets = (JSONArray) familiarData.get("insuredPets");
+			for(int i = 0; i < insuredPets.size(); i++){
+				int petId = Integer.parseInt( insuredPets.get(i).toString());
+				Pets pet = Pets.forId(petId);
+				insuredPets.add(pet);
+			}
+		}
+	}
+
 	@Override
 	public final void parse(ByteBuffer buffer) {
 		int opcode;
@@ -560,4 +605,7 @@
 		this.insuredPets = insuredPets;
 	}
 
+	public Map<Integer, PetDetails> getPetDetails() {
+		return petDetails;
+	}
 }
\ No newline at end of file
Index: Server/src/main/java/Server/core/game/node/entity/player/link/InterfaceManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.game.component.Component;\r\nimport core.game.component.InterfaceType;\r\nimport plugin.tutorial.TutorialSession;\r\nimport core.game.node.entity.combat.equipment.WeaponInterface;\r\nimport core.game.node.entity.player.Player;\r\nimport core.net.packet.PacketRepository;\r\nimport core.net.packet.context.InterfaceContext;\r\nimport core.net.packet.context.WindowsPaneContext;\r\nimport core.net.packet.out.CloseInterface;\r\nimport core.net.packet.out.Interface;\r\nimport core.net.packet.out.WindowsPane;\r\n\r\n/**\r\n * Manages a player's interfaces.\r\n * @author Emperor\r\n * \r\n */\r\npublic final class InterfaceManager {\r\n\r\n\t/**\r\n\t * The default windows pane.\r\n\t */\r\n\tpublic static final int WINDOWS_PANE = 548;\r\n\r\n\t/**\r\n\t * The default chat box interface.\r\n\t */\r\n\tpublic static final int DEFAULT_CHATBOX = 137;\r\n\r\n\t/**\r\n\t * The default tabs.\r\n\t */\r\n\tpublic static final int[] DEFAULT_TABS = { 92, 320, 274, 149, 387, 271, 192, 662, 550, 551, 589, 261, 464, 187, 182 };\r\n\r\n\t/**\r\n\t * The player.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The amount of interface packets sent.\r\n\t */\r\n\tprivate int packetCount;\r\n\r\n\t/**\r\n\t * The windows pane.\r\n\t */\r\n\tprivate Component windowsPane;\r\n\r\n\t/**\r\n\t * The currently opened component.\r\n\t */\r\n\tprivate Component opened;\r\n\r\n\t/**\r\n\t * The tabs.\r\n\t */\r\n\tprivate Component[] tabs = new Component[15];\r\n\r\n\t/**\r\n\t * The chatbox component.\r\n\t */\r\n\tprivate Component chatbox;\r\n\r\n\t/**\r\n\t * The single tab.\r\n\t */\r\n\tprivate Component singleTab;\r\n\r\n\t/**\r\n\t * The overlay component.\r\n\t */\r\n\tprivate Component overlay;\r\n\r\n\t/**\r\n\t * The currently opened tab's index.\r\n\t */\r\n\tprivate int currentTabIndex = 3;\r\n\r\n\t/**\r\n\t * Constructs a new {@code InterfaceManager} {@code Object}.\r\n\t * \r\n\t * @param player\r\n\t *            The player.\r\n\t */\r\n\tpublic InterfaceManager(Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the windows pane.\r\n\t * \r\n\t * @param windowsPane\r\n\t *            The windows pane.\r\n\t * @return The component instance.\r\n\t */\r\n\tpublic Component openWindowsPane(Component windowsPane) {\r\n\t\treturn openWindowsPane(windowsPane, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the windows pane.\r\n\t * \r\n\t * @param windowsPane\r\n\t *            The windows pane.\r\n\t * @return The component instance.\r\n\t */\r\n\tpublic Component openWindowsPane(Component windowsPane, boolean overlap) {\r\n\t\tthis.windowsPane = windowsPane;\r\n\t\tif (windowsPane.getDefinition().getType() != InterfaceType.WINDOW_PANE) {\r\n\t\t\tSystem.err.println(\"Set interface type to WINDOW_PANE for component \" + windowsPane.getId() + \", definition requires updating!\");\r\n\t\t\twindowsPane.getDefinition().setType(InterfaceType.WINDOW_PANE);\r\n\t\t}\r\n\t\tPacketRepository.send(WindowsPane.class, new WindowsPaneContext(player, windowsPane.getId(), overlap ? 1 : 0));\r\n\t\twindowsPane.open(player);\r\n\t\treturn windowsPane;\r\n\t}\r\n\r\n\tpublic void openWindowsPane(Component windowsPane, int type) {\r\n\t\tthis.windowsPane = windowsPane;\r\n\t\tif (windowsPane.getDefinition().getType() != InterfaceType.WINDOW_PANE) {\r\n\t\t\tSystem.err.println(\"Set interface type to WINDOW_PANE for component \" + windowsPane.getId() + \", definition requires updating!\");\r\n\t\t\twindowsPane.getDefinition().setType(InterfaceType.SINGLE_TAB);\r\n\t\t}\r\n\t\tPacketRepository.send(WindowsPane.class, new WindowsPaneContext(player, windowsPane.getId(), type));\r\n\t\twindowsPane.open(player);\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a component.\r\n\t * \r\n\t * @param componentId\r\n\t *            The component id.\r\n\t * @return The opened component.\r\n\t */\r\n\tpublic Component openComponent(int componentId) {\r\n\t\treturn open(new Component(componentId));\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a component.\r\n\t * @param component The component to open.\r\n\t * @return The opened component.\r\n\t */\r\n\tpublic Component open(Component component) {\r\n\t\tif (!close()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcomponent.open(player);\r\n\t\treturn opened = component;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a main interface.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isOpened() {\r\n\t\treturn opened != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has a chat box interface opened (disregarding default chat box).\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasChatbox() {\r\n\t\treturn chatbox != null && chatbox.getId() != DEFAULT_CHATBOX;\r\n\t}\r\n\r\n\t/**\r\n\t * Safely closes the currently opened interface.\r\n\t */\r\n\tpublic boolean close() {\r\n\t\tif (player.getAttribute(\"runscript\", null) != null) {\r\n\t\t\tplayer.removeAttribute(\"runscript\");\r\n\t\t\tplayer.getPacketDispatch().sendRunScript(101, \"\");\r\n\t\t}\r\n\t\tif (opened != null && opened.close(player)) {\r\n\t\t\tif (opened != null && (!opened.getDefinition().isWalkable() || opened.getId() == 14)) {\r\n\t\t\t\tPacketRepository.send(CloseInterface.class, new InterfaceContext(player, opened.getDefinition().getWindowPaneId(isResizable()), opened.getDefinition().getChildId(isResizable()), opened.getId(), opened.getDefinition().isWalkable()));\r\n\t\t\t}\r\n\t\t\topened = null;\r\n\t\t}\r\n\t\treturn opened == null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current interface is walkable.\r\n\t * @return <code>True</code> if so.\r\n\t */\r\n\tpublic boolean isWalkable() {\r\n\t\tif (opened != null) {\r\n\t\t\tif (opened.getId() == 389) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (opened.getDefinition().isWalkable()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Safely closes the component.\r\n\t * @param component The component.\r\n\t * @return {@code True} if the component successfully closed.\r\n\t */\r\n\tpublic boolean close(Component component) {\r\n\t\tif (component.close(player)) {\r\n\t\t\tif (component.getId() == DEFAULT_CHATBOX) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (component.getDefinition().getType() == InterfaceType.TAB) {\r\n\t\t\t\tPacketRepository.send(CloseInterface.class, new InterfaceContext(player, component.getDefinition().getWindowPaneId(isResizable()), component.getDefinition().getChildId(isResizable()) + component.getDefinition().getTabIndex(), component.getId(), component.getDefinition().isWalkable()));\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tPacketRepository.send(CloseInterface.class, new InterfaceContext(player, component.getDefinition().getWindowPaneId(isResizable()), component.getDefinition().getChildId(isResizable()), component.getId(), component.getDefinition().isWalkable()));\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the chatbox interface.\r\n\t */\r\n\tpublic void closeChatbox() {\r\n\t\tif (chatbox != null && chatbox.getId() != DEFAULT_CHATBOX) {\r\n\t\t\tif (close(chatbox)) {\r\n\t\t\t\topenChatbox(DEFAULT_CHATBOX);\r\n\t\t\t\tplayer.getPacketDispatch().sendRunScript(101, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a tab and removes the other tabs.\r\n\t * @param component The component to open.\r\n\t * @return The component.\r\n\t */\r\n\tpublic Component openSingleTab(Component component) {\r\n\t\tif (component.getDefinition().getType() != InterfaceType.SINGLE_TAB) {\r\n\t\t\tSystem.err.println(\"Set interface type to SINGLE_TAB for component \" + component.getId() + \", definition requires updating!\");\r\n\t\t\tcomponent.getDefinition().setType(InterfaceType.SINGLE_TAB);\r\n\t\t}\r\n\t\tcomponent.open(player);\r\n\t\tif (component.getCloseEvent() == null) {\r\n\t\t\tcomponent.setCloseEvent((player, c) -> {\r\n\t\t\t\topenDefaultTabs();\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn singleTab = component;\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the current single tab opened.\r\n\t */\r\n\tpublic boolean closeSingleTab() {\r\n\t\tif (singleTab != null && close(singleTab)) {\r\n\t\t\tsingleTab = null;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the currently opened single tab.\r\n\t * @return The tab opened.\r\n\t */\r\n\tpublic Component getSingleTab() {\r\n\t\treturn singleTab;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the tabs.\r\n\t * @param tabs The tab indexes.\r\n\t */\r\n\tpublic void hideTabs(int... tabs) {\r\n\t\tif (true) {\r\n\t\t\tremoveTabs(tabs);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t@SuppressWarnings(\"unused\")\r\n\t\tboolean changeViewedTab = false;\r\n\t\tfor (int slot : tabs) {\r\n\t\t\tif (slot == currentTabIndex) {\r\n\t\t\t\tchangeViewedTab = true;\r\n\t\t\t}\r\n\t\t\tComponent tab = this.tabs[slot];\r\n\t\t\tif (tab != null && !tab.isHidden()) {\r\n\t\t\t\tint child = (slot < 7 ? 38 : 13) + slot;\r\n\t\t\t\tboolean resize = isResizable();\r\n\t\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(getWindowPaneId(), child, true);\r\n\t\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(getWindowPaneId(), child + 7, true);\r\n\t\t\t\ttab.setHidden(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (changeViewedTab) {\r\n\t\t\tint currentIndex = -1;\r\n\t\t\tif (this.tabs[3] == null) {\r\n\t\t\t\tfor (int i = 0; i < this.tabs.length; i++) {\r\n\t\t\t\t\tif (this.tabs[i] != null) {\r\n\t\t\t\t\t\tcurrentIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcurrentIndex = 3;\r\n\t\t\t}\r\n\t\t\tif (currentIndex > -1) {\r\n\t\t\t\tsetViewedTab(currentIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes the tabs.\r\n\t * @param tabs The tab indexes.\r\n\t */\r\n\t@Deprecated\r\n\tpublic void removeTabs(int... tabs) {\r\n\t\tboolean changeViewedTab = false;\r\n\t\tfor (int slot : tabs) {\r\n\t\t\tif (slot == currentTabIndex) {\r\n\t\t\t\tchangeViewedTab = true;\r\n\t\t\t}\r\n\t\t\tComponent tab = this.tabs[slot];\r\n\t\t\tif (tab != null) {\r\n\t\t\t\tclose(tab);\r\n\t\t\t\tthis.tabs[slot] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (changeViewedTab) {\r\n\t\t\tint currentIndex = -1;\r\n\t\t\tif (this.tabs[3] == null) {\r\n\t\t\t\tfor (int i = 0; i < this.tabs.length; i++) {\r\n\t\t\t\t\tif (this.tabs[i] != null) {\r\n\t\t\t\t\t\tcurrentIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcurrentIndex = 3;\r\n\t\t\t}\r\n\t\t\tif (currentIndex > -1) {\r\n\t\t\t\tsetViewedTab(currentIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the tabs.\r\n\t */\r\n\tpublic void restoreTabs() {\r\n\t\tfor (int i = 0; i < tabs.length; i++) {\r\n\t\t\tComponent tab = tabs[i];\r\n\t\t\tif (tab == null) {\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tWeaponInterface inter = player.getExtension(WeaponInterface.class);\r\n\t\t\t\t\tif (inter == null) {\r\n\t\t\t\t\t\tplayer.addExtension(WeaponInterface.class, inter = new WeaponInterface(player));\r\n\t\t\t\t\t}\r\n\t\t\t\t\topenTab(0, inter);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\topenTab(6, new Component(player.getSpellBookManager().getSpellBook())); // Magic\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\tif (player.getFamiliarManager().hasFamiliar()) {\r\n\t\t\t\t\t\topenTab(7, new Component(662));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\topenTab(i, new Component(DEFAULT_TABS[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (tab.isHidden()) {\r\n\t\t\t\tint child = (i < 7 ? 38 : 13) + i;\r\n//\t\t\t\tboolean resize = isResizable(); //TODO:\r\n\t\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(getWindowPaneId(), child, false);\r\n\t\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(getWindowPaneId(), child + 7, false);\r\n\t\t\t\ttabs[i].setHidden(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the default tabs.\r\n\t */\r\n\tpublic void openDefaultTabs() {\r\n\t\t// player.getPacketDispatch().sendInterfaceConfig(548, 51, false);\r\n\t\tWeaponInterface inter = player.getExtension(WeaponInterface.class);\r\n\t\tif (inter == null) {\r\n\t\t\tplayer.addExtension(WeaponInterface.class, inter = new WeaponInterface(player));\r\n\t\t}\r\n\t\t//sendTab(16, 747); // Summoning bar\r\n\t\topenTab(0, inter); // Attack\r\n\t\topenTab(1, new Component(320)); // Skills\r\n\t\topenTab(2, new Component(274)); // Quest\r\n\t\topenTab(3, new Component(149)); // inventory\r\n\t\topenTab(4, new Component(387)); // Equipment\r\n\t\topenTab(5, new Component(271)); // Prayer\r\n\t\topenTab(6, new Component(player.getSpellBookManager().getSpellBook())); // Magic\r\n\t\tif (player.getFamiliarManager().hasFamiliar()) {\r\n\t\t\topenTab(7, new Component(662)); // summoning.\r\n\t\t}\r\n\t\topenTab(8, new Component(550)); // Friends\r\n\t\topenTab(9, new Component(551)); // Ignores\r\n\t\topenTab(10, new Component(589)); // Clan chat\r\n\t\topenTab(11, new Component(261)); // Settings\r\n\t\topenTab(12, new Component(464)); // Emotes\r\n\t\topenTab(13, new Component(187)); // Music\r\n\t\topenTab(14, new Component(182)); // Logout\r\n\t\tif (player.getProperties().getAutocastSpell() != null) {\r\n\t\t\tinter.selectAutoSpell(inter.getAutospellId(player.getProperties().getAutocastSpell().getSpellId()), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the information bars (orbs).\r\n\t */\r\n\tpublic void openInfoBars() {\r\n\t\t//Hp orb\r\n\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 13 : 70, 748, true));\r\n\t\t//Prayer orb\r\n\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 14 : 71, 749, true));\r\n\t\t//Energy orb\r\n\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 15 : 72, 750, true));\r\n\t\t//Summoning bar\r\n\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 16 : 73, 747, true));\t\r\n\t\t//Split PM\r\n\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 71 : 10, 754, true));\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the default tabs.\r\n\t */\r\n\tpublic void closeDefaultTabs() {\r\n\t\tWeaponInterface inter = player.getExtension(WeaponInterface.class);\r\n\t\tif (inter != null) {\r\n\t\t\tclose(inter); // Attack\r\n\t\t}\r\n\t\tclose(new Component(320)); // Skills\r\n\t\tclose(new Component(274)); // Quest\r\n\t\tclose(new Component(259)); // Diary\r\n\t\tclose(new Component(149)); // inventory\r\n\t\tclose(new Component(387)); // Equipment\r\n\t\tclose(new Component(271)); // Prayer\r\n\t\tclose(new Component(player.getSpellBookManager().getSpellBook()));\r\n\t\tclose(new Component(662)); // summoning.\r\n\t\tclose(new Component(550)); // Friends\r\n\t\tclose(new Component(551)); // Ignores\r\n\t\tclose(new Component(589)); // Clan chat\r\n\t\tclose(new Component(261)); // Settings\r\n\t\tclose(new Component(464)); // Emotes\r\n\t\tclose(new Component(187)); // Music\r\n\t\tclose(new Component(182)); // Logout\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a tab.\r\n\t * @param slot The tab slot;\r\n\t * @param component The component.\r\n\t */\r\n\tpublic void openTab(int slot, Component component) {\r\n\t\tif (component.getId() == 92 && !(component instanceof WeaponInterface)) {\r\n\t\t\tthrow new IllegalStateException(\"Attack tab can only be instanced as \" + WeaponInterface.class.getCanonicalName() + \"!\");\r\n\t\t}\r\n\t\tif (component.getDefinition().getTabIndex() != slot) {\r\n\t\t\tSystem.err.println(\"Set tab index to \" + slot + \" for component \" + component.getId() + \", definition requires updating!\");\r\n\t\t\tcomponent.getDefinition().setTabIndex(slot);\r\n\t\t}\r\n\t\tif (component.getDefinition().getType() != InterfaceType.TAB) {\r\n\t\t\tSystem.err.println(\"Set interface type to TAB for component \" + component.getId() + \", definition requires updating!\");\r\n\t\t\tcomponent.getDefinition().setType(InterfaceType.TAB);\r\n\t\t}\r\n\t\tcomponent.open(player);\r\n\t\ttabs[slot] = component;\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a tab.\r\n\t * @param component The component to open.\r\n\t */\r\n\tpublic void openTab(Component component) {\r\n\t\tif (component.getDefinition().getTabIndex() < 0) {\r\n\t\t\tSystem.err.println(\"No component definitions found for tab \" + component.getId() + \"!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\topenTab(component.getDefinition().getTabIndex(), component);\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a chat box interface.\r\n\t * @param componentId The component id.\r\n\t */\r\n\tpublic void openChatbox(int componentId) {\r\n\t\topenChatbox(new Component(componentId));\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a chat box interface.\r\n\t * @param component The component to open.\r\n\t */\r\n\tpublic void openChatbox(Component component) {\r\n\t\tif (component.getId() == DEFAULT_CHATBOX) {\r\n\t\t\tif (chatbox == null || (chatbox.getId() != DEFAULT_CHATBOX && chatbox.getDefinition().getType() == InterfaceType.CHATBOX)) {\r\n\t\t\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 23 : 14, 751, true));\r\n\t\t\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 70 : 75, 752, true));\r\n\t\t\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, InterfaceType.CHATBOX.getFixedPaneId(), InterfaceType.CHATBOX.getFixedChildId(), 137, true));\r\n\t\t\t}\r\n\t\t\tchatbox = component;\r\n\t\t\tplayer.getConfigManager().set(334, 1);\r\n\t\t} else {\r\n\t\t\tchatbox = component;\r\n\t\t\tif (chatbox.getDefinition().getType() != InterfaceType.DIALOGUE && chatbox.getDefinition().getType() != InterfaceType.CHATBOX && chatbox.getDefinition().getType() != InterfaceType.CS_CHATBOX) {\r\n\t\t\t\tSystem.err.println(\"Set interface type to CHATBOX for component \" + component.getId() + \", definition requires updating!\");\r\n\t\t\t\tchatbox.getDefinition().setType(InterfaceType.DIALOGUE);\r\n\t\t\t}\r\n\t\t\tchatbox.open(player);\r\n\t\t}\r\n\t\tif (TutorialSession.getExtension(player).getStage() < TutorialSession.MAX_STAGE) {\r\n\t\t\tComponent.setUnclosable(player, getChatbox());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Switches the player's window mode (fixed, resizable, fullscreen).\r\n\t * @param windowMode The window mode.\r\n\t */\r\n\tpublic void switchWindowMode(int windowMode) {\r\n\t\tif (windowMode != player.getSession().getClientInfo().getWindowMode()) {\r\n\t\t\tplayer.getSession().getClientInfo().setWindowMode(windowMode);\r\n\t\t\topenWindowsPane(new Component(isResizable() ? 746 : 548));\r\n\t\t\topenDefaultTabs();\r\n\t\t\topenInfoBars();\r\n\t\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 23 : 14, 751, true));\r\n\t\t\tPacketRepository.send(Interface.class, new InterfaceContext(player, getWindowPaneId(), isResizable() ? 70 : 75, 752, true));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the component for the given component id.\r\n\t * @param componentId The component id.\r\n\t * @return The component.\r\n\t */\r\n\tpublic Component getComponent(int componentId) {\r\n\t\tif (opened != null && opened.getId() == componentId) {\r\n\t\t\treturn opened;\r\n\t\t}\r\n\t\tif (chatbox != null && chatbox.getId() == componentId) {\r\n\t\t\treturn chatbox;\r\n\t\t}\r\n\t\tif (singleTab != null && singleTab.getId() == componentId) {\r\n\t\t\treturn singleTab;\r\n\t\t}\r\n\t\tif (overlay != null && overlay.getId() == componentId) {\r\n\t\t\treturn overlay;\r\n\t\t}\r\n\t\tif (windowsPane.getId() == componentId) {\r\n\t\t\treturn windowsPane;\r\n\t\t}\r\n\t\tfor (Component c : tabs) {\r\n\t\t\tif (c != null && c.getId() == componentId) {\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (componentId == 751 || componentId == 750 || componentId == 747) {\r\n\t\t\t//Chatbox settings, run orb & summoning orb.\r\n\t\t\treturn new Component(componentId);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the currently viewed tab.\r\n\t * @param tabIndex The tab index.\r\n\t */\r\n\tpublic void setViewedTab(int tabIndex) {\r\n\t\tif (tabs[tabIndex] == null) {\r\n\t\t\tthrow new IllegalStateException(\"Tab at index \" + tabIndex + \" is null!\");\r\n\t\t}\r\n\t\tcurrentTabIndex = tabIndex;\r\n\t\tswitch (tabIndex) {\r\n\t\tcase 0:\r\n\t\t\ttabIndex = 1;\r\n\t\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\ttabIndex = 2;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\ttabIndex = 3;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (tabIndex > 9) {\r\n\t\t\ttabIndex--;\r\n\t\t}\r\n\t\tplayer.getPacketDispatch().sendRunScript(115, \"i\", tabIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the main component opened matches the given component id.\r\n\t * @param id The component id.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasMainComponent(int id) {\r\n\t\treturn opened != null && opened.getId() == id;\r\n\t}\r\n\r\n\t/**\r\n\t * Opens an overlay.\r\n\t * @param component The component.\r\n\t */\r\n\tpublic void openOverlay(Component component) {\r\n\t\tif (overlay != null && !overlay.close(player)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\toverlay = component;\r\n\t\tif (overlay.getDefinition().getType() != InterfaceType.OVERLAY) {\r\n\t\t\tSystem.err.println(\"Set interface type to OVERLAY for component \" + component.getId() + \", definition requires updating!\");\r\n\t\t\toverlay.getDefinition().setType(InterfaceType.OVERLAY);\r\n\t\t\toverlay.getDefinition().setWalkable(true);\r\n\t\t}\r\n\t\toverlay.open(player);\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the current overlay.\r\n\t */\r\n\tpublic void closeOverlay() {\r\n\t\tif (overlay != null && close(overlay)) {\r\n\t\t\toverlay = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the weapon tab interface.\r\n\t * @return The weapon interface.\r\n\t */\r\n\tpublic WeaponInterface getWeaponTab() {\r\n\t\treturn player.getExtension(WeaponInterface.class);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the opened.\r\n\t * @return The opened.\r\n\t */\r\n\tpublic Component getOpened() {\r\n\t\treturn opened;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the opened.\r\n\t * @param opened The opened to set.\r\n\t */\r\n\tpublic void setOpened(Component opened) {\r\n\t\tthis.opened = opened;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the tabs.\r\n\t * @return The tabs.\r\n\t */\r\n\tpublic Component[] getTabs() {\r\n\t\treturn tabs;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the tabs.\r\n\t * @param tabs The tabs to set.\r\n\t */\r\n\tpublic void setTabs(Component[] tabs) {\r\n\t\tthis.tabs = tabs;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the chatbox.\r\n\t * @return The chatbox.\r\n\t */\r\n\tpublic Component getChatbox() {\r\n\t\treturn chatbox;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the chatbox.\r\n\t * @param chatbox The chatbox to set.\r\n\t */\r\n\tpublic void setChatbox(Component chatbox) {\r\n\t\tthis.chatbox = chatbox;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the overlay.\r\n\t * @return The overlay.\r\n\t */\r\n\tpublic Component getOverlay() {\r\n\t\treturn overlay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the overlay.\r\n\t * @param overlay The overlay to set.\r\n\t */\r\n\tpublic void setOverlay(Component overlay) {\r\n\t\tthis.overlay = overlay;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the player.\r\n\t * @return The player.\r\n\t */\r\n\tpublic Player getPlayer() {\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the currentTabIndex.\r\n\t * @return The currentTabIndex.\r\n\t */\r\n\tpublic int getCurrentTabIndex() {\r\n\t\treturn currentTabIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the currentTabIndex.\r\n\t * @param currentTabIndex The currentTabIndex to set.\r\n\t */\r\n\tpublic void setCurrentTabIndex(int currentTabIndex) {\r\n\t\tthis.currentTabIndex = currentTabIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the windowsPane.\r\n\t * @return The windowsPane.\r\n\t */\r\n\tpublic Component getWindowsPane() {\r\n\t\treturn windowsPane;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the windows pane id.\r\n\t * @return The window pane id.\r\n\t */\r\n\tpublic int getWindowPaneId() {\r\n\t\tif (windowsPane == null) {\r\n\t\t\treturn 548;\r\n\t\t}\r\n\t\treturn windowsPane.getId();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the default child id.\r\n\t * @return The default child id.\r\n\t */\r\n\tpublic int getDefaultChildId() {\r\n\t\treturn isResizable() ? 6 : 11;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player's client is resizable.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isResizable() {\r\n\t\tif (player.getSession().getClientInfo() == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn player.getSession().getClientInfo().isResizable();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the amount of times an interface related packet was sent, then increments it.\r\n\t * @param increment The amount to increment the counter with.\r\n\t * @return The amount of times an interface packet was sent.\r\n\t */\r\n\tpublic int getPacketCount(int increment) {\r\n\t\tint count = packetCount;\r\n\t\tpacketCount += increment;\r\n\t\treturn count;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/InterfaceManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/InterfaceManager.java	(date 1597089529766)
@@ -246,7 +246,7 @@
 		component.open(player);
 		if (component.getCloseEvent() == null) {
 			component.setCloseEvent((player, c) -> {
-				openDefaultTabs();
+//				openDefaultTabs();
 				return true;
 			});
 		}
Index: Server/src/main/java/Server/core/game/node/entity/player/link/BarcrawlManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.game.component.Component;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.item.Item;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Manages the players barcrawl quest.\r\n * @author 'Vexia\r\n */\r\npublic final class BarcrawlManager implements SavingModule {\r\n\r\n\t/**\r\n\t * The barcrawl card.\r\n\t */\r\n\tpublic static final Item BARCRAWL_CARD = new Item(455);\r\n\r\n\t/**\r\n\t * The name of bars.\r\n\t */\r\n\tpublic static final String[] NAMES = new String[] { \"BlueMoon Inn\", \"Blueberry's Bar\", \"Dead Man's Chest\", \"Dragon Inn\", \"Flying Horse Inn\", \"Foresters Arms\", \"Jolly Boar Inn\", \"Karamja Spirits bar\", \"Rising Sun Inn\", \"Rusty Anchor Inn\" };\r\n\r\n\t/**\r\n\t * The component used to draw the completed bars on.\r\n\t */\r\n\tpublic static final Component COMPONENT = new Component(220);\r\n\r\n\t/**\r\n\t * The player.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The bars completed.\r\n\t */\r\n\tprivate final boolean[] bars = new boolean[10];\r\n\r\n\t/**\r\n\t * If the quest has been started.\r\n\t */\r\n\tprivate boolean started;\r\n\r\n\t/**\r\n\t * Constructs a new {@code BarcrawlManager} {@code Object}.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic BarcrawlManager(final Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tif (started) {\r\n\t\t\tbuffer.put((byte) 1);\r\n\t\t}\r\n\t\tfor (int i = 0; i < bars.length; i++) {\r\n\t\t\tif (bars[i]) {\r\n\t\t\t\tbuffer.put((byte) 2);\r\n\t\t\t\tbuffer.put((byte) i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get() & 0xFF) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tstarted = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbars[buffer.get()] = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to read the card.\r\n\t */\r\n\tpublic void read() {\r\n\t\tif (isFinished()) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You are too drunk to be able to read the barcrawl card.\");\r\n\t\t\t;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.getInterfaceManager().open(COMPONENT);\r\n\t\tdrawCompletions();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the completed bars on the interface.\r\n\t */\r\n\tprivate void drawCompletions() {\r\n\t\tplayer.getPacketDispatch().sendString(\"<col=0000FF>The Official Alfred Grimhand Barcrawl!\", 220, 1);\r\n\t\tboolean complete;\r\n\t\tfor (int i = 0; i < bars.length; i++) {\r\n\t\t\tcomplete = bars[i];\r\n\t\t\tplayer.getPacketDispatch().sendString((complete ? \"<col=00FF00>\" : \"<col=FF0000>\") + NAMES[i] + \" - \" + (complete ? \"Complete!\" : \"Not Completed...\"), 220, 3 + i);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Completes a bar challenge.\r\n\t * @param index the index.\r\n\t */\r\n\tpublic void complete(int index) {\r\n\t\tbars[index] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the barcrawl quest is completed.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isFinished() {\r\n\t\tfor (int i = 0; i < bars.length; i++) {\r\n\t\t\tif (!isCompleted(i)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the bars.\r\n\t */\r\n\tpublic void reset() {\r\n\t\tstarted = false;\r\n\t\tfor (int i = 0; i < bars.length; i++) {\r\n\t\t\tbars[i] = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a bar is completed.\r\n\t * @param index the index.\r\n\t * @return {@code True} if completed.\r\n\t */\r\n\tpublic boolean isCompleted(int index) {\r\n\t\treturn bars[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has the card.\r\n\t * @return the card.\r\n\t */\r\n\tpublic boolean hasCard() {\r\n\t\treturn player.getInventory().containsItem(BARCRAWL_CARD) || player.getBank().containsItem(BARCRAWL_CARD);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the started.\r\n\t * @return The started.\r\n\t */\r\n\tpublic boolean isStarted() {\r\n\t\treturn started;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the started.\r\n\t * @param started The started to set.\r\n\t */\r\n\tpublic void setStarted(boolean started) {\r\n\t\tthis.started = started;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/BarcrawlManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/BarcrawlManager.java	(date 1597089529760)
@@ -4,6 +4,8 @@
 import core.game.node.entity.player.Player;
 import core.game.node.entity.player.info.login.SavingModule;
 import core.game.node.item.Item;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 
@@ -65,6 +67,14 @@
 		buffer.put((byte) 0);
 	}
 
+	public void parse(JSONObject data){
+		started = (boolean) data.get("started");
+		JSONArray barsVisisted = (JSONArray) data.get("bars");
+		for(int i = 0; i < barsVisisted.size(); i++){
+			bars[i] = (boolean) barsVisisted.get(i);
+		}
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
@@ -169,4 +179,7 @@
 		this.started = started;
 	}
 
+	public boolean[] getBars() {
+		return bars;
+	}
 }
Index: Server/src/main/java/Server/plugin/skill/summoning/familiar/Familiar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.summoning.familiar;\r\n\r\nimport core.cache.def.impl.NPCDefinition;\r\nimport plugin.skill.SkillBonus;\r\nimport plugin.skill.Skills;\r\nimport plugin.skill.summoning.SummoningScroll;\r\nimport plugin.skill.summoning.pet.Pet;\r\nimport core.game.interaction.MovementPulse;\r\nimport core.game.node.entity.Entity;\r\nimport core.game.node.entity.combat.BattleState;\r\nimport core.game.node.entity.combat.CombatPulse;\r\nimport core.game.node.entity.combat.CombatStyle;\r\nimport core.game.node.entity.combat.CombatSwingHandler;\r\nimport core.game.node.entity.combat.equipment.WeaponInterface;\r\nimport core.game.node.entity.impl.Projectile;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.item.Item;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.map.RegionManager;\r\nimport core.game.world.map.path.Pathfinder;\r\nimport core.game.world.map.zone.ZoneRestriction;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.game.world.update.flag.context.Graphics;\r\nimport core.plugin.Plugin;\r\nimport core.tools.RandomFunction;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * Represents a familiar.\r\n * @author Emperor\r\n */\r\npublic abstract class Familiar extends NPC implements Plugin<Object> {\r\n\r\n\t/**\r\n\t * The summon graphics for a small familiar.\r\n\t */\r\n\tprotected static final Graphics SMALL_SUMMON_GRAPHIC = Graphics.create(1314);\r\n\r\n\t/**\r\n\t * The spawn graphics for a large familiar.\r\n\t */\r\n\tprotected static final Graphics LARGE_SUMMON_GRAPHIC = Graphics.create(1315);\r\n\r\n\t/**\r\n\t * The special animation.\r\n\t */\r\n\tprotected static final Animation SPECIAL_ANIMATION = Animation.create(7660);\r\n\r\n\t/**\r\n\t * The special graphic.\r\n\t */\r\n\tprotected static final Graphics SPECIAL_GRAPHIC = Graphics.create(1316);\r\n\r\n\t/**\r\n\t * The owner.\r\n\t */\r\n\tprotected Player owner;\r\n\r\n\t/**\r\n\t * The amount of ticks left.\r\n\t */\r\n\tprotected int ticks;\r\n\r\n\t/**\r\n\t * The initial amount of ticks.\r\n\t */\r\n\tprotected int maximumTicks;\r\n\r\n\t/**\r\n\t * The amount of special points left.\r\n\t */\r\n\tprotected int specialPoints = 60;\r\n\r\n\t/**\r\n\t * The pouch id.\r\n\t */\r\n\tprivate final int pouchId;\r\n\r\n\t/**\r\n\t * The special move cost.\r\n\t */\r\n\tprivate final int specialCost;\r\n\r\n\t/**\r\n\t * The combat reward.\r\n\t */\r\n\tprivate CombatSwingHandler combatHandler;\r\n\r\n\t/**\r\n\t * If the familiar is a combat familiar.\r\n\t */\r\n\tprotected boolean combatFamiliar;\r\n\r\n\t/**\r\n\t * If the familiars special is charged.\r\n\t */\r\n\tprotected boolean charged;\r\n\r\n\t/**\r\n\t * The invisible familiar boosts.\r\n\t */\r\n\tprotected List<SkillBonus> boosts = new ArrayList<>();\r\n\r\n\t/**\r\n\t * The attack style.\r\n\t */\r\n\tprivate final int attackStyle;\r\n\r\n\t/**\r\n\t * Constructs a new {@code Familiar} {@code Object}.\r\n\t * @param owner The owner.\r\n\t * @param id The NPC id.\r\n\t * @param location The location.\r\n\t * @param ticks The ticks left.\r\n\t * @param pouchId The pouch.\r\n\t * @param specialCost The special move cost.\r\n\t * @param attackStyle the style.\r\n\t */\r\n\tpublic Familiar(Player owner, int id, int ticks, int pouchId, int specialCost, final int attackStyle) {\r\n\t\tsuper(id, null);\r\n\t\tthis.owner = owner;\r\n\t\tthis.maximumTicks = ticks;\r\n\t\tthis.ticks = ticks;\r\n\t\tthis.pouchId = pouchId;\r\n\t\tthis.specialCost = specialCost;\r\n\t\tthis.combatFamiliar = NPCDefinition.forId(getOriginalId() + 1).getName().equals(getName());\r\n\t\tthis.attackStyle = attackStyle;\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a new {@code Familiar} {@code Object}.\r\n\t * @param owner The owner.\r\n\t * @param id The NPC id.\r\n\t * @param location The location.\r\n\t * @param ticks The ticks left.\r\n\t * @param pouchId The pouch.\r\n\t * @param specialCost The special move cost.\r\n\t */\r\n\tpublic Familiar(Player owner, int id, int ticks, int pouchId, int specialCost) {\r\n\t\tthis(owner, id, ticks, pouchId, specialCost, WeaponInterface.STYLE_DEFENSIVE);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the familiar.\r\n\t * @param loc The location.\r\n\t */\r\n\tpublic void init(Location loc, boolean call) {\r\n\t\tlocation = loc;\r\n\t\tif (location == null) {\r\n\t\t\tlocation = owner.getLocation();\r\n\t\t\tsetInvisible(true);\r\n\t\t}\r\n\t\tsuper.init();\r\n\t\tstartFollowing();\r\n\t\tsendConfiguration();\r\n\t\tif (call) {\r\n\t\t\tcall();\r\n\t\t}\r\n\t\towner.getInterfaceManager().openInfoBars();\r\n\t\tif (getZoneMonitor().isInZone(\"Wilderness\")) {\r\n\t\t\ttransform();\r\n\t\t}\r\n\t}\r\n\t\r\n\t@Override\t\r\n\tpublic void init() {\r\n\t\tinit(getSpawnLocation(), true);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void handleTickActions() {\r\n\t\tif (ticks-- % 50 == 0) {\r\n\t\t\tupdateSpecialPoints(-15);\r\n\t\t\towner.getSkills().updateLevel(Skills.SUMMONING, -1, 0);\r\n\t\t\tif (!getText().isEmpty()) {\r\n\t\t\t\tsuper.sendChat(getText());\r\n\t\t\t}\r\n\t\t}\r\n\t\tsendTimeRemaining();\r\n\t\tswitch (ticks) {\r\n\t\tcase 100:\r\n\t\t\towner.getPacketDispatch().sendMessage(\"<col=ff0000>You have 1 minute before your familiar vanishes.\");\r\n\t\t\tbreak;\r\n\t\tcase 50:\r\n\t\t\towner.getPacketDispatch().sendMessage(\"<col=ff0000>You have 30 seconds before your familiar vanishes.\");\r\n\t\t\tbreak;\r\n\t\tcase 0:\r\n\t\t\tif (isBurdenBeast() && !((BurdenBeast) this).getContainer().isEmpty()) {\r\n\t\t\t\towner.getPacketDispatch().sendMessage(\"<col=ff0000>Your familiar has dropped all the items it was holding.\");\r\n\t\t\t} else {\r\n\t\t\t\towner.getPacketDispatch().sendMessage(\"<col=ff0000>Your familiar has vanished.\");\r\n\t\t\t}\r\n\t\t\tdismiss();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tCombatPulse combat = owner.getProperties().getCombatPulse();\r\n\t\tif (!isInvisible() && !getProperties().getCombatPulse().isAttacking() && (combat.isAttacking() || owner.inCombat())) {\r\n\t\t\tEntity victim = combat.getVictim();\r\n\t\t\tif (victim == null) {\r\n\t\t\t\tvictim = owner.getAttribute(\"combat-attacker\");\r\n\t\t\t}\r\n\t\t\tif (combat.getVictim() != this && victim != null && !victim.isInvisible() && getProperties().isMultiZone() && owner.getProperties().isMultiZone() && isCombatFamiliar() && !isBurdenBeast()) {\r\n\t\t\t\tgetProperties().getCombatPulse().attack(victim);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((!isInvisible() && owner.getLocation().getDistance(getLocation()) > 12) || (isInvisible() && ticks % 25 == 0)) {\r\n\t\t\tif (!call()) {\r\n\t\t\t\tsetInvisible(true);\r\n\t\t\t}\r\n\t\t} else if (!getPulseManager().hasPulseRunning()) {\r\n\t\t\tstartFollowing();\r\n\t\t}\r\n\t\thandleFamiliarTick();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean isAttackable(Entity entity, CombatStyle style) {\r\n\t\tif (entity == owner) {\r\n\t\t\towner.getPacketDispatch().sendMessage(\"You can't just betray your own familiar like that!\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tif (!owner.isAttackable(entity, style)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!getProperties().isMultiZone()) {\r\n\t\t\tif (entity instanceof Player && !((Player) entity).getProperties().isMultiZone()) {\r\n\t\t\t\t((Player) entity).getPacketDispatch().sendMessage(\"You have to be in multicombat to attack a player's familiar.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (entity instanceof Player) {\r\n\t\t\t\t((Player) entity).getPacketDispatch().sendMessage(\"This familiar is not in the a multicombat zone.\");\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tif (!((Player) entity).getSkullManager().isWilderness()) {\r\n\t\t\t\t((Player) entity).getPacketDispatch().sendMessage(\"You have to be in the wilderness to attack a player's familiar.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!owner.getSkullManager().isWilderness()) {\r\n\t\t\t\t((Player) entity).getPacketDispatch().sendMessage(\"This familiar's owner is not in the wilderness.\");\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn super.isAttackable(entity, style);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onRegionInactivity() {\r\n\t\tcall();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic CombatSwingHandler getSwingHandler(boolean swing) {\r\n\t\tif (combatHandler != null) {\r\n\t\t\treturn combatHandler;\r\n\t\t}\r\n\t\treturn super.getSwingHandler(swing);\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs a new {@code Familiar} {@code Object}.\r\n\t * @param owner The owner.\r\n\t * @param id The NPC id.\r\n\t * @return The familiar.\r\n\t */\r\n\tpublic abstract Familiar construct(Player owner, int id);\r\n\r\n\t/**\r\n\t * Executes the special move.\r\n\t * @param special The familiar special object.\r\n\t * @return {@code True} if the move was executed.\r\n\t */\r\n\tprotected abstract boolean specialMove(FamiliarSpecial special);\r\n\r\n\t/**\r\n\t * Handles the familiar special tick.\r\n\t */\r\n\tprotected void handleFamiliarTick() {\r\n\t}\r\n\r\n\t/**\r\n\t * Configures use with events, and other plugin related content..\r\n\t */\r\n\tprotected void configureFamiliar() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the forced chat text for this familiar.\r\n\t * @return The forced chat text.\r\n\t */\r\n\tprotected String getText() {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the familiar into the Wilderness combat form.\r\n\t */\r\n\tpublic void transform() {\r\n\t\tif (isCombatFamiliar()) {\r\n\t\t\ttransform(getOriginalId() + 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the time remaining.\r\n\t */\r\n\tprivate void sendTimeRemaining() {\r\n\t\tint minutes = (int) Math.ceil(ticks * 0.01);\r\n\t\tint hash = minutes << 7 | ((ticks - (minutes * 100)) > 49 ? 1 : 0) << 6;\r\n\t\towner.getConfigManager().set(1176, hash);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the familiar can execute its special move and does so if able.\r\n\t * @param special The familiar special object.\r\n\t */\r\n\tpublic void executeSpecialMove(FamiliarSpecial special) {\r\n\t\tif (special.getNode() == this) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (specialCost > specialPoints) {\r\n\t\t\towner.getPacketDispatch().sendMessage(\"Your familiar does not have enough special move points left.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tSummoningScroll scroll = SummoningScroll.forPouch(pouchId);\r\n\t\tif (scroll == null) {\r\n\t\t\towner.getPacketDispatch().sendMessage(\"Invalid scroll for pouch \" + pouchId + \" - report!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!owner.getInventory().contains(scroll.getItemId(), 1)) {\r\n\t\t\towner.getPacketDispatch().sendMessage(\"You do not have enough scrolls left to do this special move.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (owner.getLocation().getDistance(getLocation()) > 15) {\r\n\t\t\towner.getPacketDispatch().sendMessage(\"Your familiar is too far away to use that scroll, or it cannot see you.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (specialMove(special)) {\r\n\t\t\tsetAttribute(\"special-delay\", GameWorld.getTicks() + 3);\r\n\t\t\towner.getInventory().remove(new Item(scroll.getItemId()));\r\n\t\t\tvisualizeSpecialMove();\r\n\t\t\tupdateSpecialPoints(specialCost);\r\n\t\t\towner.getSkills().addExperience(Skills.SUMMONING, scroll.getExperience(), true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the special move visualization for the owner.\r\n\t */\r\n\tpublic void visualizeSpecialMove() {\r\n\t\towner.visualize(Animation.create(7660), Graphics.create(1316));\r\n\t}\r\n\r\n\t/**\r\n\t * Sends a familiar hit.\r\n\t * @param target the target.\r\n\t * @param maxHit the max hit.\r\n\t * @param graphics the graphics.\r\n\t */\r\n\tpublic void sendFamiliarHit(final Entity target, final int maxHit, final Graphics graphics) {\r\n\t\tfinal int ticks = 2 + (int) Math.floor(getLocation().getDistance(target.getLocation()) * 0.5);\r\n\t\tgetProperties().getCombatPulse().setNextAttack(4);\r\n\t\tGameWorld.Pulser.submit(new Pulse(ticks, this, target) {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tBattleState state = new BattleState(Familiar.this, target);\r\n\t\t\t\tint hit = 0;\r\n\t\t\t\tif (getCombatStyle().getSwingHandler().isAccurateImpact(Familiar.this, target)) {\r\n\t\t\t\t\thit = RandomFunction.randomize(maxHit);\r\n\t\t\t\t}\r\n\t\t\t\tstate.setEstimatedHit(hit);\r\n\t\t\t\ttarget.getImpactHandler().handleImpact(owner, hit, CombatStyle.MELEE, state);\r\n\t\t\t\tif (graphics != null) {\r\n\t\t\t\t\ttarget.graphics(graphics);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sends a projectile to the target.\r\n\t * @param target the target.\r\n\t * @param projectileId the projectile id.\r\n\t */\r\n\tpublic void projectile(final Entity target, final int projectileId) {\r\n\t\tProjectile.magic(this, target, projectileId, 40, 36, 51, 10).send();\r\n\t}\r\n\r\n\t/**\r\n\t * Sends a familiar hit.\r\n\t * @param maxHit the max hit.\r\n\t */\r\n\tpublic void sendFamiliarHit(final Entity target, final int maxHit) {\r\n\t\tsendFamiliarHit(target, maxHit, null);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this familiar can attack the target (used mainly for special\r\n\t * moves).\r\n\t */\r\n\tpublic boolean canAttack(Entity target, boolean message) {\r\n\t\tif (!target.isAttackable(owner, owner.getProperties().getCombatPulse().getStyle())) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (target.getLocation().getDistance(getLocation()) > 8) {\r\n\t\t\tif (message) {\r\n\t\t\t\towner.getPacketDispatch().sendMessage(\"That target is too far.\");\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (target.getLocks().isInteractionLocked() || !target.isAttackable(this, CombatStyle.MAGIC)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn isCombatFamiliar();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean canAttack(Entity target) {\r\n\t\treturn canAttack(target, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a familiar can perform a combat special attack.\r\n\t * @param target the target.\r\n\t * @param message show message.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean canCombatSpecial(Entity target, boolean message) {\r\n\t\tif (!canAttack(target, message)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!isOwnerAttackable()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (getAttribute(\"special-delay\", 0) > GameWorld.getTicks()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a faimiliar can perform a combat special attack.\r\n\t * @param target the target.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean canCombatSpecial(Entity target) {\r\n\t\treturn canCombatSpecial(target, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the owner is attackable.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isOwnerAttackable() {\r\n\t\tif (!owner.getProperties().getCombatPulse().isAttacking() && !owner.inCombat() && !getProperties().getCombatPulse().isAttacking()) {\r\n\t\t\towner.getPacketDispatch().sendMessage(\"Your familiar cannot fight whilst you are not in combat.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the combat style.\r\n\t * @return the style.\r\n\t */\r\n\tpublic CombatStyle getCombatStyle() {\r\n\t\treturn CombatStyle.MAGIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts a players battle state.\r\n\t * @param state the state.\r\n\t */\r\n\tpublic void adjustPlayerBattle(final BattleState state) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts following the owner.\r\n\t */\r\n\tpublic void startFollowing() {\r\n\t\tgetPulseManager().run(new MovementPulse(this, owner, Pathfinder.DUMB) {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}, \"movement\");\r\n\t\tface(owner);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void finalizeDeath(Entity killer) {\r\n\t\tdismiss();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the familiar is a combat familiar.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isCombatFamiliar() {\r\n\t\treturn combatFamiliar;\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the familiar packets.\r\n\t */\r\n\tpublic void sendConfiguration() {\r\n\t\towner.getConfigManager().set(448, getPouchId());\r\n\t\towner.getConfigManager().set(1174, getOriginalId());\r\n\t\towner.getConfigManager().set(1175, specialCost << 23);\r\n\t\tsendTimeRemaining();\r\n\t\tupdateSpecialPoints(0);\r\n\t}\r\n\r\n\t/**\r\n\t * Calls the familiar.\r\n\t */\r\n\t//int spamTimer = 0;\r\n\tpublic boolean call() {\r\n\t\tLocation destination = getSpawnLocation();\r\n\t\tif (destination == null) {\r\n\t\t\t//owner.getPacketDispatch().sendMessage(\"Your familiar is too big to fit here. Try calling it again when you are standing\");\r\n\t\t\t//owner.getPacketDispatch().sendMessage(\"somewhere with more space.\");\r\n\t\t\t//spamTimer = 50;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tsetInvisible(getZoneMonitor().isRestricted(ZoneRestriction.FOLLOWERS) && !owner.getLocks().isLocked(\"enable_summoning\"));\r\n\t\tgetProperties().setTeleportLocation(destination);\r\n\t\tif (!(this instanceof Pet)) {\r\n\t\t\tif (size() > 1) {\r\n\t\t\t\tgraphics(LARGE_SUMMON_GRAPHIC);\r\n\t\t\t} else {\r\n\t\t\t\tgraphics(SMALL_SUMMON_GRAPHIC);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (getProperties().getCombatPulse().isAttacking()) {\r\n\t\t\tstartFollowing();\r\n\t\t} else {\r\n\t\t\tface(owner);\r\n\t\t}\r\n\t\tif (!isRenderable() && owner.isActive()) {\r\n\t\t\t// System.err.println(\"Familiar in inactive region!\");\r\n\t\t\tgetWalkingQueue().update();\r\n\t\t\tgetUpdateMasks().prepare(this);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the spawning location of the familiar.\r\n\t * @return The spawn location.\r\n\t */\r\n\tpublic Location getSpawnLocation() {\r\n\t\treturn RegionManager.getSpawnLocation(owner, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Dismisses the familiar.\r\n\t */\r\n\tpublic void dismiss() {\r\n\t\tclear();\r\n\t\tgetPulseManager().clear();\r\n\t\towner.getInterfaceManager().hideTabs(7);\r\n\t\towner.getFamiliarManager().setFamiliar(null);\r\n\t\towner.getConfigManager().set(448, -1);\r\n\t\towner.getConfigManager().set(1176, 0);\r\n\t\towner.getConfigManager().set(1175, 182986);\r\n\t\towner.getConfigManager().set(1174, -1);\r\n\t\tif (owner.getSkullManager().isWilderness()) {\r\n\t\t\towner.getAppearance().sync();\r\n\t\t}\r\n\t\towner.getInterfaceManager().setViewedTab(3);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the special move points.\r\n\t * @param diff The difference to decrease with.\r\n\t */\r\n\tpublic void updateSpecialPoints(int diff) {\r\n\t\tspecialPoints -= diff;\r\n\t\tif (specialPoints > 60) {\r\n\t\t\tspecialPoints = 60;\r\n\t\t}\r\n\t\towner.getConfigManager().set(1177, specialPoints);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Plugin<Object> newInstance(Object arg) throws Throwable {\r\n\t\tfor (int id : getIds()) {\r\n\t\t\tif (FamiliarManager.getFamiliars().containsKey(id)) {\r\n\t\t\t\tSystem.err.println(\"Familiar \" + id + \" was already registered!\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tFamiliarManager.getFamiliars().put(id, this);\r\n\t\t\tconfigureFamiliar();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Object fireEvent(String identifier, Object... args) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the charged.\r\n\t * @return The charged.\r\n\t */\r\n\tpublic boolean isCharged() {\r\n\t\tif (charged) {\r\n\t\t\towner.getPacketDispatch().sendMessage(\"Your familiar is already charging its attack!\");\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a familiar boost.\r\n\t * @param skill the skill.\r\n\t * @return the boost.\r\n\t */\r\n\tpublic int getBoost(int skill) {\r\n\t\tSkillBonus bonus = null;\r\n\t\tfor (SkillBonus b : boosts) {\r\n\t\t\tif (b.getSkillId() == skill) {\r\n\t\t\t\tbonus = b;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (bonus == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn (int) bonus.getBonus();\r\n\t}\r\n\r\n\t/**\r\n\t * Charges a familiar.\r\n\t */\r\n\tpublic void charge() {\r\n\t\tsetCharged(true);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the charged.\r\n\t * @param charged The charged to set.\r\n\t */\r\n\tpublic void setCharged(boolean charged) {\r\n\t\tthis.charged = charged;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the familiar is a beast of burden.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isBurdenBeast() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the NPC ids.\r\n\t * @return The npc ids.\r\n\t */\r\n\tpublic abstract int[] getIds();\r\n\r\n\t/**\r\n\t * Gets the pouch id.\r\n\t * @return The pouch id.\r\n\t */\r\n\tpublic int getPouchId() {\r\n\t\treturn pouchId;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the owner.\r\n\t * @return The owner.\r\n\t */\r\n\tpublic Player getOwner() {\r\n\t\treturn owner;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the owner.\r\n\t * @param owner The owner to set.\r\n\t */\r\n\tpublic void setOwner(Player owner) {\r\n\t\tthis.owner = owner;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the combatHandler.\r\n\t * @return The combatHandler.\r\n\t */\r\n\tpublic CombatSwingHandler getCombatHandler() {\r\n\t\treturn combatHandler;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the combatHandler.\r\n\t * @param combatHandler The combatHandler to set.\r\n\t */\r\n\tpublic void setCombatHandler(CombatSwingHandler combatHandler) {\r\n\t\tthis.combatHandler = combatHandler;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the view animation for remote viewing.\r\n\t * @return the animation.\r\n\t */\r\n\tpublic Animation getViewAnimation() {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the exp style.\r\n\t * @return the style.\r\n\t */\r\n\tpublic int getAttackStyle() {\r\n\t\treturn attackStyle;\r\n\t}\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/summoning/familiar/Familiar.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/summoning/familiar/Familiar.java	(date 1597089529814)
@@ -728,4 +728,11 @@
 		return attackStyle;
 	}
 
+	public int getTicks() {
+		return ticks;
+	}
+
+	public int getSpecialPoints() {
+		return specialPoints;
+	}
 }
\ No newline at end of file
Index: Management-Server/src/main/java/ms/ServerConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ms;\r\n\r\nimport ms.system.OperatingSystem;\r\n\r\n/**\r\n * Holds constants for the management server.\r\n * @author v4rg\r\n *\r\n */\r\npublic final class ServerConstants {\r\n\r\n\t/**\r\n\t * The port to be used for communications.\r\n\t */\r\n\tpublic static final String SERVER_NAME = \"2009Scape\";\r\n\r\n\t/**\r\n\t * The port to be used for communications.\r\n\t */\r\n\tpublic static final int PORT = 5555;\r\n\t\r\n\t/**\r\n\t * The maximum amount of worlds.\r\n\t */\r\n\tpublic static final int WORLD_LIMIT = 10;\r\n\t\r\n\t/**\r\n\t * The world switching delay in milliseconds.\r\n\t */\r\n\tpublic static final long WORLD_SWITCH_DELAY = 20_000l;\r\n\t\r\n\t/**\r\n\t * The address of the Management server.\r\n\t */\r\n\tpublic static final String HOST_ADDRESS = \"127.0.0.1\";\r\n\r\n\t/**\r\n\t * The setting that determines whether new accounts created will automatically join the Server's default clan chat.\r\n\t */\r\n\tpublic static boolean  NEW_PLAYER_DEFAULT_CLAN = true;\r\n\r\n\t/**\r\n\t * The store path.\r\n\t */\r\n\tpublic static final String STORE_PATH = \"./store/\";\r\n\t\r\n\t/**\r\n\t * The maximum amount of players per world.\r\n\t */\r\n\tpublic static final int MAX_PLAYERS = (1 << 11) - 1;\r\n\t\r\n\t/**\r\n\t * The operating system of the management server\r\n\t */\r\n\tpublic static final OperatingSystem OS = System.getProperty(\"os.name\").toUpperCase().contains(\"WIN\") ? OperatingSystem.WINDOWS : OperatingSystem.UNIX;\r\n\t\r\n\t/**\r\n\t * The administrators.\r\n\t */\r\n\tpublic static final String[] ADMINISTRATORS = {\r\n\t\t\t\"ethan\",\r\n\t\t\t\"austin\",\r\n\t\t\t\"redsparr0w\",\r\n\t};\r\n\t\r\n\tpublic static final String[] DATABASE_NAMES = {\r\n\t\t\t\"server\",\r\n\t\t\t\"global\",\r\n\t};\r\n\t\r\n\t/**\r\n\t * Stops from instantiating.\r\n\t */\r\n\tprivate ServerConstants() {\r\n\t\t/*\r\n\t\t * empty.\r\n\t\t */\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fixes a path to a specified operating system\r\n\t * @param operatingSystem The os type.\r\n\t * @param path The path.\r\n\t * @return The fixed path.\r\n\t */\r\n    public static String fixPath(OperatingSystem operatingSystem, String path) {\r\n    \tif (operatingSystem == null)\r\n    \t\toperatingSystem = OS;\r\n    \treturn operatingSystem == OperatingSystem.WINDOWS ? path.replace(\"/\",\"\\\\\") : path.replace(\"\\\\\",\"/\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Management-Server/src/main/java/ms/ServerConstants.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Management-Server/src/main/java/ms/ServerConstants.java	(date 1597089529729)
@@ -34,11 +34,6 @@
 	 */
 	public static final String HOST_ADDRESS = "127.0.0.1";
 
-	/**
-	 * The setting that determines whether new accounts created will automatically join the Server's default clan chat.
-	 */
-	public static boolean  NEW_PLAYER_DEFAULT_CLAN = true;
-
 	/**
 	 * The store path.
 	 */
Index: Server/src/main/java/Server/core/game/node/entity/player/link/ConfigurationManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.net.packet.PacketRepository;\r\nimport core.net.packet.context.ConfigContext;\r\nimport core.net.packet.out.Config;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Manages a player's configurations.\r\n * @author Emperor\r\n */\r\npublic final class ConfigurationManager implements SavingModule {\r\n\r\n\t/**\r\n\t * The amount of configurations.\r\n\t */\r\n\tpublic static final int SIZE = 2000;\r\n\r\n\t/**\r\n\t * The player.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The configurations.\r\n\t */\r\n\tprivate final int[] configurations = new int[SIZE];\r\n\r\n\t/**\r\n\t * The configurations.\r\n\t */\r\n\tprivate final int[] savedConfigurations = new int[SIZE];\r\n\r\n\t/**\r\n\t * Constructs a new {@code ConfigurationManager} {@code Object}.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic ConfigurationManager(Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tfor (int index = 0; index < savedConfigurations.length; index++) {\r\n\t\t\tint value = savedConfigurations[index];\r\n\t\t\tif (value != 0) {\r\n\t\t\t\tbuffer.putShort((short) index);\r\n\t\t\t\tbuffer.putInt(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuffer.putShort((short) -1);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint index = 0;\r\n\t\twhile ((index = buffer.getShort()) != -1) {\r\n\t\t\tsavedConfigurations[index] = buffer.getInt();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the configurations.\r\n\t */\r\n\tpublic void init() {\r\n\t\tfor (int i = 0; i < savedConfigurations.length; i++) {\r\n\t\t\tint value = savedConfigurations[i];\r\n\t\t\tif (value != 0) {\r\n\t\t\t\tset(i, value, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the configurations.\r\n\t */\r\n\tpublic void reset() {\r\n\t\tfor (int i = 0; i < configurations.length; i++) {\r\n\t\t\tconfigurations[i] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a configuration.\r\n\t * @param config The configuration.\r\n\t * @param value The value.\r\n\t */\r\n\tpublic void set(Configuration config, boolean value) {\r\n\t\tset(config.id, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a configuration.\r\n\t * @param config The configuration.\r\n\t * @param value The value.\r\n\t */\r\n\tpublic void set(int id, boolean value) {\r\n\t\tset(id, value ? 1 : 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a configuration.\r\n\t * @param config The configuration.\r\n\t * @param value The value.\r\n\t */\r\n\tpublic void set(Configuration config, int value) {\r\n\t\tset(config, value, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the configuration.\r\n\t * @param config The configuration id.\r\n\t * @param value The value.\r\n\t * @param saved If the configuration should be saved.\r\n\t */\r\n\tpublic void set(Configuration config, int value, boolean saved) {\r\n\t\tset(config.id, value, saved);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a configuration.\r\n\t * @param id The configuration id.\r\n\t * @param value The value.\r\n\t */\r\n\tpublic void set(int id, int value) {\r\n\t\tset(id, value, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a configuration for a set amount of time.\r\n\t * @param id the id.\r\n\t * @param value the value.\r\n\t * @param delay the delay.\r\n\t */\r\n\tpublic void set(final int id, final int value, int delay) {\r\n\t\tset(id, value);\r\n\t\tGameWorld.Pulser.submit(new Pulse(delay, player) {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tset(id, 0);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a configuration.\r\n\t * @param id The configuration id.\r\n\t * @param value The value.\r\n\t */\r\n\tpublic void set(int id, int value, boolean saved) {\r\n\t\tif (configurations[id] != value) {\r\n\t\t\tPacketRepository.send(Config.class, new ConfigContext(player, id, configurations[id] = value));\r\n\t\t}\r\n\t\tif (saved) {\r\n\t\t\tsavedConfigurations[id] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the configuration without caching.\r\n\t */\r\n\t@Deprecated\r\n\tpublic void send(int id, int value) {\r\n\t\tPacketRepository.send(Config.class, new ConfigContext(player, id, value));\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the configuration value.\r\n\t * @param id The config id.\r\n\t * @return The value.\r\n\t */\r\n\tpublic int get(int id) {\r\n\t\treturn configurations[id];\r\n\t}\r\n\r\n\t/**\r\n\t * Holds the configurations.\r\n\t * @author Emperor\r\n\t */\r\n\tpublic enum Configuration {\r\n\r\n\t\tBRIGHTNESS(166), MUSIC_VOLUME(168), EFFECT_VOLUME(169), MOUSE_BUTTON(170), CHAT_EFFECT(171), RETALIATE(172), RUNNING(173), SPLIT_PRIVATE(287), ACCEPT_AID(427), PC_PORTALS(719), SURROUNDING_VOLUME(872), CLAN_WAR_DATA(1147), ;\r\n\r\n\t\t/**\r\n\t\t * The config id.\r\n\t\t */\r\n\t\tprivate final int id;\r\n\r\n\t\t/**\r\n\t\t * Constructs a new {@code Configuration} {@code Object}.\r\n\t\t * @param id The config id.\r\n\t\t */\r\n\t\tprivate Configuration(int id) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the id.\r\n\t\t * @return The id.\r\n\t\t */\r\n\t\tpublic int getId() {\r\n\t\t\treturn id;\r\n\t\t}\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/ConfigurationManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/ConfigurationManager.java	(date 1597089529762)
@@ -207,5 +207,10 @@
 		public int getId() {
 			return id;
 		}
+
+	}
+
+	public int[] getSavedConfigurations() {
+		return savedConfigurations;
 	}
 }
\ No newline at end of file
Index: Server/src/main/java/Server/core/plugin/PluginManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.plugin\r\n\r\nimport core.game.node.entity.player.info.login.LoginConfiguration\r\nimport core.game.node.entity.player.link.quest.Quest\r\nimport core.game.node.entity.player.link.quest.QuestRepository\r\nimport core.game.system.SystemLogger\r\nimport io.github.classgraph.ClassGraph\r\nimport io.github.classgraph.ClassInfo\r\nimport plugin.activity.ActivityManager\r\nimport plugin.activity.ActivityPlugin\r\nimport plugin.dialogue.DialoguePlugin\r\nimport java.util.*\r\nimport java.util.function.Consumer\r\nimport kotlin.reflect.jvm.internal.impl.load.kotlin.JvmType\r\n\r\n/**\r\n * Represents a class used to handle the loading of all plugins.\r\n * @author Ceikry\r\n */\r\nobject PluginManager {\r\n    var disabledPlugins = HashMap<String, Boolean>()\r\n    /**\r\n     * The amount of plugins loaded.\r\n     */\r\n    var amountLoaded = 0\r\n        private set\r\n\r\n    /**\r\n     * The currently loaded plugin names.\r\n     */\r\n    private var loadedPlugins: MutableList<String>? = ArrayList()\r\n\r\n    /**\r\n     * The last loaded plugin.\r\n     */\r\n    private val lastLoaded: String? = null\r\n\r\n    /**\r\n     * Initializes the plugin manager.\r\n     */\r\n\t@JvmStatic\r\n\tfun init() {\r\n        try {\r\n            load()\r\n            loadedPlugins!!.clear()\r\n            loadedPlugins = null\r\n            SystemLogger.log(\"Initialized $amountLoaded plugins...\")\r\n        } catch (t: Throwable) {\r\n            SystemLogger.log(\"Error initializing Plugins -> \" + t.localizedMessage + \" for file -> \" + lastLoaded)\r\n            t.printStackTrace()\r\n        }\r\n    }\r\n\r\n    fun load() {\r\n        val result = ClassGraph().enableClassInfo().enableAnnotationInfo().scan()\r\n        result.getClassesWithAnnotation(\"core.plugin.InitializablePlugin\").forEach(Consumer { p: ClassInfo ->\r\n            try {\r\n                definePlugin(p.loadClass().newInstance() as Plugin<JvmType.Object>)\r\n            } catch (e: InstantiationException) {\r\n                e.printStackTrace()\r\n            } catch (e: IllegalAccessException) {\r\n                e.printStackTrace()\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Defines a list of plugins.\r\n     * @param plugins the plugins.\r\n     */\r\n    @JvmStatic\r\n    fun definePlugins(vararg plugins: Plugin<*>) {\r\n        val pluginsLength = plugins.size\r\n        for (i in 0 until pluginsLength) {\r\n            val p = plugins[i]\r\n            definePlugin(p)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the plugin.\r\n     * @param plugin The plugin.\r\n     */\r\n\t@JvmStatic\r\n\tfun definePlugin(plugin: Plugin<*>) {\r\n        try {\r\n            var manifest = plugin.javaClass.getAnnotation(PluginManifest::class.java)\r\n            if (manifest == null) {\r\n                manifest = plugin.javaClass.superclass.getAnnotation(PluginManifest::class.java)\r\n            } else {\r\n                if (disabledPlugins[manifest.name] != null) {\r\n                    return\r\n                }\r\n            }\r\n            if (manifest == null || manifest.type == PluginType.ACTION) {\r\n                plugin.newInstance(null)\r\n            } else {\r\n                when (manifest.type) {\r\n                    PluginType.DIALOGUE -> (plugin as DialoguePlugin).init()\r\n                    PluginType.ACTIVITY -> ActivityManager.register(plugin as ActivityPlugin)\r\n                    PluginType.LOGIN -> LoginConfiguration.getLoginPlugins().add(plugin as Plugin<Any?>)\r\n                    PluginType.QUEST -> {\r\n                        plugin.newInstance(null)\r\n                        QuestRepository.register(plugin as Quest)\r\n                    }\r\n                    else -> println(\"Manifest: \" + manifest.type)\r\n                }\r\n            }\r\n            amountLoaded++\r\n        } catch (e: Throwable) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/plugin/PluginManager.kt	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/plugin/PluginManager.kt	(date 1597089529936)
@@ -111,4 +111,4 @@
             e.printStackTrace()
         }
     }
-}
\ No newline at end of file
+}
Index: Server/src/main/java/Server/core/game/node/entity/player/link/ActivityData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Represents a managing class of activity related information.\r\n * @author 'Vexia\r\n */\r\npublic final class ActivityData implements SavingModule {\r\n\r\n\t/**\r\n\t * Represents the pest points gained from pest control.\r\n\t */\r\n\tprivate int pestPoints;\r\n\r\n\t/**\r\n\t * The amount of warrior's guild tokens.\r\n\t */\r\n\tprivate int warriorGuildTokens;\r\n\r\n\t/**\r\n\t * The bounty hunter rating.\r\n\t */\r\n\tprivate int bountyHunterRate;\r\n\r\n\t/**\r\n\t * The bounty rogue rating.\r\n\t */\r\n\tprivate int bountyRogueRate;\r\n\r\n\t/**\r\n\t * The barrow brothers currently killed.\r\n\t */\r\n\tprivate boolean[] barrowBrothers = new boolean[6];\r\n\r\n\t/**\r\n\t * The barrow kill count.\r\n\t */\r\n\tprivate int barrowKills;\r\n\r\n\t/**\r\n\t * The barrow tunnel crypt index.\r\n\t */\r\n\tprivate int barrowTunnelIndex;\r\n\r\n\t/**\r\n\t * The kolodion stage.\r\n\t */\r\n\tprivate int kolodionStage;\r\n\r\n\t/**\r\n\t * The god casts.\r\n\t */\r\n\tprivate int[] godCasts = new int[3];\r\n\r\n\t/**\r\n\t * The kolodion boss.\r\n\t */\r\n\tprivate int kolodionBoss;\r\n\r\n\t/**\r\n\t * If received the elnock supplies.\r\n\t */\r\n\tprivate boolean elnockSupplies;\r\n\r\n\t/**\r\n\t * The time stamp of the last battle with Bork.\r\n\t */\r\n\tprivate long lastBorkBattle;\r\n\t\r\n\t/**\r\n\t * The amount of temp bork kills.\r\n\t */\r\n\tprivate byte borkKills;\r\n\r\n\t/**\r\n\t * If the player has lost his DMC.\r\n\t */\r\n\tprivate boolean lostCannon;\r\n\r\n\t/**\r\n\t * If we started the mta.\r\n\t */\r\n\tprivate boolean startedMta;\r\n\r\n\t/**\r\n\t * The pizazz points.\r\n\t */\r\n\tprivate int[] pizazzPoints = new int[4];\r\n\r\n\t/**\r\n\t * If the player has unlocked bones to peaches.\r\n\t */\r\n\tprivate boolean bonesToPeaches;\r\n\r\n\t/**\r\n\t * The amount of solved telekinetic mazes.\r\n\t */\r\n\tprivate int solvedMazes;\r\n\r\n\t/**\r\n\t * The fog rating.\r\n\t */\r\n\tprivate int fogRating;\r\n\r\n\t/**\r\n\t * The death status of a Hardcore Iron Man\r\n\t */\r\n\tprivate boolean hardcoreDeath;\r\n\r\n\t/**\r\n\t * Pyramid plunder top (is it grabbed?)\r\n\t */\r\n\tboolean topGrabbed;\r\n\r\n\t/**\r\n\t * Constructs a new {@code ActivityInfo} {@code Object}.\r\n\t */\r\n\tpublic ActivityData() {\r\n\t\t/*\r\n\t\t * empty.\r\n\t\t */\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tif (pestPoints > 0) {\r\n\t\t\tSavedData.save(buffer, pestPoints, 1);\r\n\t\t}\r\n\t\tif (warriorGuildTokens > 0) {\r\n\t\t\tSavedData.save(buffer, warriorGuildTokens, 2);\r\n\t\t}\r\n\t\tif (bountyHunterRate > 0) {\r\n\t\t\tSavedData.save(buffer, bountyHunterRate, 3);\r\n\t\t}\r\n\t\tif (bountyRogueRate > 0) {\r\n\t\t\tSavedData.save(buffer, bountyRogueRate, 4);\r\n\t\t}\r\n\t\tif (barrowKills > 0) {\r\n\t\t\tSavedData.save(buffer, (short) barrowKills, 5);\r\n\t\t}\r\n\t\tSavedData.save(buffer, barrowBrothers, 6);\r\n\t\tif (barrowTunnelIndex > 0) {\r\n\t\t\tSavedData.save(buffer, (byte) barrowTunnelIndex, 7);\r\n\t\t}\r\n\t\tSavedData.save(buffer, kolodionStage, 9);\r\n\t\tbuffer.put((byte) 10);\r\n\t\tfor (int i = 0; i < godCasts.length; i++) {\r\n\t\t\tbuffer.putInt(godCasts[i]);\r\n\t\t}\r\n\t\tSavedData.save(buffer, kolodionBoss, 11);\r\n\t\tSavedData.save(buffer, elnockSupplies, 12);\r\n\t\tSavedData.save(buffer, getLastBorkBattle(), 13);\r\n\t\tSavedData.save(buffer, startedMta, 14);\r\n\t\tSavedData.save(buffer, lostCannon, 15);\r\n\t\tbuffer.put((byte) 16);\r\n\t\tbuffer.put((byte) pizazzPoints.length);\r\n\t\tfor (int i = 0; i < pizazzPoints.length; i++) {\r\n\t\t\tbuffer.putInt(pizazzPoints[i]);\r\n\t\t}\r\n\t\tSavedData.save(buffer, bonesToPeaches, 17);\r\n\t\tSavedData.save(buffer, solvedMazes, 18);\r\n\t\tSavedData.save(buffer, fogRating, 19);\r\n\t\tSavedData.save(buffer, borkKills, 20);\r\n\t\tSavedData.save(buffer, hardcoreDeath, 21);\r\n\t\tSavedData.save(buffer, topGrabbed, 22);\r\n\t\tbuffer.put((byte) 0);\r\n\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get()) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tpestPoints = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\twarriorGuildTokens = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tbountyHunterRate = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tbountyRogueRate = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tbarrowKills = buffer.getShort() & 0xFFFF;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tfor (int i = 0; i < barrowBrothers.length; i++) {\r\n\t\t\t\t\tbarrowBrothers[i] = SavedData.getBoolean(buffer.get());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tbarrowTunnelIndex = buffer.get() & 0xFF;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tbuffer.get(); // Barrow config index.\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tkolodionStage = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10:\r\n\t\t\t\tfor (int i = 0; i < godCasts.length; i++) {\r\n\t\t\t\t\tgodCasts[i] = buffer.getInt();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 11:\r\n\t\t\t\tkolodionBoss = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 12:\r\n\t\t\t\telnockSupplies = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13:\r\n\t\t\t\tsetLastBorkBattle(buffer.getLong());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 14:\r\n\t\t\t\tstartedMta = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 15:\r\n\t\t\t\tlostCannon = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16:\r\n\t\t\t\tint size = buffer.get();\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\tpizazzPoints[i] = buffer.getInt();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17:\r\n\t\t\t\tbonesToPeaches = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 18:\r\n\t\t\t\tsolvedMazes = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 19:\r\n\t\t\t\tfogRating = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 20:\r\n\t\t\t\tborkKills = buffer.get();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 21:\r\n\t\t\t\thardcoreDeath = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 22:\r\n\t\t\t\ttopGrabbed = SavedData.getBoolean(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the elnockSupplies.\r\n\t * @return The elnockSupplies.\r\n\t */\r\n\tpublic boolean isElnockSupplies() {\r\n\t\treturn elnockSupplies;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the elnockSupplies.\r\n\t * @param elnockSupplies The elnockSupplies to set.\r\n\t */\r\n\tpublic void setElnockSupplies(boolean elnockSupplies) {\r\n\t\tthis.elnockSupplies = elnockSupplies;\r\n\t}\r\n\r\n\t/**\r\n\t * Increases the pest points.\r\n\t * @param pestPoints the pest points to increase with.\r\n\t */\r\n\tpublic void increasePestPoints(int pestPoints) {\r\n\t\tif (pestPoints + this.pestPoints > 500) {\r\n\t\t\tthis.pestPoints = 500;\r\n\t\t} else {\r\n\t\t\tthis.pestPoints += pestPoints;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Decreases the pest points.\r\n\t * @param pestPoints the pest points to increase with.\r\n\t */\r\n\tpublic void decreasePestPoints(int pestPoints) {\r\n\t\tthis.pestPoints -= pestPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the pest points.\r\n\t * @return the pest points.\r\n\t */\r\n\tpublic int getPestPoints() {\r\n\t\treturn pestPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the pest points.\r\n\t * @param pestPoints the pest points.\r\n\t */\r\n\tpublic void setPestPoints(int pestPoints) {\r\n\t\tthis.pestPoints = pestPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the warriorGuildTokens.\r\n\t * @return The warriorGuildTokens.\r\n\t */\r\n\tpublic int getWarriorGuildTokens() {\r\n\t\treturn warriorGuildTokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the warriorGuildTokens.\r\n\t * @param warriorGuildTokens The warriorGuildTokens to set.\r\n\t */\r\n\tpublic void setWarriorGuildTokens(int warriorGuildTokens) {\r\n\t\tthis.warriorGuildTokens = warriorGuildTokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the warrior guild tokens.\r\n\t * @param amount The amount to increase with.\r\n\t */\r\n\tpublic void updateWarriorTokens(int amount) {\r\n\t\tthis.warriorGuildTokens += amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bountyHunterRate.\r\n\t * @return The bountyHunterRate.\r\n\t */\r\n\tpublic int getBountyHunterRate() {\r\n\t\treturn bountyHunterRate;\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the bountyHunterRate.\r\n\t * @param rate The rate to set.\r\n\t */\r\n\tpublic void updateBountyHunterRate(int rate) {\r\n\t\tthis.bountyHunterRate += rate;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bountyRogueRate.\r\n\t * @return The bountyRogueRate.\r\n\t */\r\n\tpublic int getBountyRogueRate() {\r\n\t\treturn bountyRogueRate;\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the bountyRogueRate.\r\n\t * @param rate The rate to set.\r\n\t */\r\n\tpublic void updateBountyRogueRate(int rate) {\r\n\t\tthis.bountyRogueRate += rate;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the barrowBrothers.\r\n\t * @return The barrowBrothers.\r\n\t */\r\n\tpublic boolean[] getBarrowBrothers() {\r\n\t\treturn barrowBrothers;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the barrowBrothers.\r\n\t * @param barrowBrothers The barrowBrothers to set.\r\n\t */\r\n\tpublic void setBarrowBrothers(boolean[] barrowBrothers) {\r\n\t\tthis.barrowBrothers = barrowBrothers;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the barrowKills.\r\n\t * @return The barrowKills.\r\n\t */\r\n\tpublic int getBarrowKills() {\r\n\t\treturn barrowKills;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the barrowKills.\r\n\t * @param barrowKills The barrowKills to set.\r\n\t */\r\n\tpublic void setBarrowKills(int barrowKills) {\r\n\t\tif (barrowKills > 10000) {\r\n\t\t\tbarrowKills = 10000;\r\n\t\t}\r\n\t\tthis.barrowKills = barrowKills;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the barrowTunnelIndex.\r\n\t * @return The barrowTunnelIndex.\r\n\t */\r\n\tpublic int getBarrowTunnelIndex() {\r\n\t\treturn barrowTunnelIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the barrowTunnelIndex.\r\n\t * @param barrowTunnelIndex The barrowTunnelIndex to set.\r\n\t */\r\n\tpublic void setBarrowTunnelIndex(int barrowTunnelIndex) {\r\n\t\tthis.barrowTunnelIndex = barrowTunnelIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the kolodion stage.\r\n\t * @param stage the stage.\r\n\t */\r\n\tpublic void setKolodionStage(int stage) {\r\n\t\tthis.kolodionStage = stage;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if they have started kolodion.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasStartedKolodion() {\r\n\t\treturn kolodionStage == 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the stage is killed.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasKilledKolodion() {\r\n\t\treturn kolodionStage >= 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if they have recieved the reward.\r\n\t * @return {@code True if so.}\r\n\t */\r\n\tpublic boolean hasRecievedKolodionReward() {\r\n\t\treturn kolodionStage == 3;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the godCasts.\r\n\t * @return The godCasts.\r\n\t */\r\n\tpublic int[] getGodCasts() {\r\n\t\treturn godCasts;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the kolodionBoss.\r\n\t * @return The kolodionBoss.\r\n\t */\r\n\tpublic int getKolodionBoss() {\r\n\t\treturn kolodionBoss;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the kolodionBoss.\r\n\t * @param kolodionBoss The kolodionBoss to set.\r\n\t */\r\n\tpublic void setKolodionBoss(int kolodionBoss) {\r\n\t\tthis.kolodionBoss = kolodionBoss;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lastBorkBattle.\r\n\t * @return the lastBorkBattle\r\n\t */\r\n\tpublic long getLastBorkBattle() {\r\n\t\treturn lastBorkBattle;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the balastBorkBattle.\r\n\t * @param lastBorkBattle the lastBorkBattle to set.\r\n\t */\r\n\tpublic void setLastBorkBattle(long lastBorkBattle) {\r\n\t\tthis.lastBorkBattle = lastBorkBattle;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has killed bork.\r\n\t * @return {@code True if so.}\r\n\t */\r\n\tpublic boolean hasKilledBork() {\r\n\t\treturn lastBorkBattle > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lostCannon.\r\n\t * @return the lostCannon\r\n\t */\r\n\tpublic boolean isLostCannon() {\r\n\t\treturn lostCannon;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the balostCannon.\r\n\t * @param lostCannon the lostCannon to set.\r\n\t */\r\n\tpublic void setLostCannon(boolean lostCannon) {\r\n\t\tthis.lostCannon = lostCannon;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the startedMta.\r\n\t * @return the startedMta\r\n\t */\r\n\tpublic boolean isStartedMta() {\r\n\t\treturn startedMta;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the bastartedMta.\r\n\t * @param startedMta the startedMta to set.\r\n\t */\r\n\tpublic void setStartedMta(boolean startedMta) {\r\n\t\tthis.startedMta = startedMta;\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the pizazz points.\r\n\t * @param index the index.\r\n\t */\r\n\tpublic void incrementPizazz(int index) {\r\n\t\tpizazzPoints[index] += 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the pizzaz points.\r\n\t * @param index the index.\r\n\t * @param amount the amount.\r\n\t */\r\n\tpublic void incrementPizazz(int index, int amount) {\r\n\t\tpizazzPoints[index] += amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Decrements the pizzaz points.\r\n\t * @param index the index.\r\n\t * @param amount the amount.\r\n\t */\r\n\tpublic void decrementPizazz(int index, int amount) {\r\n\t\tpizazzPoints[index] -= amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Increments the pizazz points.\r\n\t * @param index the index.\r\n\t */\r\n\tpublic void decrementPizazz(int index) {\r\n\t\tpizazzPoints[index] -= 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the pizzaz points in the index. tele=0, alchemist=1, 2=enchant,\r\n\t * 3=grave\r\n\t * @param index the index.\r\n\t * @return the value.\r\n\t */\r\n\tpublic int getPizazzPoints(int index) {\r\n\t\treturn pizazzPoints[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the pizazzPoints.\r\n\t * @return the pizazzPoints\r\n\t */\r\n\tpublic int[] getPizazzPoints() {\r\n\t\treturn pizazzPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the bapizazzPoints.\r\n\t * @param pizazzPoints the pizazzPoints to set.\r\n\t */\r\n\tpublic void setPizazzPoints(int[] pizazzPoints) {\r\n\t\tthis.pizazzPoints = pizazzPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bonesToPeaches.\r\n\t * @return the bonesToPeaches\r\n\t */\r\n\tpublic boolean isBonesToPeaches() {\r\n\t\treturn bonesToPeaches;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the babonesToPeaches.\r\n\t * @param bonesToPeaches the bonesToPeaches to set.\r\n\t */\r\n\tpublic void setBonesToPeaches(boolean bonesToPeaches) {\r\n\t\tthis.bonesToPeaches = bonesToPeaches;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the solvedMazes.\r\n\t * @return the solvedMazes\r\n\t */\r\n\tpublic int getSolvedMazes() {\r\n\t\treturn solvedMazes;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the solvedMazes.\r\n\t * @param solvedMazes the solvedMazes to set.\r\n\t */\r\n\tpublic void setSolvedMazes(int solvedMazes) {\r\n\t\tthis.solvedMazes = solvedMazes;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the fogRating.\r\n\t * @return the fogRating\r\n\t */\r\n\tpublic int getFogRating() {\r\n\t\treturn fogRating;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the fogRating.\r\n\t * @param fogRating the fogRating to set.\r\n\t */\r\n\tpublic void setFogRating(int fogRating) {\r\n\t\tthis.fogRating = fogRating;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the borkKills.\r\n\t * @return the borkKills.\r\n\t */\r\n\tpublic byte getBorkKills() {\r\n\t\treturn borkKills;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the borkKills.\r\n\t * @param borkKills the borkKills to set\r\n\t */\r\n\tpublic void setBorkKills(byte borkKills) {\r\n\t\tthis.borkKills = borkKills;\r\n\t}\r\n\r\n\t/**\r\n\t * gets the current value of an Hardcore Iron Man's death status\r\n\t * @return the value of a Hardcore Iron Man's death status\r\n\t */\r\n\tpublic boolean getHardcoreDeath() {\r\n\t\treturn hardcoreDeath;\r\n\t}\r\n\r\n\tpublic void setHardcoreDeath(boolean hardcoreDeath) {\r\n\t\tthis.hardcoreDeath = hardcoreDeath;\r\n\t}\r\n\tpublic void setTopGrabbed(boolean topGrabbed){\r\n\t\tthis.topGrabbed = topGrabbed;\r\n\t}\r\n\tpublic boolean isTopGrabbed(){return topGrabbed;}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/ActivityData.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/ActivityData.java	(date 1597089529755)
@@ -1,6 +1,8 @@
 package core.game.node.entity.player.link;
 
 import core.game.node.entity.player.info.login.SavingModule;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 
@@ -170,6 +172,39 @@
 
 	}
 
+	public void parse(JSONObject data){
+		pestPoints = Integer.parseInt( data.get("pestPoints").toString());
+		warriorGuildTokens = Integer.parseInt( data.get("warriorGuildTokens").toString());
+		bountyHunterRate = Integer.parseInt( data.get("bountyHunterRate").toString());
+		bountyRogueRate = Integer.parseInt( data.get("bountyRogueRate").toString());
+		barrowKills = Integer.parseInt( data.get("barrowKills").toString());
+		JSONArray bb = (JSONArray) data.get("barrowBrothers");
+		for(int i = 0; i < bb.size(); i++){
+			barrowBrothers[i] = (boolean) bb.get(i);
+		}
+		barrowTunnelIndex = Integer.parseInt( data.get("barrowTunnelIndex").toString());
+		kolodionStage = Integer.parseInt( data.get("kolodionStage").toString());
+		JSONArray gc = (JSONArray) data.get("godCasts");
+		for(int i = 0; i < gc.size(); i++){
+			godCasts[i] = Integer.parseInt(gc.get(i).toString());
+		}
+		kolodionBoss = Integer.parseInt( data.get("kolodionBoss").toString());
+		elnockSupplies = (boolean) data.get("elnockSupplies");
+		lastBorkBattle =  Long.parseLong(data.get("lastBorkBattle").toString());
+		startedMta = (boolean) data.get("startedMta");
+		lostCannon = (boolean) data.get("lostCannon");
+		JSONArray pp = (JSONArray) data.get("pizazzPoints");
+		for(int i = 0 ; i < pp.size(); i++){
+			pizazzPoints[i] = Integer.parseInt(pp.get(i).toString());
+		}
+		bonesToPeaches = (boolean) data.get("bonesToPeaches");
+		solvedMazes = Integer.parseInt( data.get("solvedMazes").toString());
+		fogRating = Integer.parseInt( data.get("fogRating").toString());
+		borkKills = Byte.parseByte(data.get("borkKills").toString());
+		hardcoreDeath = (boolean) data.get("hardcoreDeath");
+		topGrabbed = (boolean) data.get("topGrabbed");
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
@@ -662,4 +697,8 @@
 		this.topGrabbed = topGrabbed;
 	}
 	public boolean isTopGrabbed(){return topGrabbed;}
+
+	public int getKolodionStage() {
+		return kolodionStage;
+	}
 }
\ No newline at end of file
Index: Server/src/main/java/Server/core/game/node/entity/player/link/BankPinManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.cache.misc.buffer.ByteBufferUtils;\r\nimport core.game.component.CloseEvent;\r\nimport core.game.component.Component;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.world.GameWorld;\r\nimport core.net.packet.PacketRepository;\r\nimport core.net.packet.context.ChildPositionContext;\r\nimport core.net.packet.context.StringContext;\r\nimport core.net.packet.out.RepositionChild;\r\nimport core.net.packet.out.StringPacket;\r\nimport core.tools.RandomFunction;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n/**\r\n * Manages the players bank pin.\r\n * @author Vexia\r\n * @author Emperor\r\n */\r\npublic class BankPinManager implements SavingModule {\r\n\r\n\t/**\r\n\t * THe setting messages to display on default.\r\n\t */\r\n\tprivate static final String[] SETTINGS_MESSAGES = { \"Customers are reminded that\", \"they should NEVER tell\", \"anyone their Bank PINs or\", \"passwords, nor should they\", \"ever enter their PINs on any\", \"website form.\", null, \"Have you read the PIN guide\", \"on the website?\", null, null, null, null };\r\n\r\n\t/**\r\n\t * The pin child constants.\r\n\t */\r\n\tpublic static final int SET_PIN = 60, CHANGE_RECOVERY = 61, CHANGE_PIN = 62, DELETE_PIN = 63, CANCEL_PENDING = 65;\r\n\r\n\t/**\r\n\t * The player.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The digits.\r\n\t */\r\n\tprivate final List<Integer> digits = new ArrayList<>();\r\n\r\n\t/**\r\n\t * The bank pin.\r\n\t */\r\n\tprivate String pin;\r\n\r\n\t/**\r\n\t * If the manager has been unlocked.\r\n\t */\r\n\tprivate boolean unlocked;\r\n\r\n\t/**\r\n\t * If we're using the short or long recovery.\r\n\t */\r\n\tprivate boolean longRecovery;\r\n\r\n\t/**\r\n\t * The pin status.\r\n\t */\r\n\tprivate PinStatus status = PinStatus.NO_PIN;\r\n\r\n\t/**\r\n\t * The temporary pin.\r\n\t */\r\n\tprivate String tempPin;\r\n\r\n\t/**\r\n\t * The pending delay.\r\n\t */\r\n\tprivate long pendingDelay = -1;\r\n\r\n\t/**\r\n\t * The open id after confirmation interface.\r\n\t */\r\n\tprivate int openId;\r\n\r\n\t/**\r\n\t * The amount of attempts on opening the bank pin.\r\n\t */\r\n\tprivate int tries;\r\n\r\n\t/**\r\n\t * The pin changing state.\r\n\t */\r\n\tprivate int changeState;\r\n\r\n\t/**\r\n\t * If we're deleting the pin.\r\n\t */\r\n\tprivate boolean deleting;\r\n\r\n\t/**\r\n\t * The delay between\r\n\t */\r\n\tprivate long tryDelay;\r\n\r\n\t/**\r\n\t * Constructs a new {@Code BankPinManager} {@Code Object}\r\n\t */\r\n\tpublic BankPinManager(final Player player) {\r\n\t\tthis.player = player;\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tdigits.add(i);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tif (hasPin()) {\r\n\t\t\tByteBufferUtils.putString(pin, buffer.put((byte) 1));\r\n\t\t}\r\n\t\tbuffer.put((byte) 2).put((byte) (longRecovery ? 1 : 0));\r\n\t\tif (status.ordinal() != 0) {\r\n\t\t\tbuffer.put((byte) 3).put(((byte) status.ordinal()));\r\n\t\t}\r\n\t\tif (pendingDelay != -1 && pendingDelay > System.currentTimeMillis()) {\r\n\t\t\tbuffer.put((byte) 4).putLong(pendingDelay);\r\n\t\t}\r\n\t\tif (tryDelay > System.currentTimeMillis()) {\r\n\t\t\tbuffer.put((byte) 5).putLong(tryDelay);\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get()) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tpin = ByteBufferUtils.getString(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tlongRecovery = buffer.get() == 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tstatus = PinStatus.values()[buffer.get()];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tpendingDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\ttryDelay = buffer.getLong();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the settings.\r\n\t */\r\n\tpublic void openSettings() {\r\n\t\tcheckPendingActivity();\r\n\t\topenSettings(status.getMessages(this));\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the bank pin settings.\r\n\t */\r\n\tpublic void openSettings(String... messages) {\r\n\t\tplayer.getInterfaceManager().close();\r\n\t\ttempPin = null;\r\n\t\tsendMessages(messages);\r\n\t\tplayer.getAudioManager().send(1040);\r\n\t\tplayer.getInterfaceManager().open(new Component(14));\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the messages.\r\n\t * @param messages the messages.\r\n\t */\r\n\tprivate void sendMessages(String... messages) {\r\n\t\tfor (int i = 0; i < messages.length; i++) {\r\n\t\t\tString message = messages[i];\r\n\t\t\tif (message == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tPacketRepository.send(StringPacket.class, new StringContext(player, message, 14, 42 + i));\r\n\t\t}\r\n\t\tstatus.draw(this, player);\r\n\t\tPinStatus.drawString(player, \"Messages\", 41);\r\n\t\tPinStatus.drawString(player, getRecoveryDelay() + \" days\", 71);\r\n\t\tPinStatus.drawString(player, \"Use the buttons below to change your PIN settings\", 86);\r\n\t}\r\n\r\n\t/**\r\n\t * Used to open a component type that requires pin unlocking.\r\n\t * @param buttonId the buttonId.\r\n\t */\r\n\tpublic void openType(int buttonId) {\r\n\t\tcheckPendingActivity();\r\n\t\tif (buttonId == 2) {\r\n\t\t\topenSettings();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\topenId = buttonId;\r\n\t\tif (hasPin() && !unlocked) {\r\n\t\t\tif (hasPendingPin()) {\r\n\t\t\t\topenSettings();\r\n\t\t\t\ttoggleConfirmInterface(true);\r\n\t\t\t\tPinStatus.drawString(player, \"A PIN will be set on your bank account in another \" + getPendingDays() + \" day\" + (getPendingDays() > 1 ? \"s\" : \"\") + \".\", 73);\r\n\t\t\t\tPinStatus.drawString(player, \"Yes, I asked for this. I want this PIN.\", 89);\r\n\t\t\t\tPinStatus.drawString(player, \"No, I didn't ask for this. Cancel it.\", 91);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\topenPin();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\topenForId(buttonId);\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the interface for the id.\r\n\t * @param buttonId the button id.\r\n\t */\r\n\tprivate void openForId(int buttonId) {\r\n\t\tif (buttonId == 1) {\r\n\t\t\t{\r\n\t\t\t\tplayer.getBank().open();\r\n\t\t\t}\r\n\t\t} else if (buttonId == 3) {\r\n\t\t\tplayer.getGrandExchange().openCollectionBox();\r\n\t\t} else if (buttonId == 4) {\r\n\t\t\tplayer.getGrandExchange().open();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the confirmation interface.\r\n\t * @param button the button.\r\n\t */\r\n\tpublic void handleConfirmInterface(int button) {\r\n\t\tboolean confirm = button != 91;\r\n\t\tswitch (status) {\r\n\t\tcase NO_PIN:\r\n\t\t\tif (!confirm) {\r\n\t\t\t\ttoggleConfirmInterface(false);\r\n\t\t\t\tplayer.getInterfaceManager().close();\r\n\t\t\t\topenSettings(\"No changes made.\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\topenPin();\r\n\t\t\tbreak;\r\n\t\tcase PENDING:\r\n\t\t\tif (confirm) {\r\n\t\t\t\tunlock();\r\n\t\t\t} else {\r\n\t\t\t\tcancelPin(\"The PIN has been cancelled\", \"and will NOT be set.\", \"\", \"You still do not have a Bank\", \"PIN.\");\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase ACTIVE:\r\n\t\t\tif (confirm) {\r\n\t\t\t\tif (unlocked) {\r\n\t\t\t\t\tcancelPin(\"Your Bank PIN has now been\", \"deleted.\", \"\", \"This means that there is no\", \"PIN protection on your bank\", \"account.\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeleting = true;\r\n\t\t\t\t\topenPin();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\topenSettings(\"No changes made.\");\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks the pin manager.\r\n\t */\r\n\tprivate void unlock() {\r\n\t\tunlocked = true;\r\n\t\topenForId(openId);\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the set bank PIN confirmation screen.\r\n\t * @param show If we should show the confirm screen.\r\n\t */\r\n\tpublic void toggleConfirmInterface(boolean show) {\r\n\t\tfor (int i = 60; i < 66; i++) {\r\n\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(14, i, show);\r\n\t\t}\r\n\t\tplayer.getAudioManager().send(1040);\r\n\t\tplayer.getPacketDispatch().sendInterfaceConfig(14, 89, !show);\r\n\t\tplayer.getPacketDispatch().sendInterfaceConfig(14, 91, !show);\r\n\t\tplayer.getPacketDispatch().sendInterfaceConfig(14, 87, !show);\r\n\t\tif (show && status == PinStatus.NO_PIN) {\r\n\t\t\tPinStatus.drawString(player, \"Do you really wish to set a PIN on your bank account?\", 73);\r\n\t\t\tPinStatus.drawString(player, \"Yes, I really want a Bank PIN. I will never forget it!\", 89);\r\n\t\t\tPinStatus.drawString(player, \"No, I might forget it!\", 91);\r\n\t\t} else if (show && status == PinStatus.ACTIVE) {\r\n\t\t\tPinStatus.drawString(player, \"Do you really wish to delete your Bank PIN?\", 73);\r\n\t\t\tPinStatus.drawString(player, \"Yes, I don't need a PIN anymore.\", 89);\r\n\t\t\tPinStatus.drawString(player, \"No thanks, I'd rather keep the extra security.\", 91);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the temporary pin.\r\n\t * @param button the button.\r\n\t */\r\n\tpublic void updateTempPin(int button) {\r\n\t\ttempPin += digits.get(button);\r\n\t\thandlePinStage(getStage());\r\n\t}\r\n\r\n\t/**\r\n\t * Checks the pending activity.\r\n\t */\r\n\tprivate void checkPendingActivity() {\r\n\t\tif (status == PinStatus.PENDING && pendingDelay < System.currentTimeMillis()) {\r\n\t\t\tpendingDelay = -1;\r\n\t\t\tstatus = PinStatus.ACTIVE;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the set pin interface.\r\n\t */\r\n\tpublic void openPin() {\r\n\t\tif (isPinBlocked()) {\r\n\t\t\tsendTryDialogue();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttempPin = \"\";\r\n\t\tplayer.getPacketDispatch().sendString(\"Bank of \" + GameWorld.getName(), 13, 31);\r\n\t\tif (!hasPin()) {\r\n\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(13, 29, true);\r\n\t\t\tplayer.getPacketDispatch().sendString(\"Please choose a new FOUR DIGIT PIN using the buttons below.\", 13, 28);\r\n\t\t} else {\r\n\t\t\tplayer.getPacketDispatch().sendString(\"Please enter your PIN using the buttons below.\", 13, 28);\r\n\t\t}\r\n\t\tplayer.getInterfaceManager().open(new Component(13).setCloseEvent(new CloseEvent() {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean close(Player player, Component c) {\r\n\t\t\t\tif (changeState != 0) {\r\n\t\t\t\t\tchangeState = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (deleting) {\r\n\t\t\t\t\tdeleting = false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}));\r\n\t\thandlePinStage(getStage());\r\n\t}\r\n\r\n\t/**\r\n\t * Handles a pin stage.\r\n\t * @param stage the stage.\r\n\t */\r\n\tpublic void handlePinStage(int stage) {\r\n\t\tif (stage == 4) {\r\n\t\t\tif (!hasPin() || changeState == 2) {\r\n\t\t\t\tplayer.getAudioManager().send(1040);\r\n\t\t\t\tplayer.getPacketDispatch().sendString(\"Now please enter that number again!\", 13, 28);\r\n\t\t\t\tshuffleDigits();\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tif (!tempPin.equals(pin)) {\r\n\t\t\t\t\tplayer.getAudioManager().send(1042);\r\n\t\t\t\t\tplayer.getInterfaceManager().close();\r\n\t\t\t\t\tplayer.sendMessage(\"The PIN you entered is incorrect.\");\r\n\t\t\t\t\tif (setTries(getTries() + 1) >= 2) {\r\n\t\t\t\t\t\tsetTryLock();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (changeState == 1) {\r\n\t\t\t\t\ttempPin = \"\";\r\n\t\t\t\t\tplayer.getPacketDispatch().sendString(\"Please choose a new FOUR DIGIT PIN using the buttons below.\", 13, 28);\r\n\t\t\t\t\tchangeState = 2;\r\n\t\t\t\t\tshuffleDigits();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (deleting) {\r\n\t\t\t\t\tcancelPin(\"Your Bank PIN has now been\", \"deleted.\", \"\", \"This means that there is no\", \"PIN protection on your bank\", \"account.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tunlock();\r\n\t\t\t\tplayer.sendMessage(\"You have correctly entered your PIN.\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t} else if (stage == 8) {\r\n\t\t\tboolean success = checkTempPin();\r\n\t\t\tif (isEasyGuess()) {\r\n\t\t\t\topenSettings(\"That number wouldn't be very\", \"hard to guess. Please try\", \"something different!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (changeState == 2 && success) {\r\n\t\t\t\tif (pin.equals(tempPin.substring(0, 4))) {\r\n\t\t\t\t\tplayer.getPacketDispatch().sendMessage(\"Your current PIN matches your new one.\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpin = new String(Arrays.copyOf(tempPin.toCharArray(), 4));\r\n\t\t\t\t\tplayer.getPacketDispatch().sendMessage(\"You have changed your PIN.\");\r\n\t\t\t\t}\r\n\t\t\t\topenSettings();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (success) {\r\n\t\t\t\tsetPin();\r\n\t\t\t}\r\n\t\t\topenSettings(success ? new String[] { \"You have requested that a\", \"PIN be set on your bank\", \"account. This will take effect\", \"in another \" + getRecoveryDelay() + \" days.\", \"\", \"If you wish to cancel this PIN,\", \"please use the button\", \"on the left.\" } : new String[] { \"Those numbers did not\", \"match.\", \"\", \"Your PIN has not been set;\", \"please try again if you wish\", \"to set a new PIN.\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tshuffleDigits();\r\n\t\tif (stage != 0) {\r\n\t\t\tplayer.getAudioManager().send(1041);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the try locks.\r\n\t */\r\n\tprivate void setTryLock() {\r\n\t\tsetTryDelay(System.currentTimeMillis() + getPinSeconds() * 1000);\r\n\t\tsendTryDialogue();\r\n\t}\r\n\r\n\t/**\r\n\t * Sends the try dialogue.\r\n\t */\r\n\tprivate void sendTryDialogue() {\r\n\t\tlong ticks = (tryDelay - System.currentTimeMillis()) / 1000;\r\n\t\tint original = getPinSeconds();\r\n\t\tString suffix = (original > 15 ? \"minutes\" : \"seconds\");\r\n\t\tplayer.getInterfaceManager().close();\r\n\t\tif (suffix.equals(\"minutes\") || ticks > 15) {\r\n\t\t\tticks /= 100;\r\n\t\t\tsuffix = \"minutes\";\r\n\t\t}\r\n\t\tif (suffix.equals(\"minutes\") && ticks <= 1) {\r\n\t\t\tplayer.getDialogueInterpreter().sendDialogue(\"You will be able to access your bank in less than 1 minute.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.getDialogueInterpreter().sendDialogue(\"You will be able to access your bank pin in \" + ticks + \" \" + suffix + \".\");\r\n\t}\r\n\r\n\t/**\r\n\t * Shuffles the digits.\r\n\t */\r\n\tprivate void shuffleDigits() {\r\n\t\tCollections.shuffle(digits);\r\n\t\tint bitShift = 0, bitValue = 0;\r\n\t\tfor (int i = 0; i < 8; i++) {\r\n\t\t\tbitValue |= digits.get(i) << bitShift;\r\n\t\t\tbitShift += 4;\r\n\t\t}\r\n\t\tint stage = getStage();\r\n\t\tif (stage >= 4) {\r\n\t\t\tstage = stage - 4;\r\n\t\t}\r\n\t\tplayer.getConfigManager().set(562, bitValue);\r\n\t\tplayer.getConfigManager().set(563, digits.get(8) | digits.get(9) << 4 | stage << 26);\r\n\t\tfor (int i = 0; i < 9; i++) {\r\n\t\t\tint child = (i > 2 ? i + 1 : i) + 11;\r\n\t\t\tint positionX = 37 + ((i % 3) * 95) + RandomFunction.random(2, 45);\r\n\t\t\tint positionY = 157 + ((i / 3) * 70) - RandomFunction.random(3, 48);\r\n\t\t\tPacketRepository.send(RepositionChild.class, new ChildPositionContext(player, 13, child, positionX, positionY));\r\n\t\t}\r\n\t\tPacketRepository.send(RepositionChild.class, new ChildPositionContext(player, 13, 14, 308 + RandomFunction.random(2, 45), 155 - RandomFunction.random(3, 45)));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the pin.\r\n\t * @param args\r\n\t */\r\n\tprivate void setPin() {\r\n\t\tstatus = PinStatus.PENDING;\r\n\t\tpendingDelay = System.currentTimeMillis() + (GameWorld.getSettings().isDevMode() ? TimeUnit.SECONDS.toMillis(30) : TimeUnit.DAYS.toMillis(this.getRecoveryDelay()));\r\n\t\tpin = new String(Arrays.copyOf(tempPin.toCharArray(), 4));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the pin.\r\n\t * @param pin the pin.\r\n\t */\r\n\tpublic void setPin(String pin) {\r\n\t\tthis.pin = pin;\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels the pin.\r\n\t */\r\n\tpublic void cancelPin(String... messages) {\r\n\t\tstatus = PinStatus.NO_PIN;\r\n\t\tpendingDelay = -1;\r\n\t\tpin = null;\r\n\t\tunlocked = false;\r\n\t\tplayer.getAudioManager().send(1042);\r\n\t\topenSettings(messages);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the pin is an easy guess.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tprivate boolean isEasyGuess() {\r\n\t\tboolean badCombo = true;\r\n\t\tString currentPin = tempPin;\r\n\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\tif (currentPin.charAt(0) != currentPin.charAt(i)) {\r\n\t\t\t\tbadCombo = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!badCombo) {\r\n\t\t\tbadCombo = true;\r\n\t\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\t\tint value = Byte.valueOf((byte) currentPin.charAt(i));\r\n\t\t\t\tint next = Byte.valueOf((byte) currentPin.charAt(i + 1));\r\n\t\t\t\tif (!(Character.valueOf((char) (value + 1)) == next || Character.valueOf((char) (value - 1)) == next)) {\r\n\t\t\t\t\tbadCombo = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn badCombo;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks the temporary pin match.\r\n\t * @return {@code True} if matched.\r\n\t */\r\n\tprivate boolean checkTempPin() {\r\n\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\tif (tempPin.charAt(i) != tempPin.charAt(4 + i)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the pending\r\n\t * @return the pending days.\r\n\t */\r\n\tpublic int getPendingDays() {\r\n\t\tif (pendingDelay < System.currentTimeMillis()) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn (int) (pendingDelay - System.currentTimeMillis()) / (GameWorld.getSettings().isDevMode() ? 1000 : 86400000);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the stage of the pin setting.\r\n\t * @return the stage.\r\n\t */\r\n\tpublic int getStage() {\r\n\t\tif (tempPin == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn tempPin.length();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the login message.\r\n\t */\r\n\tpublic void drawLoginMessage() {\r\n\t\tplayer.getPacketDispatch().sendString(status.getLoginMessage(this), 378, 62);\r\n\t\tcheckPendingActivity();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the chaning pin.\r\n\t * @param changing the changing.\r\n\t */\r\n\tpublic void setChangingState(int state) {\r\n\t\tthis.changeState = state;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the long recovery delay.\r\n\t * @return the delay.\r\n\t */\r\n\tpublic int getRecoveryDelay() {\r\n\t\treturn longRecovery ? 7 : 3;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the manager has a pin.\r\n\t * @return the pin.\r\n\t */\r\n\tpublic boolean hasPin() {\r\n\t\treturn pin != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there is a pending pin.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasPendingPin() {\r\n\t\treturn getPendingDays() > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the pin.\r\n\t * @return the pin.\r\n\t */\r\n\tpublic String getPin() {\r\n\t\treturn pin;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the unlocked.\r\n\t * @return the unlocked\r\n\t */\r\n\tpublic boolean isUnlocked() {\r\n\t\tif (!hasPin()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn unlocked;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the baunlocked.\r\n\t * @param unlocked the unlocked to set.\r\n\t */\r\n\tpublic void setUnlocked(boolean unlocked) {\r\n\t\tthis.unlocked = unlocked;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the player.\r\n\t * @return the player\r\n\t */\r\n\tpublic Player getPlayer() {\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the longRecovery.\r\n\t * @return the longRecovery\r\n\t */\r\n\tpublic boolean isLongRecovery() {\r\n\t\treturn longRecovery;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the status.\r\n\t * @param status the status.\r\n\t */\r\n\tpublic void setStatus(PinStatus status) {\r\n\t\tthis.status = status;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the balongRecovery.\r\n\t * @param longRecovery the longRecovery to set.\r\n\t */\r\n\tpublic void setLongRecovery(boolean longRecovery) {\r\n\t\tthis.longRecovery = longRecovery;\r\n\t}\r\n\r\n\t/**\r\n\t * Switches the recovery delay.\r\n\t */\r\n\tpublic void switchRecovery() {\r\n\r\n\t\tsetLongRecovery(!longRecovery);\r\n\t\tPinStatus.drawString(player, getRecoveryDelay() + \" days\", 71);\r\n\t\tPinStatus.drawString(player, \"Your recovery delay has\", 42);\r\n\t\tPinStatus.drawString(player, \"now been set to \" + getRecoveryDelay() + \" days.\", 43);\r\n\t\tPinStatus.drawString(player, \"\", 44);\r\n\t\tPinStatus.drawString(player, \"You would have to wait this\", 45);\r\n\t\tPinStatus.drawString(player, \"long to delete your PIN if\", 46);\r\n\t\tPinStatus.drawString(player, \"you forgot it. But you\", 47);\r\n\t\tPinStatus.drawString(player, \"haven't got one...\", 48);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the pin is blocked.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isPinBlocked() {\r\n\t\treturn tryDelay > System.currentTimeMillis();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the PIN lock ticks.\r\n\t * @return The PIN lock ticks.\r\n\t */\r\n\tpublic int getPinSeconds() {\r\n\t\tif (tries == 2) {\r\n\t\t\treturn 10;\r\n\t\t} else if (tries == 3) {\r\n\t\t\treturn 15;\r\n\t\t} else if (tries > 3) {\r\n\t\t\treturn 1000;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the tries.\r\n\t * @return the tries\r\n\t */\r\n\tpublic int getTries() {\r\n\t\treturn tries;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the batries.\r\n\t * @param tries the tries to set.\r\n\t */\r\n\tpublic int setTries(int tries) {\r\n\t\tthis.tries = tries;\r\n\t\treturn tries;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the tryDelay.\r\n\t * @return the tryDelay\r\n\t */\r\n\tpublic long getTryDelay() {\r\n\t\treturn tryDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the batryDelay.\r\n\t * @param tryDelay the tryDelay to set.\r\n\t */\r\n\tpublic void setTryDelay(long tryDelay) {\r\n\t\tthis.tryDelay = tryDelay;\r\n\t}\r\n\r\n\t/**\r\n\t * A pin status.\r\n\t * @author Vexia/k\r\n\t */\r\n\tpublic enum PinStatus {\r\n\t\tNO_PIN() {\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void draw(BankPinManager manager, Player player) {\r\n\t\t\t\tdrawString(player, \"NO PIN set\", 69);\r\n\t\t\t\tremoveLines(player, 89, 55, 56, 57, 91, 64, 65, 63, 62);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tPENDING() {\r\n\t\t\t@Override\r\n\t\t\tpublic void draw(BankPinManager manager, Player player) {\r\n\t\t\t\tdrawString(player, \"PIN coming soon\", 69);\r\n\t\t\t\tremoveLines(player, 89, 55, 56, 57, 91, 64, 63, 62, 60, 61);\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic String getLoginMessage(BankPinManager manager) {\r\n\t\t\t\tint days = manager.getPendingDays();\r\n\t\t\t\tString message = \"Your Bank PIN will become active in another \" + days + \" day\" + (days > 1 ? \"s\" : \"\") + \".\";\r\n\t\t\t\tif (days < 1) {\r\n\t\t\t\t\treturn \"Your Bank PIN has just become active.\";\r\n\t\t\t\t}\r\n\t\t\t\treturn message;\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic String[] getMessages(BankPinManager manager) {\r\n\t\t\t\tint days = manager.getPendingDays();\r\n\t\t\t\treturn new String[] { \"You have requested that a\", \"PIN be set on your bank\", \"account. This will take effect\", \"in another \" + days + \" day\" + (days > 1 ? \"s\" : \"\") + \".\", \"\", \"If you wish to cancel this\", \"PIN, please use the button\", \"on the left.\" };\r\n\t\t\t}\r\n\t\t},\r\n\t\tACTIVE() {\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void draw(BankPinManager manager, Player player) {\r\n\t\t\t\tdrawString(player, \"You have a PIN\", 69);\r\n\t\t\t\tremoveLines(player, 89, 55, 56, 57, 91, CANCEL_PENDING, CHANGE_RECOVERY, SET_PIN);\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic String getLoginMessage(BankPinManager manager) {\r\n\t\t\t\treturn \"You you currently have a Bank PIN.\";\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Draws the status on the interface.\r\n\t\t * @param player the player.\r\n\t\t */\r\n\t\tpublic void draw(BankPinManager manager, Player player) {\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the login message.\r\n\t\t * @param manager the manager.\r\n\t\t * @return the message.\r\n\t\t */\r\n\t\tpublic String getLoginMessage(BankPinManager manager) {\r\n\t\t\treturn \"You do not have a Bank PIN. Please visit a bank if you would like one.\";\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws a string.\r\n\t\t * @param player the player.\r\n\t\t * @param string the string.\r\n\t\t * @param line the line.\r\n\t\t */\r\n\t\tpublic static void drawString(Player player, String string, int line) {\r\n\t\t\tplayer.getPacketDispatch().sendString(string, 14, line);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes the lines.\r\n\t\t * @param player the player.\r\n\t\t * @param lines the lines.\r\n\t\t */\r\n\t\tpublic static void removeLines(Player player, int... lines) {\r\n\t\t\tfor (int line : lines) {\r\n\t\t\t\tplayer.getPacketDispatch().sendInterfaceConfig(14, line, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the messages to display.\r\n\t\t * @return the messages.\r\n\t\t */\r\n\t\tpublic String[] getMessages(BankPinManager manager) {\r\n\t\t\treturn SETTINGS_MESSAGES;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/BankPinManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/BankPinManager.java	(date 1597089529757)
@@ -12,6 +12,7 @@
 import core.net.packet.out.RepositionChild;
 import core.net.packet.out.StringPacket;
 import core.tools.RandomFunction;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 import java.util.ArrayList;
@@ -130,6 +131,23 @@
 		buffer.put((byte) 0);
 	}
 
+	public void parse(JSONObject data){
+		if(data.containsKey("pin")) {
+			pin = data.get("pin").toString();
+		}
+		if(data.containsKey("status")){
+			int st = Integer.parseInt( data.get("status").toString());
+			status = PinStatus.values()[st];
+		}
+		if(data.containsKey("pendingDelay")){
+			this.pendingDelay = Long.parseLong(data.get("pendingDelay").toString());
+		}
+		if(data.containsKey("tryDelay")){
+			this.tryDelay = Long.parseLong(data.get("tryDelay").toString());
+		}
+		longRecovery = (boolean) data.get("longRecovery");
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
@@ -834,4 +852,11 @@
 
 	}
 
+	public PinStatus getStatus() {
+		return status;
+	}
+
+	public long getPendingDelay() {
+		return pendingDelay;
+	}
 }
Index: Server/src/main/java/Server/core/game/system/SystemTermination.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.system;\r\n\r\nimport plugin.ge.GEOfferDispatch;\r\nimport plugin.ge.GrandExchangeDatabase;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.PlayerParser;\r\nimport core.game.world.repository.Repository;\r\n\r\nimport java.io.File;\r\nimport java.util.Iterator;\r\n\r\n/**\r\n * Handles the terminating of the system.\r\n * @author Emperor\r\n * \r\n */\r\npublic final class SystemTermination {\r\n\r\n\t/**\r\n\t * The data directory.\r\n\t */\r\n\tprivate static final String DATA_DIRECTORY = \"data/\";\r\n\r\n\t/**\r\n\t * The backup directory.\r\n\t */\r\n\tprivate static final String BACKUP_DIRECTORY = \"data/backup/\";\r\n\r\n\t/**\r\n\t * Constructs a new {@code SystemTermination} {@code Object}.\r\n\t */\r\n\tprotected SystemTermination() {\r\n\t\t/*\r\n\t\t * empty.\r\n\t\t */\r\n\t}\r\n\r\n\t/**\r\n\t * Terminates the system safely.\r\n\t */\r\n\tpublic void terminate() {\r\n\t\tSystemLogger.log(\"[SystemTerminator] Initializing termination sequence - do not shutdown!\");\r\n\t\ttry {\r\n\t\t\tsave(getDataDirectory());\r\n\t\t} catch (Throwable e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\ttry {\r\n\t\t\t\tsave(getBackupDirectory());\r\n\t\t\t} catch (Throwable t) {\r\n\t\t\t\tt.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t\tSystemLogger.log(\"[SystemTerminator] Server successfully terminated!\");\r\n\t}\r\n\r\n\t/**\r\n\t * Saves all system data on the directory.\r\n\t * @param directory The base directory.\r\n\t * @throws Throwable When an exception occurs.\r\n\t */\r\n\tpublic void save(String directory) throws Throwable {\r\n\t\tFile file = new File(directory);\r\n\t\tSystemLogger.log(\"[SystemTerminator] Saving data [dir=\" + file.getAbsolutePath() + \"]...\");\r\n\t\tif (!file.isDirectory()) {\r\n\t\t\tfile.mkdir();\r\n\t\t}\r\n\t\tGrandExchangeDatabase.save(directory + File.separator + \"eco\" + File.separator);\r\n\t\tGEOfferDispatch.dump();\r\n\t\tSystemLogger.log(\"[SystemTerminator] Saved Grand Exchange databases!\");\r\n\t\tRepository.getDisconnectionQueue().clear();\r\n\t\tfor (Iterator<Player> it = Repository.getPlayers().iterator(); it.hasNext();) {\r\n\t\t\ttry {\r\n\t\t\t\tPlayer p = it.next();\r\n\t\t\t\tif (p != null && !p.isArtificial()) { // Should never be null.\r\n\t\t\t\t\tp.removeAttribute(\"combat-time\");\r\n\t\t\t\t\tp.clear();\r\n\t\t\t\t\tPlayerParser.dump(p, directory);\r\n\t\t\t\t\tp.getDetails().save();\r\n\t\t\t\t}\r\n\t\t\t} catch (Throwable t) {\r\n\t\t\t\tt.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n//\t\tServerStore.dump(directory + \"store/\");\r\n\t\tSystemLogger.log(\"[SystemTerminator] Saved player accounts!\");\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the data directory.\r\n\t * @return the directory.\r\n\t */\r\n\tpublic static String getDataDirectory() {\r\n\t\treturn DATA_DIRECTORY;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the backup directory.\r\n\t * @return the directory.\r\n\t */\r\n\tpublic static String getBackupDirectory() {\r\n\t\treturn BACKUP_DIRECTORY;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/system/SystemTermination.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/system/SystemTermination.java	(date 1597089529788)
@@ -74,7 +74,7 @@
 				if (p != null && !p.isArtificial()) { // Should never be null.
 					p.removeAttribute("combat-time");
 					p.clear();
-					PlayerParser.dump(p, directory);
+					PlayerParser.save(p);
 					p.getDetails().save();
 				}
 			} catch (Throwable t) {
Index: Server/src/main/java/Server/plugin/skill/Skills.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill;\r\n\r\nimport core.game.content.global.SkillcapePerks;\r\nimport core.game.world.GameWorld;\r\nimport plugin.ame.ExperienceMonitor;\r\nimport plugin.tutorial.TutorialSession;\r\nimport core.game.node.entity.Entity;\r\nimport core.game.node.entity.combat.ImpactHandler;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.link.request.assist.AssistSession;\r\nimport core.game.node.item.Item;\r\nimport core.game.world.repository.Repository;\r\nimport core.game.world.update.flag.player.AppearanceFlag;\r\nimport core.net.packet.PacketRepository;\r\nimport core.net.packet.context.SkillContext;\r\nimport core.net.packet.out.SkillLevel;\r\nimport plugin.interaction.item.brawling_gloves.BrawlingGloves;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Represents an entity's skills.\r\n * @author Emperor\r\n */\r\npublic final class Skills {\r\n\r\n\t/**\r\n\t * Represents the constant modifier of experience.\r\n\t */\r\n\tpublic double experienceMutiplier = 5.0;\r\n\r\n\t/**\r\n\t * The maximum experience multiplier.\r\n\t */\r\n\tpublic static final double MAX_EXPERIENCE_MOD = 60.0;\r\n\r\n\t/**\r\n\t * Represents an array of skill names.\r\n\t */\r\n\tpublic static final String[] SKILL_NAME = { \"Attack\", \"Defence\", \"Strength\", \"Hitpoints\", \"Ranged\", \"Prayer\", \"Magic\", \"Cooking\", \"Woodcutting\", \"Fletching\", \"Fishing\", \"Firemaking\", \"Crafting\", \"Smithing\", \"Mining\", \"Herblore\", \"Agility\", \"Thieving\", \"Slayer\", \"Farming\", \"Runecrafting\", \"Hunter\", \"Construction\", \"Summoning\" };\r\n\r\n\t/**\r\n\t * Constants for the skill ids.\r\n\t */\r\n\tpublic static final int ATTACK = 0, DEFENCE = 1, STRENGTH = 2, HITPOINTS = 3, RANGE = 4, PRAYER = 5, MAGIC = 6, COOKING = 7, WOODCUTTING = 8, FLETCHING = 9, FISHING = 10, FIREMAKING = 11, CRAFTING = 12, SMITHING = 13, MINING = 14, HERBLORE = 15, AGILITY = 16, THIEVING = 17, SLAYER = 18, FARMING = 19, RUNECRAFTING = 20, HUNTER = 21, CONSTRUCTION = 22, SUMMONING = 23;\r\n\r\n\t/**\r\n\t * Number of skills in game\r\n\t */\r\n\tpublic static final int NUM_SKILLS = 24;\r\n\r\n\t/**\r\n\t * Represents the entity instance.\r\n\t */\r\n\tprivate final Entity entity;\r\n\r\n\t/**\r\n\t * An array containing all the player's experience.\r\n\t */\r\n\tprivate final double[] experience;\r\n\r\n\t/**\r\n\t * An array containing all the maximum levels.\r\n\t */\r\n\tprivate final int[] staticLevels;\r\n\r\n\t/**\r\n\t * An array containing all the current levels.\r\n\t */\r\n\tprivate final int[] dynamicLevels;\r\n\r\n\t/**\r\n\t * Represents the amount of prayer points left.\r\n\t */\r\n\tprivate double prayerPoints = 1.;\r\n\r\n\t/**\r\n\t * The player's life-points.\r\n\t */\r\n\tprivate int lifepoints = 10;\r\n\r\n\t/**\r\n\t * The amount of increased maximum lifepoints.\r\n\t */\r\n\tprivate int lifepointsIncrease = 0;\r\n\r\n\t/**\r\n\t * The total experience gained.\r\n\t */\r\n\tprivate double experienceGained = 0;\r\n\r\n\t/**\r\n\t * The restoration pulses.\r\n\t */\r\n\tprivate final SkillRestoration[] restoration;\r\n\r\n\t/**\r\n\t * If a lifepoints update should occur.\r\n\t */\r\n\tprivate boolean lifepointsUpdate;\r\n\r\n\t/**\r\n\t * The combat milestones.\r\n\t */\r\n\tprivate int combatMilestone;\r\n\r\n\t/**\r\n\t * The skilling milestones.\r\n\t */\r\n\tprivate int skillMilestone;\r\n\r\n\t/**\r\n\t * Constructs a new {@code Skills} {@code Object}.\r\n\t * @param entity The entity.\r\n\t */\r\n\tpublic Skills(Entity entity) {\r\n\t\tthis.entity = entity;\r\n\t\tthis.experience = new double[24];\r\n\t\tthis.staticLevels = new int[24];\r\n\t\tthis.dynamicLevels = new int[24];\r\n\t\tthis.restoration = new SkillRestoration[24];\r\n\t\tfor (int i = 0; i < 24; i++) {\r\n\t\t\tthis.staticLevels[i] = 1;\r\n\t\t\tthis.dynamicLevels[i] = 1;\r\n\t\t}\r\n\t\tthis.experience[HITPOINTS] = 1154;\r\n\t\tthis.dynamicLevels[HITPOINTS] = 10;\r\n\t\tthis.staticLevels[HITPOINTS] = 10;\r\n\t\tentity.getProperties().setCombatLevel(3);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Determine whether the specified skill is a combat skill.\r\n\t * Prayer and Summoning are included and counted as combat skills.\r\n\t * @param skill\r\n\t * @return true if so.\r\n\t */\r\n\tpublic boolean isCombat(int skill){\r\n\t\tif((skill >= ATTACK && skill <= MAGIC) || (skill == SUMMONING)){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the skills.\r\n\t */\r\n\tpublic void configure() {\r\n\t\tupdateCombatLevel();\r\n\t\tint max = 24;\r\n\t\tif (entity instanceof NPC) {\r\n\t\t\tmax = 7;\r\n\t\t}\r\n\t\tfor (int i = 0; i < max; i++) {\r\n\t\t\tif (i != PRAYER && i != SUMMONING && restoration[i] == null) {\r\n\t\t\t\tconfigureRestorationPulse(i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called every pulse (600ms).\r\n\t */\r\n\tpublic void pulse() {\r\n\t\tif (lifepoints < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (int i = 0; i < restoration.length; i++) {\r\n\t\t\tif (restoration[i] != null) {\t\r\n\t\t\t\tif (restoration[i] == restoration[FISHING]) {\r\n\t\t\t\t\tif (SkillcapePerks.hasSkillcapePerk(entity.asPlayer(), SkillcapePerks.FISHING)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trestoration[i].restore(entity);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Configures a restoration pulse for the given skill id.\r\n\t * @param skillId The skill id.\r\n\t */\r\n\tprivate void configureRestorationPulse(final int skillId) {\r\n\t\trestoration[skillId] = new SkillRestoration(skillId);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the skills data.\r\n\t * @param skills The skills.\r\n\t */\r\n\tpublic void copy(Skills skills) {\r\n\t\tfor (int i = 0; i < 24; i++) {\r\n\t\t\tthis.staticLevels[i] = skills.staticLevels[i];\r\n\t\t\tthis.dynamicLevels[i] = skills.dynamicLevels[i];\r\n\t\t\tthis.experience[i] = skills.experience[i];\r\n\t\t}\r\n\t\tprayerPoints = skills.prayerPoints;\r\n\t\tlifepoints = skills.lifepoints;\r\n\t\tlifepointsIncrease = skills.lifepointsIncrease;\r\n\t\texperienceGained = skills.experienceGained;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds experience to a skill.\r\n\t * @param slot The skill slot.\r\n\t * @param experience The experience.\r\n\t */\r\n\tpublic void addExperience(int slot, double experience, boolean playerMod) {\r\n\t\tdouble mod = getExperienceMod(slot, experience, playerMod, true);\r\n\t\tfinal Player player = entity instanceof Player ? ((Player) entity) : null;\r\n\t\tfinal AssistSession assist = entity.getExtension(AssistSession.class);\r\n\t\tif (assist != null && assist.translateExperience(player, slot, experience, mod)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tboolean already200m = this.experience[slot] == 200000000;\r\n\t\tdouble experienceAdd = (experience * mod);\r\n\t\t//check if a player has brawling gloves and, if equipped, modify xp\r\n\t\tif(!player.getBrawlingGlovesManager().GloveCharges.isEmpty()){\r\n\t\t\tItem gloves = BrawlingGloves.forSkill(slot) == null ? null : new Item(BrawlingGloves.forSkill(slot).getId());\r\n\t\t\tif(gloves == null && (slot == Skills.STRENGTH || slot == Skills.DEFENCE)){\r\n\t\t\t\tgloves = new Item (BrawlingGloves.forSkill(Skills.ATTACK).getId());\r\n\t\t\t}\r\n\t\t\tif(gloves != null && player.getEquipment().containsItem(gloves)){\r\n\t\t\t\texperienceAdd += experienceAdd * player.getBrawlingGlovesManager().getExperienceBonus();\r\n\t\t\t\tplayer.getBrawlingGlovesManager().updateCharges(gloves.getId(),1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.experience[slot] += experienceAdd;\r\n\t\ttry {\r\n\t\t\tplayer.getAntiMacroHandler().monitors[slot].setExperienceAmount((int) experienceAdd);\r\n\t\t} catch (Exception e){\r\n\t\t\tplayer.getAntiMacroHandler().monitors[slot] = new ExperienceMonitor(slot);\r\n\t\t\tplayer.getAntiMacroHandler().monitors[slot].setExperienceAmount((int) experienceAdd);\r\n\t\t}\r\n\t\tif (this.experience[slot] >= 200000000) {\r\n\t\t\tif(!already200m && !player.isArtificial()){\r\n\t\t\t\tRepository.sendNews(entity.asPlayer().getUsername()+\" has just reached 200m experience in \" + SKILL_NAME[slot] + \"!\");\r\n\t\t\t}\r\n\t\t\tthis.experience[slot] = 200000000;\r\n\t\t}\r\n\t\tif (entity instanceof Player && this.experience[slot] > 175) {\r\n\t\t\tif (player.getSavedData().getGlobalData().getTutorialStage() < TutorialSession.MAX_STAGE && slot != HITPOINTS) {\r\n\t\t\t\tthis.experience[slot] = 175;\r\n\t\t\t}\r\n\t\t}\r\n\t\texperienceGained += experienceAdd;\r\n\t\tint newLevel = getStaticLevelByExperience(slot);\r\n\t\tif (newLevel > staticLevels[slot]) {\r\n\t\t\tint amount = newLevel - staticLevels[slot];\r\n\t\t\tif (dynamicLevels[slot] < newLevel) {\r\n\t\t\t\tdynamicLevels[slot] += amount;\r\n\t\t\t}\r\n\t\t\tif (slot == HITPOINTS) {\r\n\t\t\t\tlifepoints += amount;\r\n\t\t\t}\r\n\t\t\tstaticLevels[slot] = newLevel;\r\n\t\t\tif(newLevel == 99 && !player.isArtificial()){\r\n\t\t\t\tRepository.sendNews(entity.asPlayer().getUsername() + \" has just achieved level 99 \" + SKILL_NAME[slot]);\r\n\t\t\t}\r\n\t\t\tif (entity instanceof Player) {\r\n\t\t\t\tif (updateCombatLevel()) {\r\n\t\t\t\t\tplayer.getUpdateMasks().register(new AppearanceFlag(player));\r\n\t\t\t\t}\r\n\t\t\t\tLevelUp.levelup(player, slot, amount);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext((Player) entity, slot));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the current experience mod.\r\n\t * @param slot The skill slot.\r\n\t * @param experience The experience gained.\r\n\t * @param playerMod If player mods should be applied.\r\n\t * @return The experience mod.\r\n\t */\r\n\tprivate double getExperienceMod(int slot, double experience, boolean playerMod, boolean multiplyer) {\r\n\t\t//Keywords for people ctrl + Fing the project\r\n\t\t//xprate xp rate xp multiplier skilling rate\r\n\t\treturn experienceMutiplier;\r\n\t\t/*if (!(entity instanceof Player)) {\r\n\t\t\treturn 1.0;\r\n\t\t}\r\n\t\tdouble mod = multiplyer ? (EXPERIENCE_MULTIPLIER) : 1;\r\n\t\tPlayer p = (Player) entity;\r\n\t\tif (p.getIronmanManager().getMode() == IronmanMode.ULTIMATE) {\r\n\t\t\tmod /= 4;\r\n\t\t} else if (p.getIronmanManager().getMode() == IronmanMode.STANDARD) {\r\n\t\t\tmod /= 2;\r\n\t\t}\r\n\t\t//A boost for combat skills that are under level 65.\r\n\t\tif(entity instanceof Player && !this.hasLevel(slot, 65) && isCombat(slot)){\r\n\t\t\tmod *= 1.5;\r\n\t\t}\r\n\t\t//Grand Exchange region XP boost.\r\n\t\tif(entity.getViewport().getRegion().getRegionId() == 12598){\r\n\t\t\tmod += 1.5;\r\n\t\t}\r\n\t\t// Pest control, XP halved during the game\r\n\t\tif (entity.getViewport().getRegion().getRegionId() == 10536) {\r\n\t\t\tmod *= .5;\r\n\t\t}\r\n\t\tif (SystemManager.getSystemConfig().isDoubleExp()) {\r\n\t\t\tmod *= 2;\r\n\t\t}\r\n\t\tif (HolidayEvent.getCurrent() != null) {\r\n\t\t\tHolidayEvent.getCurrent().addExperience(p, slot, experience);\r\n\t\t}\r\n\t\tp.getAntiMacroHandler().registerExperience(slot, experience);\r\n\t\tif (TutorialSession.getExtension(p).getStage() < TutorialSession.MAX_STAGE) {\r\n\t\t\tmod = 1.0;\r\n\t\t} else {\r\n\t\t\tif (playerMod && p.getExperienceMod() != 0.0) {\r\n\t\t\t\tmod *= p.getExperienceMod();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (mod > MAX_EXPERIENCE_MOD ) {\r\n\t\t\treturn MAX_EXPERIENCE_MOD;\r\n\t\t}\r\n\t\treturn mod;*/\r\n\t}\r\n\r\n\t/**\r\n\t * Adds experience to the skills.\r\n\t */\r\n\tpublic void addExperience(final int slot, double experience) {\r\n\t\taddExperience(slot, experience, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the highest combat skill id.\r\n\t * @return The id of the highest combat skill.\r\n\t */\r\n\tpublic int getHighestCombatSkill() {\r\n\t\tint id = 0;\r\n\t\tint last = 0;\r\n\t\tfor (int i = 0; i < 5; i++) {\r\n\t\t\tif (staticLevels[i] > last) {\r\n\t\t\t\tlast = staticLevels[i];\r\n\t\t\t\tid = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn id;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the dynamic levels to the static levels\r\n\t */\r\n\tpublic void restore() {\r\n\t\tfor (int i = 0; i < 24; i++) {\r\n\t\t\tint staticLevel = getStaticLevel(i);\r\n\t\t\tsetLevel(i, staticLevel);\r\n\t\t}\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tentity.asPlayer().getAudioManager().send(2674);\r\n\t\t}\r\n\t\trechargePrayerPoints();\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the skill data from the buffer.\r\n\t * @param buffer The byte buffer.\r\n\t */\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tfor (int i = 0; i < 24; i++) {\r\n\t\t\texperience[i] = ((double) buffer.getInt() / 10D);\r\n\t\t\tdynamicLevels[i] = buffer.get() & 0xFF;\r\n\t\t\tif (i == HITPOINTS) {\r\n\t\t\t\tlifepoints = dynamicLevels[i];\r\n\t\t\t} else if (i == PRAYER) {\r\n\t\t\t\tprayerPoints = dynamicLevels[i];\r\n\t\t\t}\r\n\t\t\tstaticLevels[i] = buffer.get() & 0xFF;\r\n\t\t}\r\n\t\texperienceGained = buffer.getInt();\r\n\t}\r\n\r\n\tpublic void parseExpRate(ByteBuffer buffer) {\r\n\t\texperienceMutiplier = buffer.getDouble();\r\n\t\tif(GameWorld.getSettings().getDefault_xp_rate() != experienceMutiplier){\r\n\t\t\texperienceMutiplier = GameWorld.getSettings().getDefault_xp_rate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the skill data on the buffer.\r\n\t * @param buffer The byte buffer.\r\n\t */\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tfor (int i = 0; i < 24; i++) {\r\n\t\t\tbuffer.putInt((int) (experience[i] * 10));\r\n\t\t\tif (i == HITPOINTS) {\r\n\t\t\t\tbuffer.put((byte) lifepoints);\r\n\t\t\t} else if (i == PRAYER) {\r\n\t\t\t\tbuffer.put((byte) Math.ceil(prayerPoints));\r\n\t\t\t} else {\r\n\t\t\t\tbuffer.put((byte) dynamicLevels[i]);\r\n\t\t\t}\r\n\t\t\tbuffer.put((byte) staticLevels[i]);\r\n\t\t}\r\n\t\tbuffer.putInt((int) experienceGained);\r\n\t}\r\n\r\n\tpublic void saveExpRate(ByteBuffer buffer) {\r\n\t\tbuffer.putDouble(experienceMutiplier);\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes all the skill levels.\r\n\t */\r\n\tpublic void refresh() {\r\n\t\tif (!(entity instanceof Player)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPlayer player = (Player) entity;\r\n\t\tfor (int i = 0; i < 24; i++) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext(player, i));\r\n\t\t}\r\n\t\tLevelUp.sendFlashingIcons(player, -1);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the static level.\r\n\t * @param slot The skill's slot.\r\n\t * @return The level.\r\n\t */\r\n\tpublic int getStaticLevelByExperience(int slot) {\r\n\t\tdouble exp = experience[slot];\r\n\r\n\t\tint points = 0;\r\n\t\tint output = 0;\r\n\t\tfor (byte lvl = 1; lvl < 100; lvl++) {\r\n\t\t\tpoints += Math.floor(lvl + 300.0 * Math.pow(2.0, lvl / 7.0));\r\n\t\t\toutput = (int) Math.floor(points / 4);\r\n\t\t\tif ((output - 1) >= exp) {\r\n\t\t\t\treturn lvl;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 99;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the experience for a certain level.\r\n\t * @param level The level.\r\n\t * @return The experience needed.\r\n\t */\r\n\tpublic int getExperienceByLevel(int level) {\r\n\t\tint points = 0;\r\n\t\tint output = 0;\r\n\t\tfor (int lvl = 1; lvl <= level; lvl++) {\r\n\t\t\tpoints += Math.floor(lvl + 300.0 * Math.pow(2.0, lvl / 7.0));\r\n\t\t\tif (lvl >= level) {\r\n\t\t\t\treturn output;\r\n\t\t\t}\r\n\t\t\toutput = (int) Math.floor(points / 4);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the combat level.\r\n\t * @return {@code True} if the combat level changed.\r\n\t */\r\n\t@SuppressWarnings(\"deprecation\")\r\n\tpublic boolean updateCombatLevel() {\r\n\t\tboolean update = false;\r\n\t\tint level = calculateCombatLevel();\r\n\t\tupdate = level != entity.getProperties().getCombatLevel();\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPlayer player = (Player) entity;\r\n\t\t\tint summon = staticLevels[SUMMONING] / 8;\r\n\t\t\tif (summon != player.getFamiliarManager().getSummoningCombatLevel()) {\r\n\t\t\t\tplayer.getFamiliarManager().setSummoningCombatLevel(summon);\r\n\t\t\t\tupdate = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tentity.getProperties().setCombatLevel(level);\r\n\t\treturn update;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the combat level (ignoring summoning).\r\n\t * @return The combat level.\r\n\t */\r\n\tprivate int calculateCombatLevel() {\r\n\t\tif (entity instanceof NPC) {\r\n\t\t\treturn ((NPC) entity).getDefinition().getCombatLevel();\r\n\t\t}\r\n\t\tint combatLevel = 0;\r\n\t\tint melee = staticLevels[ATTACK] + staticLevels[STRENGTH];\r\n\t\tint range = (int) (1.5 * staticLevels[RANGE]);\r\n\t\tint mage = (int) (1.5 * staticLevels[MAGIC]);\r\n\t\tif (melee > range && melee > mage) {\r\n\t\t\tcombatLevel = melee;\r\n\t\t} else if (range > melee && range > mage) {\r\n\t\t\tcombatLevel = range;\r\n\t\t} else {\r\n\t\t\tcombatLevel = mage;\r\n\t\t}\r\n\t\tcombatLevel = staticLevels[DEFENCE] + staticLevels[HITPOINTS] + (staticLevels[PRAYER] / 2) + (int) (1.3 * combatLevel);\r\n\t\treturn combatLevel / 4;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the player\r\n\t */\r\n\tpublic Entity getEntity() {\r\n\t\treturn entity;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the experience.\r\n\t * @param slot The slot.\r\n\t * @return The experience.\r\n\t */\r\n\tpublic double getExperience(int slot) {\r\n\t\treturn experience[slot];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the static skill level.\r\n\t * @param slot The slot.\r\n\t * @return The static level.\r\n\t */\r\n\tpublic int getStaticLevel(int slot) {\r\n\t\treturn staticLevels[slot];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the experience gained.\r\n\t * @param experienceGained The experience gained.\r\n\t */\r\n\tpublic void setExperienceGained(double experienceGained) {\r\n\t\tthis.experienceGained = experienceGained;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the experience gained.\r\n\t * @return The experience gained.\r\n\t */\r\n\tpublic double getExperienceGained() {\r\n\t\treturn experienceGained;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a dynamic level.\r\n\t * @param slot The skill id.\r\n\t * @param level The level.\r\n\t */\r\n\tpublic void setLevel(int slot, int level) {\r\n\t\tif (slot == HITPOINTS) {\r\n\t\t\tlifepoints = level;\r\n\t\t} else if (slot == PRAYER) {\r\n\t\t\tprayerPoints = level;\r\n\t\t}\r\n\t\tdynamicLevels[slot] = level;\r\n\t\tif (restoration[slot] != null) {\r\n\t\t\trestoration[slot].restart();\r\n\t\t}\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext((Player) entity, slot));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a dynamic level.\r\n\t * @param slot The skill id.\r\n\t * @return The dynamic level.\r\n\t */\r\n\tpublic int getLevel(int slot, boolean discardAssist) {\r\n\t\tif (!discardAssist) {\r\n\t\t\tif (entity instanceof Player) {\r\n\t\t\t\tfinal Player p = (Player) entity;\r\n\t\t\t\tfinal AssistSession assist = p.getExtension(AssistSession.class);\r\n\t\t\t\tif (assist != null && assist.getPlayer() != p) {\r\n\t\t\t\t\tPlayer assister = assist.getPlayer();\r\n\t\t\t\t\tint index = assist.getSkillIndex(slot);\r\n\t\t\t\t\tif (index != -1 && !assist.isRestricted()) {\r\n\t\t\t\t\t\t// System.out.println(index + \", \" +\r\n\t\t\t\t\t\t// assist.getSkills()[index] + \", \" + SKILL_NAME[slot]);\r\n\t\t\t\t\t\tif (assist.getSkills()[index]) {\r\n\t\t\t\t\t\t\tint assistLevel = assister.getSkills().getLevel(slot);\r\n\t\t\t\t\t\t\tint playerLevel = dynamicLevels[slot];\r\n\t\t\t\t\t\t\tif (assistLevel > playerLevel) {\r\n\t\t\t\t\t\t\t\treturn assistLevel;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dynamicLevels[slot];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the level.\r\n\t * @param slot the slot.\r\n\t * @return the level.\r\n\t */\r\n\tpublic int getLevel(int slot) {\r\n\t\treturn getLevel(slot, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current amount of lifepoints.\r\n\t * @param lifepoints The lifepoints.\r\n\t */\r\n\tpublic void setLifepoints(int lifepoints) {\r\n\t\tthis.lifepoints = lifepoints;\r\n\t\tif (this.lifepoints < 0) {\r\n\t\t\tthis.lifepoints = 0;\r\n\t\t}\r\n\t\tlifepointsUpdate = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lifepoints.\r\n\t * @return The lifepoints.\r\n\t */\r\n\tpublic int getLifepoints() {\r\n\t\treturn lifepoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the maximum amount of lifepoints.\r\n\t * @return The maximum amount.\r\n\t */\r\n\tpublic int getMaximumLifepoints() {\r\n\t\treturn staticLevels[HITPOINTS] + lifepointsIncrease;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the amount of lifepoints increase.\r\n\t * @param amount The amount.\r\n\t */\r\n\tpublic void setLifepointsIncrease(int amount) {\r\n\t\tthis.lifepointsIncrease = amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds lifepoints to the entity.\r\n\t * @param health The amount to add.\r\n\t * @return The amount of overflow.\r\n\t */\r\n\tpublic int heal(int health) {\r\n\t\tlifepoints += health;\r\n\t\tint left = 0;\r\n\t\tif (lifepoints > getMaximumLifepoints()) {\r\n\t\t\tleft = lifepoints - getMaximumLifepoints();\r\n\t\t\tlifepoints = getMaximumLifepoints();\r\n\t\t}\r\n\t\tlifepointsUpdate = true;\r\n\t\treturn left;\r\n\t}\r\n\r\n\t/**\r\n\t * @Deprecated Use\r\n\t * {@link ImpactHandler#manualHit(Entity, int, ImpactHandler.HitsplatType)}\r\n\t * or <br> the <b>hitsplat WILL NOT show and combat will be\r\n\t * desynchronized!</b>\r\n\t * @param damage The amount to remove.\r\n\t * @return The amount of overflow.\r\n\t */\r\n\tpublic int hit(int damage) {\r\n\t\tlifepoints -= damage;\r\n\t\tint left = 0;\r\n\t\tif (lifepoints < 0) {\r\n\t\t\tleft = -lifepoints;\r\n\t\t\tlifepoints = 0;\r\n\t\t}\r\n\t\tlifepointsUpdate = true;\r\n\t\treturn left;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the prayer points.\r\n\t * @return The prayer points.\r\n\t */\r\n\tpublic double getPrayerPoints() {\r\n\t\treturn prayerPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Recharges the prayer points.\r\n\t */\r\n\tpublic void rechargePrayerPoints() {\r\n\t\tprayerPoints = staticLevels[PRAYER];\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext((Player) entity, PRAYER));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current amount of prayer points (by decrementing).\r\n\t * @param amount The amount to decrement with.\r\n\t */\r\n\tpublic void decrementPrayerPoints(double amount) {\r\n\t\tprayerPoints -= amount;\r\n\t\tif (prayerPoints < 0) {\r\n\t\t\tprayerPoints = 0;\r\n\t\t}\r\n\t\t// if (prayerPoints > staticLevels[PRAYER]) {\r\n\t\t// prayerPoints = staticLevels[PRAYER];\r\n\t\t// }\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext((Player) entity, PRAYER));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current amount of prayer points (by incrementing)\r\n\t * @param amount The amount to decrement with.\r\n\t */\r\n\tpublic void incrementPrayerPoints(double amount) {\r\n\t\tprayerPoints += amount;\r\n\t\tif (prayerPoints < 0) {\r\n\t\t\tprayerPoints = 0;\r\n\t\t}\r\n\t\tif (prayerPoints > staticLevels[PRAYER]) {\r\n\t\t\tprayerPoints = staticLevels[PRAYER];\r\n\t\t}\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext((Player) entity, PRAYER));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current prayer points (<b>without checking for being higher than\r\n\t * max</b>)\r\n\t * @param amount The amount.\r\n\t */\r\n\tpublic void setPrayerPoints(double amount) {\r\n\t\tprayerPoints = amount;\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext((Player) entity, PRAYER));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current skill level (by incrementing the current amount with\r\n\t * the given amount, up to the given maximum).\r\n\t * @param skill The skill id.\r\n\t * @param amount The amount to increment.\r\n\t * @param maximum The maximum amount the skill can be.\r\n\t * @return The amount of \"overflow\".\r\n\t */\r\n\tpublic int updateLevel(int skill, int amount, int maximum) {\r\n\t\tif (amount > 0 && dynamicLevels[skill] > maximum) {\r\n\t\t\treturn -amount;\r\n\t\t}\r\n\t\tint left = (dynamicLevels[skill] + amount) - maximum;\r\n\t\tint level = dynamicLevels[skill] += amount;\r\n\t\tif (level < 0) {\r\n\t\t\tdynamicLevels[skill] = 0;\r\n\t\t} else if (amount < 0 && level < maximum) {\r\n\t\t\tdynamicLevels[skill] = maximum;\r\n\t\t} else if (amount > 0 && level > maximum) {\r\n\t\t\tdynamicLevels[skill] = maximum;\r\n\t\t}\r\n\t\tif (restoration[skill] != null) {\r\n\t\t\trestoration[skill].restart();\r\n\t\t}\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext((Player) entity, skill));\r\n\t\t}\r\n\t\treturn left;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates a level.\r\n\t * @param skill the skill.\r\n\t * @param amount the amount.\r\n\t * @return the left.\r\n\t */\r\n\tpublic int updateLevel(int skill, int amount) {\r\n\t\treturn updateLevel(skill, amount, amount >= 0 ? getStaticLevel(skill) + amount : getStaticLevel(skill) - amount);\r\n\t}\r\n\r\n\t/**\r\n\t * Drains a certain percentage of a level.\r\n\t * @param skill The skill.\r\n\t * @param drainPercentage The drain percentage (0.05 indicates 5% drain).\r\n\t * @param maximumDrainPercentage The maximum drain percentage (0.05\r\n\t * indicates 5%).\r\n\t */\r\n\tpublic void drainLevel(int skill, double drainPercentage, double maximumDrainPercentage) {\r\n\t\tint drain = (int) (dynamicLevels[skill] * drainPercentage);\r\n\t\tint minimum = (int) (staticLevels[skill] * (1.0 - maximumDrainPercentage));\r\n\t\tupdateLevel(skill, -drain, minimum);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the static level.\r\n\t * @param skill The skill id.\r\n\t * @param level The level to set.\r\n\t */\r\n\tpublic void setStaticLevel(int skill, int level) {\r\n\t\texperience[skill] = getExperienceByLevel(staticLevels[skill] = dynamicLevels[skill] = level);\r\n\t\tif (entity instanceof Player) {\r\n\t\t\tPacketRepository.send(SkillLevel.class, new SkillContext((Player) entity, skill));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the restoration pulses.\r\n\t * @return The restoration pulse array.\r\n\t */\r\n\tpublic SkillRestoration[] getRestoration() {\r\n\t\treturn restoration;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the amount of mastered skills.\r\n\t * @return The amount of mastered skills.\r\n\t */\r\n\tpublic int getMasteredSkills() {\r\n\t\tint count = 0;\r\n\t\tfor (int i = 0; i < 23; i++) {\r\n\t\t\tif (getStaticLevel(i) >= 99) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to get the skill by the name.\r\n\t * @param name the name.\r\n\t * @return the skill.\r\n\t */\r\n\tpublic static int getSkillByName(final String name) {\r\n\t\tfor (int i = 0; i < SKILL_NAME.length; i++) {\r\n\t\t\tif (SKILL_NAME[i].equalsIgnoreCase(name)) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total level.\r\n\t * @return the total level.\r\n\t */\r\n\tpublic int getTotalLevel() {\r\n\t\tint level = 0;\r\n\t\tfor (int i = 0; i < 24; i++) {\r\n\t\t\tlevel += getStaticLevel(i);\r\n\t\t}\r\n\t\treturn level;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the total exp.\r\n\t * @return the exp.\r\n\t */\r\n\tpublic int getTotalXp() {\r\n\t\tint total = 0;\r\n\t\tfor (int skill = 0; skill < Skills.SKILL_NAME.length; skill++) {\r\n\t\t\ttotal += this.getExperience(skill);\r\n\t\t}\r\n\t\treturn total;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the lifepointsUpdate.\r\n\t * @return The lifepointsUpdate.\r\n\t */\r\n\tpublic boolean isLifepointsUpdate() {\r\n\t\treturn lifepointsUpdate;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the lifepointsUpdate.\r\n\t * @param lifepointsUpdate The lifepointsUpdate to set.\r\n\t */\r\n\tpublic void setLifepointsUpdate(boolean lifepointsUpdate) {\r\n\t\tthis.lifepointsUpdate = lifepointsUpdate;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the statis levels.\r\n\t * @return the level.\r\n\t */\r\n\tpublic int[] getStaticLevels() {\r\n\t\treturn staticLevels;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has the required level.\r\n\t * @param skillId the skill id.\r\n\t * @param i the level.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasLevel(int skillId, int i) {\r\n\t\treturn getStaticLevel(skillId) >= i;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the combatMilestone value.\r\n\t * @return The combatMilestone.\r\n\t */\r\n\tpublic int getCombatMilestone() {\r\n\t\treturn combatMilestone;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the combatMilestones value.\r\n\t * @param combatMilestone The combatMilestones to set.\r\n\t */\r\n\tpublic void setCombatMilestone(int combatMilestone) {\r\n\t\tthis.combatMilestone = combatMilestone;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the skillMilestone value.\r\n\t * @return The skillMilestone.\r\n\t */\r\n\tpublic int getSkillMilestone() {\r\n\t\treturn skillMilestone;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the skillMilestone value.\r\n\t * @param skillMilestone The skillMilestone to set.\r\n\t */\r\n\tpublic void setSkillMilestone(int skillMilestone) {\r\n\t\tthis.skillMilestone = skillMilestone;\r\n\t}\r\n\r\n\t}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/Skills.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/Skills.java	(date 1597089529804)
@@ -2,6 +2,8 @@
 
 import core.game.content.global.SkillcapePerks;
 import core.game.world.GameWorld;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 import plugin.ame.ExperienceMonitor;
 import plugin.tutorial.TutorialSession;
 import core.game.node.entity.Entity;
@@ -380,6 +382,21 @@
 		experienceGained = buffer.getInt();
 	}
 
+	public void parse(JSONArray skillData){
+		for(int i = 0; i < skillData.size(); i++){
+			JSONObject skill = (JSONObject) skillData.get(i);
+			int id = Integer.parseInt( skill.get("id").toString());
+			dynamicLevels[id] = Integer.parseInt( skill.get("dynamic").toString());
+			if (id == HITPOINTS) {
+				lifepoints = dynamicLevels[i];
+			} else if (id == PRAYER) {
+				prayerPoints = dynamicLevels[i];
+			}
+			staticLevels[id] = Integer.parseInt( skill.get("static").toString());
+			experience[id] = Double.parseDouble(skill.get("experience").toString());
+		}
+	}
+
 	public void parseExpRate(ByteBuffer buffer) {
 		experienceMutiplier = buffer.getDouble();
 		if(GameWorld.getSettings().getDefault_xp_rate() != experienceMutiplier){
@@ -932,4 +949,7 @@
 		this.skillMilestone = skillMilestone;
 	}
 
-	}
\ No newline at end of file
+	public int[] getDynamicLevels() {
+		return dynamicLevels;
+	}
+}
\ No newline at end of file
Index: Server/src/main/java/Server/core/game/node/entity/player/link/quest/QuestRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link.quest;\r\n\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Map.Entry;\r\n\r\n/**\r\n * Manages the systems/players quest repository.\r\n *\r\n * @author Vexia\r\n */\r\npublic final class QuestRepository implements SavingModule {\r\n\r\n    /**\r\n     * The static mapping of instanced quests.\r\n     */\r\n    private static final Map<String, Quest> QUESTS = new HashMap<>();\r\n\r\n    /**\r\n     * The mapping of quest indexes with related stages.\r\n     */\r\n    private final Map<Integer, Integer> quests = new HashMap<>();\r\n\r\n    /**\r\n     * The player instance for this manager.\r\n     */\r\n    private final Player player;\r\n\r\n    /**\r\n     * The current syncronized accumulated quest points.\r\n     */\r\n    private int points;\r\n\r\n    /**\r\n     * Constructs a new {@code QuestRepository} {@code Object}.\r\n     *\r\n     * @param player the player.\r\n     */\r\n    public QuestRepository(final Player player) {\r\n        this.player = player;\r\n        for (Quest quest : QUESTS.values()) {\r\n            quests.put(quest.getIndex(), 0);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void save(ByteBuffer buffer) {\r\n        if (points != 0) {\r\n            buffer.put((byte) 1).putInt(points);\r\n        }\r\n        for (Entry<Integer, Integer> entry : quests.entrySet()) {\r\n            buffer.put((byte) 4).putInt(entry.getKey()).put((byte) ((int) entry.getValue()));\r\n        }\r\n        Map<Integer, Integer> backup = player.getAttribute(\"quest-backup\", null);\r\n        if (backup != null) {\r\n            for (Entry<Integer, Integer> entry : backup.entrySet()) {\r\n                buffer.put((byte) 4).putInt(entry.getKey()).put((byte) ((int) entry.getValue()));\r\n            }\r\n        }\r\n        buffer.put((byte) 0);\r\n    }\r\n\r\n    @Override\r\n    public void parse(ByteBuffer buffer) {\r\n        int opcode;\r\n        int stage = 0;\r\n        int index = 0;\r\n        while ((opcode = buffer.get() & 0xFF) != 0) {\r\n            switch (opcode) {\r\n                case 1:\r\n                    points = buffer.getInt();\r\n                    break;\r\n                case 3:\r\n                    index = buffer.getInt();\r\n                    stage = buffer.getInt();\r\n                    buffer.getInt();//state\r\n                    if (forIndex(index) == null) {\r\n                        //SystemLogger.error(\"[Quest Repository] parsed quest index -> \" + index + \" no quest found!\");\r\n                        break;\r\n                    }\r\n                    quests.put(index, stage);\r\n                    break;\r\n                case 4://new parsing.\r\n                    index = buffer.getInt();\r\n                    stage = buffer.get();\r\n                    if (forIndex(index) == null) {\r\n                        Map<Integer, Integer> backup = player.getAttribute(\"quest-backup\", new HashMap<Integer, Integer>());\r\n                        backup.put(index, stage);\r\n                        player.setAttribute(\"quest-backup\", backup);\r\n                       // SystemLogger.error(\"[Quest Repository] parsed quest index -> \" + index + \" no quest found! Stored in quest data backup for reparse.\");\r\n                        break;\r\n                    }\r\n                    if (!quests.containsKey(index)) {//YOU FORGOT YOUR ! DAMMIT\r\n                        break;\r\n                    }\r\n                    quests.put(index, stage);\r\n                    break;\r\n            }\r\n        }\r\n        syncPoints();\r\n    }\r\n\r\n    /**\r\n     * Syncronizes the quest tab.\r\n     *\r\n     * @param player The player.\r\n     */\r\n    public void syncronizeTab(Player player) {\r\n        player.getConfigManager().set(101, points);\r\n        int[] config = null;\r\n        for (Quest quest : QUESTS.values()) {\r\n            config = quest.getConfig(player, getStage(quest));\r\n            player.getConfigManager().set(config[0], config[1]);\r\n//            System.out.println(quest.getName() + \" - > stage =  \" + getStage(quest) + \" - configs = { \" + config[0] + \" \" + config[1] + \" }\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the stage of a quest.\r\n     *\r\n     * @param quest The quest.\r\n     * @param stage The stage.\r\n     */\r\n    public void setStage(Quest quest, int stage) {\r\n        quests.put(quest.getIndex(), stage);\r\n    }\r\n\r\n    /**\r\n     * Increments the obtained points by the value.\r\n     *\r\n     * @param value the value.\r\n     */\r\n    public void incrementPoints(int value) {\r\n        points += value;\r\n    }\r\n\r\n    /**\r\n     * Decrease the points by the value.\r\n     *\r\n     * @param value the value.\r\n     */\r\n    public void dockPoints(int value) { points -= value; }\r\n\r\n    /**\r\n     * Syncronizes the quest points.\r\n     */\r\n    public void syncPoints() {\r\n        int points = 0;\r\n        for (Quest quest : QUESTS.values()) {\r\n            if (getStage(quest) >= 100) {\r\n                points += quest.getQuestPoints();\r\n            }\r\n        }\r\n        this.points = points;\r\n    }\r\n\r\n    /**\r\n     * Gets the available quest points.\r\n     *\r\n     * @return The availble quest points.\r\n     */\r\n    public int getAvailablePoints() {\r\n        int points = 0;\r\n        for (Quest quest : QUESTS.values()) {\r\n            points += quest.getQuestPoints();\r\n        }\r\n        return points;\r\n    }\r\n\r\n    /**\r\n     * Gets the quest for the button id.\r\n     *\r\n     * @param buttonId The button id.\r\n     * @return The quest.\r\n     */\r\n    public Quest forButtonId(int buttonId) {\r\n        for (Quest q : QUESTS.values()) {\r\n            if (q.getButtonId() == buttonId) {\r\n                return q;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets the quest for the index.\r\n     *\r\n     * @param index The index.\r\n     * @return The quest.\r\n     */\r\n    public Quest forIndex(int index) {\r\n        for (Quest q : QUESTS.values()) {\r\n            if (q.getIndex() == index) {\r\n                return q;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Checks if all quests are completed.\r\n     *\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean hasCompletedAll() {\r\n        return getPoints() >= getAvailablePoints();\r\n    }\r\n\r\n    /**\r\n     * Checks if the quest is complete.\r\n     *\r\n     * @param name The name of the quest.\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean isComplete(String name) {\r\n        Quest quest = getQuest(name);\r\n        if (quest == null) {\r\n            System.err.println(\"Error can't check if quest is complete for \" + name);\r\n            return false;\r\n        }\r\n        return quest.getStage(player) >= 100;\r\n    }\r\n\r\n    /**\r\n     * Gets the stage of quest by name.\r\n     *\r\n     * @param name The name of the quest.\r\n     * @return The stage.\r\n     */\r\n    public int getStage(String name) {\r\n        return getStage(QUESTS.get(name));\r\n    }\r\n\r\n    /**\r\n     * Gets the stage of a quest.\r\n     *\r\n     * @param quest The quest.\r\n     * @return The stage.\r\n     */\r\n    public int getStage(Quest quest) {\r\n        return quests.get(quest.getIndex());\r\n    }\r\n\r\n    /**\r\n     * Gets the quest by name.\r\n     *\r\n     * @param name The name.\r\n     * @return The quest.\r\n     */\r\n    public Quest getQuest(String name) {\r\n        return QUESTS.get(name);\r\n    }\r\n\r\n    /**\r\n     * Gets the points.\r\n     *\r\n     * @return the points.\r\n     */\r\n    public int getPoints() {\r\n        return points;\r\n    }\r\n\r\n    /**\r\n     * Gets the player.\r\n     *\r\n     * @return The player.\r\n     */\r\n    public Player getPlayer() {\r\n        return player;\r\n    }\r\n\r\n    /**\r\n     * Registers the quest to the repository.\r\n     *\r\n     * @param quest The quest.\r\n     */\r\n    public static void register(Quest quest) {\r\n        QUESTS.put(quest.getName(), quest);\r\n    }\r\n\r\n    /**\r\n     * Gets the quest repository.\r\n     *\r\n     * @return the quests.\r\n     */\r\n    public static Map<String, Quest> getQuests() {\r\n        return QUESTS;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/quest/QuestRepository.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/quest/QuestRepository.java	(date 1597089529782)
@@ -2,6 +2,8 @@
 
 import core.game.node.entity.player.Player;
 import core.game.node.entity.player.info.login.SavingModule;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 import java.util.HashMap;
@@ -64,6 +66,16 @@
         buffer.put((byte) 0);
     }
 
+    public void parse(JSONObject questData){
+        points = Integer.parseInt( questData.get("points").toString());
+        JSONArray questArray = (JSONArray) questData.get("questStages");
+        questArray.forEach(quest -> {
+            JSONObject q = (JSONObject) quest;
+            quests.put(Integer.parseInt( q.get("questId").toString()),Integer.parseInt(q.get("questStage").toString()));
+        });
+        syncPoints();
+    }
+
     @Override
     public void parse(ByteBuffer buffer) {
         int opcode;
@@ -291,4 +303,6 @@
         return QUESTS;
     }
 
+    public Map<Integer, Integer> getQuestList() {return quests;}
+
 }
\ No newline at end of file
Index: Server/src/main/java/Server/plugin/activity/duel/StakeContainer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.activity.duel;\r\n\r\nimport core.game.component.Component;\r\nimport core.game.container.Container;\r\nimport core.game.container.ContainerEvent;\r\nimport core.game.container.ContainerListener;\r\nimport core.game.container.ContainerType;\r\nimport core.game.container.SortType;\r\nimport core.game.container.access.InterfaceContainer;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.PlayerParser;\r\nimport core.game.node.item.Item;\r\nimport core.net.packet.PacketRepository;\r\nimport core.net.packet.context.ContainerContext;\r\nimport core.net.packet.out.ContainerPacket;\r\n\r\n/**\r\n * Represents the staking container.\r\n * @author Vexia\r\n *\r\n */\r\npublic class StakeContainer extends Container {\r\n\r\n\t/**\r\n\t * The inventory params.\r\n\t */\r\n\tprivate static final Object[] INVY_PARAMS = new Object[] { \"\", \"\", \"\", \"Stake-X\", \"Stake-All\", \"Stake-10\", \"Stake-5\", \"Stake\", -1, 0, 7, 4, 93, (336 << 16) };\r\n\r\n\t/**\r\n\t * The withdraw options.\r\n\t */\r\n\tprivate static final String[] WITHDRAW_OPTIONS = new String[] { \"Remove-X\", \"Remove-All\", \"Remove-10\", \"Remove-5\", \"Remove\" };\r\n\r\n\t/**\r\n\t * The overlay interface.\r\n\t */\r\n\tpublic static final Component OVERLAY = new Component(336);\r\n\r\n\t/**\r\n\t * The serial version UID.\r\n\t */\r\n\tprivate static final long serialVersionUID = 3454088488966242754L;\r\n\r\n\t/**\r\n\t * The player of the container.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The dueling session.\r\n\t */\r\n\tprivate final DuelSession session;\r\n\r\n\t/**\r\n\t * The stake listener.\r\n\t */\r\n\tprivate final StakeListener listener;\r\n\r\n\t/**\r\n\t * If the container has been released.\r\n\t */\r\n\tprivate boolean released;\r\n\r\n\t/**\r\n\t * Constructs a new {@Code StakeContainer} {@Code Object}\r\n\t * @param player the player.\r\n\t * @param session the session.\r\n\t */\r\n\tpublic StakeContainer(Player player, DuelSession session) {\r\n\t\tsuper(28, ContainerType.DEFAULT, SortType.ID);\r\n\t\tthis.player = player;\r\n\t\tthis.session = session;\r\n\t\tthis.getListeners().add(listener = new StakeListener());\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the staking container.\r\n\t */\r\n\tpublic void open() {\r\n\t\tplayer.getInterfaceManager().openSingleTab(OVERLAY);\r\n\t\tplayer.getPacketDispatch().sendRunScript(150, \"IviiiIssssssss\", INVY_PARAMS);\r\n\t\tplayer.getPacketDispatch().sendAccessMask(1278, 0, 336, 0, 27);\r\n\t\tPacketRepository.send(ContainerPacket.class, new ContainerContext(player, -1, 2, 93, player.getInventory(), false));\r\n\t}\r\n\r\n\t/**\r\n\t * Offers an item to the stake.\r\n\t * @param slot the slot.\r\n\t * @param amount the amount.\r\n\t */\r\n\tpublic void offer(final int slot, int amount) {\r\n\t\tfinal Item item = player.getInventory().get(slot);\r\n\t\tif (item == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ((slot < 0 || slot > player.getInventory().capacity() || amount < 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!item.getDefinition().isTradeable()) {\r\n\t\t\tplayer.sendMessage(\"You can't offer that item.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tItem remove = new Item(item.getId(), amount);\r\n\t\tif (item.getAmount() > getMaximumAdd(item)) {\r\n\t\t\titem.setAmount(getMaximumAdd(item));\r\n\t\t\tif (item.getAmount() < 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tremove.setAmount(amount > player.getInventory().getAmount(item) ? player.getInventory().getAmount(item) : amount);\r\n\t\tif (player.getInventory().remove(remove, slot, true)) {\r\n\t\t\tsession.resetAccept();\r\n\t\t\tadd(remove);\r\n\t\t\tStakeContainer c = session.getOppositeContainer(player);\r\n\t\t\tc.getListener().update(c, c.getEvent());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Withdraws an item from the container.\r\n\t * @param slot the slot.\r\n\t * @param amount the amount.\r\n\t */\r\n\tpublic void withdraw(final int slot, int amount) {\r\n\t\tfinal Item item = get(slot);\r\n\t\tif (item == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ((slot < 0 || slot > player.getInventory().capacity() || amount < 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!item.getDefinition().isTradeable()) {\r\n\t\t\tplayer.sendMessage(\"You can't offer that item.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tItem remove = new Item(item.getId(), amount);\r\n\t\tif (item.getAmount() > getMaximumAdd(item)) {\r\n\t\t\titem.setAmount(getMaximumAdd(item));\r\n\t\t\tif (item.getAmount() < 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tremove.setAmount(amount > getAmount(item) ? getAmount(item) : amount);\r\n\t\tif (remove(remove, slot, true) && player.getInventory().add(remove)) {\r\n\t\t\tsession.resetAccept();\r\n\t\t\tshift();\r\n\t\t\tStakeContainer c = session.getOppositeContainer(player);\r\n\t\t\tc.getListener().update(c, c.getEvent());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Releases the container back to the player.\r\n\t */\r\n\tpublic void release() {\r\n\t\tif (released) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treleased = true;\r\n\t\tif (!player.getInventory().hasSpaceFor(this)) {\r\n\t\t\tplayer.getBank().addAll(this);\r\n\t\t\tplayer.sendMessage(\"Your stake was sent to your bake due to invalid inventory space.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.getInventory().addAll(this);\r\n\t\tPlayerParser.dump(player);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the serialversionuid.\r\n\t * @return the serialversionuid.\r\n\t */\r\n\tpublic static long getSerialversionuid() {\r\n\t\treturn serialVersionUID;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the session.\r\n\t * @return the session.\r\n\t */\r\n\tpublic DuelSession getSession() {\r\n\t\treturn session;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the listener.\r\n\t * @return the listener.\r\n\t */\r\n\tpublic StakeListener getListener() {\r\n\t\treturn listener;\r\n\t}\r\n\r\n\t/**\r\n\t * Represents the container listener for a players stake session.\r\n\t * @author Vexia\r\n\t * \r\n\t */\r\n\tpublic final class StakeListener implements ContainerListener {\r\n\r\n\t\t@Override\r\n\t\tpublic void update(Container c, ContainerEvent event) {\r\n\t\t\tInterfaceContainer.generateItems(player, c.toArray(), WITHDRAW_OPTIONS, 631, 103, 12, 3);\r\n\t\t\tInterfaceContainer.generateItems(player, session.getOppositeContainer(player).toArray(), WITHDRAW_OPTIONS, 631, 104, 12, 3);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic void refresh(Container c) {\r\n\t\t\tPacketRepository.send(ContainerPacket.class, new ContainerContext(player, -1, 2, 93, player.getInventory(), false));\r\n\t\t}\r\n\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/activity/duel/StakeContainer.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/activity/duel/StakeContainer.java	(date 1597089529796)
@@ -163,7 +163,7 @@
 			return;
 		}
 		player.getInventory().addAll(this);
-		PlayerParser.dump(player);
+		PlayerParser.save(player);
 	}
 
 	/**
Index: Server/src/main/java/Server/plugin/activity/duel/DuelSession.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.activity.duel;\r\n\r\nimport java.text.DecimalFormat;\r\n\r\nimport core.game.component.CloseEvent;\r\nimport core.game.component.Component;\r\nimport core.game.component.ComponentDefinition;\r\nimport core.game.component.ComponentPlugin;\r\nimport core.game.container.Container;\r\nimport core.game.container.ContainerType;\r\nimport core.game.container.access.InterfaceContainer;\r\nimport core.game.container.impl.EquipmentContainer;\r\nimport core.game.content.global.action.EquipHandler;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.PlayerParser;\r\nimport core.game.node.entity.player.link.RunScript;\r\nimport core.game.node.entity.state.EntityState;\r\nimport core.game.node.item.Item;\r\nimport core.game.system.config.ItemConfigParser;\r\nimport core.game.system.monitor.PlayerMonitor;\r\nimport core.plugin.Plugin;\r\nimport core.tools.RandomFunction;\r\n\r\n/**\r\n * Represents a duel session.\r\n * @author Emperor\r\n * @author Vexia\r\n * \r\n */\r\npublic final class DuelSession extends ComponentPlugin {\r\n\r\n\t/**\r\n\t * The friendly rules interface.\r\n\t */\r\n\tprivate static final Component FRIENDLY_INTER = new Component(637).setCloseEvent(new CloseEvent() {\r\n\t\t@Override\r\n\t\tpublic boolean close(Player player, Component c) {\r\n\t\t\tdecline(player);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * The staked rules interface.\r\n\t */\r\n\tprivate static final Component STAKED_INTER = new Component(631).setCloseEvent(new CloseEvent() {\r\n\t\t@Override\r\n\t\tpublic boolean close(Player player, Component c) {\r\n\t\t\tdecline(player);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * The friendly rule interface.\r\n\t */\r\n\tprivate static final Component FRIENDLY_RULE_INTER = new Component(639).setCloseEvent(new CloseEvent() {\r\n\t\t@Override\r\n\t\tpublic boolean close(Player player, Component c) {\r\n\t\t\tdecline(player);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * The staked rule interface.\r\n\t */\r\n\tprivate static final Component STAKED_RULE_INTER = new Component(626).setCloseEvent(new CloseEvent() {\r\n\t\t@Override\r\n\t\tpublic boolean close(Player player, Component c) {\r\n\t\t\tdecline(player);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * The friendly victory interface.\r\n\t */\r\n\tprivate static final Component FRIENDLY_VICTORY = new Component(633);\r\n\r\n\t/**\r\n\t * The stake victory.\r\n\t */\r\n\tprivate static final Component STAKE_VICTORY = new Component(634).setCloseEvent(new CloseEvent() {\r\n\t\t@Override\r\n\t\tpublic boolean close(Player player, Component c) {\r\n\t\t\treward(player);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * The rules.\r\n\t */\r\n\tprivate final DuelRule[] rules = new DuelRule[DuelRule.values().length];\r\n\r\n\t/**\r\n\t * The players staked container.\r\n\t */\r\n\tprivate StakeContainer playerContainer;\r\n\r\n\t/**\r\n\t * The targets staked container.\r\n\t */\r\n\tprivate StakeContainer targetContainer;\r\n\r\n\t/**\r\n\t * The first player.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The second player.\r\n\t */\r\n\tprivate final Player other;\r\n\r\n\t/**\r\n\t * If this is a staked duel.\r\n\t */\r\n\tprivate final boolean staked;\r\n\r\n\t/**\r\n\t * The accepting state of the session.\r\n\t */\r\n\tprivate int acceptState;\r\n\r\n\t/**\r\n\t * The fight state (0 not started, 1 started, 2 finished)\r\n\t */\r\n\tprivate int fightState;\r\n\r\n\t/**\r\n\t * Constructs a new {@code DuelSession} {@code Object}.\r\n\t * @param player The first player.\r\n\t * @param other The second player.\r\n\t */\r\n\tpublic DuelSession(Player player, Player other, boolean staked) {\r\n\t\tthis.player = player;\r\n\t\tthis.other = other;\r\n\t\tthis.staked = staked;\r\n\t}\r\n\r\n\t/**\r\n\t * Declines the duel.\r\n\t * @param player The player declining.\r\n\t */\r\n\tpublic static void decline(Player player) {\r\n\t\tDuelSession session = player.getExtension(DuelSession.class);\r\n\t\tif (session == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (session.getAcceptState() == 3 || session.getAcceptState() == 7) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (session.isStaked()) {\r\n\t\t\tsession.getPlayerContainer().release();\r\n\t\t\tsession.getTargetContainer().release();\r\n\t\t\tsession.resetAccept();\r\n\t\t}\r\n\t\tsession.player.removeExtension(DuelSession.class);\r\n\t\tsession.other.removeExtension(DuelSession.class);\r\n\t\tsession.end();\r\n\t\tif (player == session.other) {\r\n\t\t\tsession.player.getPacketDispatch().sendMessage(\"Other player declined \" + (session.staked ? \"stake and \" : \"\") + \"duel options.\");\r\n\t\t} else {\r\n\t\t\tsession.other.getPacketDispatch().sendMessage(\"Other player declined \" + (session.staked ? \"stake and \" : \"\") + \"duel options.\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Ends the session.\r\n\t */\r\n\tpublic void end() {\r\n\t\tplayer.removeAttribute(\"duel:partner\");\r\n\t\tother.removeAttribute(\"duel:partner\");\r\n\t\tplayer.removeAttribute(\"duel:staked\");\r\n\t\tother.removeAttribute(\"duel:staked\");\r\n\t\tother.removeAttribute(\"duel:forfeit\");\r\n\t\tplayer.removeAttribute(\"duel:forfeit\");\r\n\t\tplayer.getInterfaceManager().close();\r\n\t\tplayer.getInterfaceManager().closeSingleTab();\r\n\t\tplayer.getInterfaceManager().restoreTabs();\r\n\t\tother.getInterfaceManager().close();\r\n\t\tother.getInterfaceManager().closeSingleTab();\r\n\t\tother.getInterfaceManager().restoreTabs();\r\n\t\tother.getLocks().unlockMovement();\r\n\t\tplayer.getLocks().unlockMovement();\r\n\t\tplayer.getHintIconManager().clear();\r\n\t\tother.getHintIconManager().clear();\r\n\t\theal(player);\r\n\t\theal(other);\r\n\t\tfor (DuelRule rule : rules) {\r\n\t\t\tif (rule != null) {\r\n\t\t\t\tplayer.getLocks().unlock(rule.name().toLowerCase(), true, player);\r\n\t\t\t\tother.getLocks().unlock(rule.name().toLowerCase(), true, other);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Heals a player after a duel.\r\n\t * @param p the player.\r\n\t */\r\n\tpublic void heal(Player p) {\r\n\t\tp.fullRestore();\r\n\t\tif (p.getStateManager().hasState(EntityState.POISONED)) {\r\n\t\t\tp.getStateManager().remove(EntityState.POISONED);\r\n\t\t}\r\n\t\tp.getSkills().restore();\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the rules interface.\r\n\t */\r\n\tpublic void openRules() {\r\n\t\tplayer.setAttribute(\"duel:partner\", other);\r\n\t\tother.setAttribute(\"duel:partner\", player);\r\n\t\tplayer.setAttribute(\"duel:staked\", staked);\r\n\t\tother.setAttribute(\"duel:staked\", staked);\r\n\t\tplayer.removeAttribute(\"duel:accepted\");\r\n\t\tother.removeAttribute(\"duel:accepted\");\r\n\t\topenRules(player, other);\r\n\t\topenRules(other, player);\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the rules for a player.\r\n\t * @param player The player.\r\n\t */\r\n\tprivate void openRules(Player player, Player opponent) {\r\n\t\tplayer.getConfigManager().set(286, 0);\r\n\t\tif (staked) {\r\n\t\t\tStakeContainer container = new StakeContainer(player, this);\r\n\t\t\tif (player == this.player) {\r\n\t\t\t\tplayerContainer = container;\r\n\t\t\t} else {\r\n\t\t\t\ttargetContainer = container;\r\n\t\t\t}\r\n\t\t\tplayer.getInterfaceManager().open(STAKED_INTER);\r\n\t\t\tplayer.getPacketDispatch().sendString(opponent.getUsername(), 631, 25);\r\n\t\t\tplayer.getPacketDispatch().sendString(Integer.toString(opponent.getProperties().getCurrentCombatLevel()), 631, 27);\r\n\t\t\tplayer.getPacketDispatch().sendString(\"\", 631, 28);\r\n\t\t\tcontainer.open();\r\n\t\t} else {\r\n\t\t\tplayer.getInterfaceManager().open(FRIENDLY_INTER);\r\n\t\t\tplayer.getPacketDispatch().sendString(opponent.getUsername(), 637, 16);\r\n\t\t\tplayer.getPacketDispatch().sendString(Integer.toString(opponent.getProperties().getCurrentCombatLevel()), 637, 18);\r\n\t\t\tplayer.getPacketDispatch().sendString(\"\", 637, 45);\r\n\t\t}\r\n\t\tplayer.getConfigManager().set(286, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the leaving of a player from the duel area.\r\n\t * @param p the player who is forced to leave.\r\n\t * @param type = the type of leaving (0 forfeit, 1 = logout, 2 win)\r\n\t */\r\n\tpublic void leave(Player p, int type) {\r\n\t\tif (fightState == 2) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPlayer o = getOpposite(p);\r\n\t\to.getImpactHandler().setDisabledTicks(6);\r\n\t\to.teleport(RandomFunction.getRandomElement(DuelArea.RESPAWN_LOCATIONS));\r\n\t\tboolean victory = type == 0 || type == 2 || type == 1 && p.getImpactHandler().getImpactLog().containsKey(o);\r\n\t\tfightState = 2;\r\n\t\tp.removeExtension(DuelSession.class);\r\n\t\tend();\r\n\t\tif (victory) {\r\n\t\t\tif (type == 0) {\r\n\t\t\t\to.sendMessage(\"Well done! \" + p.getUsername() + \" resigned!\");\r\n\t\t\t} else if (type == 2) {\r\n\t\t\t\to.sendMessage(\"Well done! You have defeated \" + p.getUsername() + \"!\");\r\n\t\t\t}\r\n\t\t\tvictory(o);\r\n\t\t} else if (type == 1) {\r\n\t\t\tgetContainer(player).release();\r\n\t\t\tgetContainer(o).release();\r\n\t\t\to.removeExtension(DuelSession.class);\r\n\t\t\to.getDialogueInterpreter().sendDialogue(\"Your opponent timed out, there was no winner!\");\r\n\t\t}\r\n\t\tDuelArenaActivity.insertEntry(o, p);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the victory for a player.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void victory(Player player) {\r\n\t\tComponent component = staked ? STAKE_VICTORY : FRIENDLY_VICTORY;\r\n\t\tplayer.getInterfaceManager().open(component);\r\n\t\tplayer.getPacketDispatch().sendString(getOpposite(player).getUsername(), component.getId(), staked ? 23 : 22);\r\n\t\tplayer.getPacketDispatch().sendString(Integer.toString(getOpposite(player).getProperties().getCurrentCombatLevel()), component.getId(), staked ? 22 : 21);\r\n\t\tif (staked) {\r\n\t\t\tgetContainer(player).release();\r\n\t\t\tStakeContainer targetContainer = getOppositeContainer(player);\r\n\t\t\tif (targetContainer.itemCount() > 0) {\r\n\t\t\t\tInterfaceContainer.generateItems(player, targetContainer.toArray(), new String[] { \"Examine\" }, 634, 33);\r\n\t\t\t}\r\n\t\t\tContainer c = new Container(28, ContainerType.ALWAYS_STACK);\r\n\t\t\tc.addAll(targetContainer);\r\n\t\t\tString log = \"defeated => \" + getOpposite(player).getName() + \" and receieved {\";\r\n\t\t\tfor (Item i : c.toArray()) {\r\n\t\t\t\tif (i == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlog += i.getName() + \" x \" + i.getAmount() + \",\";\r\n\t\t\t}\r\n\t\t\tif (log.charAt(log.length() - 1) == ',') {\r\n\t\t\t\tlog = log.substring(0, log.length() - 1);\r\n\t\t\t}\r\n\t\t\tlog += \"}\";\r\n\t\t\tplayer.getMonitor().log(log, PlayerMonitor.DUEL_LOG);\r\n\t\t} else {\r\n\t\t\tplayer.removeExtension(DuelSession.class);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Rewards the player.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic static void reward(Player player) {\r\n\t\tDuelSession session = player.getExtension(DuelSession.class);\r\n\t\tif (session == null || session.getFightState() == 4) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tStakeContainer targetContainer = session.getOppositeContainer(player);\r\n\t\tif (!player.getInventory().hasSpaceFor(targetContainer)) {\r\n\t\t\tplayer.getBank().addAll(targetContainer);\r\n\t\t\tplayer.sendMessage(\"An error occured & the stake transfered to your bank.\");\r\n\t\t} else {\r\n\t\t\tsession.setFightState(4);\r\n\t\t\tplayer.getInventory().addAll(targetContainer);\r\n\t\t}\r\n\t\tplayer.removeExtension(DuelSession.class);\r\n\t\tPlayerParser.dump(player);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the accepting of the dule rules.\r\n\t */\r\n\tprivate void accept() {\r\n\t\tDuelSession session = player.getExtension(DuelSession.class);\r\n\t\tif (session == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tswitch (session.getAcceptState()) {\r\n\t\tcase 2:\r\n\t\t\tif (!session.checkRules(session.player) || !session.checkRules(session.other)) {\r\n\t\t\t\tresetAccept();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsession.player.lock(1);\r\n\t\t\tsession.other.lock(1);\r\n\t\t\tsession.setAcceptState(3);\r\n\t\t\tsession.player.removeAttribute(\"duel:accepted\");\r\n\t\t\tsession.other.removeAttribute(\"duel:accepted\");\r\n\t\t\tsession.other.getInterfaceManager().open(session.isStaked() ? STAKED_RULE_INTER : FRIENDLY_RULE_INTER);\r\n\t\t\tsession.player.getInterfaceManager().open(session.isStaked() ? STAKED_RULE_INTER : FRIENDLY_RULE_INTER);\r\n\t\t\tsession.setAcceptState(4);\r\n\t\t\tsession.player.getInterfaceManager().closeSingleTab();\r\n\t\t\tsession.other.getInterfaceManager().closeSingleTab();\r\n\t\t\tsession.player.getInterfaceManager().hideTabs(0, 1, 2, 3, 4, 5, 6, 7, 11, 12);\r\n\t\t\tsession.other.getInterfaceManager().hideTabs(0, 1, 2, 3, 4, 5, 6, 7, 11, 12);\r\n\t\t\tStringBuilder before = new StringBuilder();\r\n\t\t\tStringBuilder during = new StringBuilder();\r\n\t\t\tif (hasEquipmentRules()) {\r\n\t\t\t\tbefore.append(\"Some worn items will be taken off.<br>\");\r\n\t\t\t}\r\n\t\t\tif (hasRule(DuelRule.NO_WEAPON) || hasRule(DuelRule.NO_SHIELD)) {\r\n\t\t\t\tduring.append(\"You can't use 2H weapons such as bows.<br>\");\r\n\t\t\t}\r\n\t\t\tif (hasRule(DuelRule.NO_DRINKS) || hasRule(DuelRule.NO_FOOD)) {\r\n\t\t\t\tbefore.append(\"Boosted stats will be restored.<br>\");\r\n\t\t\t}\r\n\t\t\tif (hasRule(DuelRule.NO_PRAYER)) {\r\n\t\t\t\tbefore.append(\"Existing prayers will be stopped.<br>\");\r\n\t\t\t}\r\n\t\t\tif (before.length() == 0) {\r\n\t\t\t\tbefore.append(\"Nothing will be changed.<br>\");\r\n\t\t\t}\r\n\t\t\tif (during.length() == 0) {\r\n\t\t\t\tduring.append(\"You will fight using normal combat.<br>\");\r\n\t\t\t}\r\n\t\t\tfor (DuelRule rule : rules) {\r\n\t\t\t\tif (rule != null && rule.getEquipmentSlot() == -1) {\r\n\t\t\t\t\tduring.append(rule.getInfo() + \"<br>\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tint interfaceId = session.isStaked() ? 626 : 639;\r\n\t\t\tint[] childs = staked ? new int[] { 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 } : new int[] { 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 };\r\n\t\t\tclearChilds(session.player, interfaceId, childs);\r\n\t\t\tclearChilds(session.other, interfaceId, childs);\r\n\t\t\tString[] tokens = before.toString().split(\"<br>\");\r\n\t\t\tfor (int i = 0; i < tokens.length; i++) {\r\n\t\t\t\tsession.player.getPacketDispatch().sendString(tokens[i], interfaceId, staked ? (28 + i) : (16 + i));\r\n\t\t\t\tsession.other.getPacketDispatch().sendString(tokens[i], interfaceId, staked ? (28 + i) : (16 + i));\r\n\t\t\t}\r\n\t\t\ttokens = during.toString().split(\"<br>\");\r\n\t\t\tfor (int i = 0; i < tokens.length; i++) {\r\n\t\t\t\tsession.player.getPacketDispatch().sendString(tokens[i], interfaceId, staked ? (34 + i) : (22 + i));\r\n\t\t\t\tsession.other.getPacketDispatch().sendString(tokens[i], interfaceId, staked ? (34 + i) : (22 + i));\r\n\t\t\t}\r\n\t\t\tif (staked) {\r\n\t\t\t\tsession.player.getPacketDispatch().sendString(session.getContainer(player).isEmpty() ? \"Absolutely nothing!\" : getDisplayMessage(session.getContainer(player).toArray()), 626, 25);\r\n\t\t\t\tsession.player.getPacketDispatch().sendString(session.getOppositeContainer(player).isEmpty() ? \"Absolutely nothing!\" : getDisplayMessage(session.getOppositeContainer(player).toArray()), 626, 26);\r\n\t\t\t\tsession.other.getPacketDispatch().sendString(session.getOppositeContainer(player).isEmpty() ? \"Absolutely nothing!\" : getDisplayMessage(session.getOppositeContainer(player).toArray()), 626, 25);\r\n\t\t\t\tsession.other.getPacketDispatch().sendString(session.getOppositeContainer(other).isEmpty() ? \"Absolutely nothing!\" : getDisplayMessage(session.getOppositeContainer(other).toArray()), 626, 26);\r\n\t\t\t}\r\n\t\t\tsession.updateToolTip(player, \"\");\r\n\t\t\tsession.updateToolTip(getOpposite(player), \"\");\r\n\t\t\tbreak;\r\n\t\tcase 6:\r\n\t\t\tsession.player.lock(2);\r\n\t\t\tsession.other.lock(2);\r\n\t\t\tsession.player.sendMessage(\"Accepted stake and duel options.\");\r\n\t\t\tsession.other.sendMessage(\"Accepted stake and duel options.\");\r\n\t\t\tsession.setAcceptState(7);\r\n\t\t\tDuelArenaActivity.getDuelArea(hasRule(DuelRule.OBSTACLES)).duel(this);\r\n\t\t\tsession.applyRules(session.player);\r\n\t\t\tsession.applyRules(session.other);\r\n\t\t\tsession.setAcceptState(8);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the rules to a player.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void applyRules(Player player) {\r\n\t\tfor (DuelRule rule : rules) {\r\n\t\t\tif (rule != null) {\r\n\t\t\t\tif (rule.getEquipmentSlot() != -1 && player.getEquipment().get(rule.getEquipmentSlot()) != null) {\r\n\t\t\t\t\tEquipHandler.unequip(player, rule.getEquipmentSlot(), player.getEquipment().getId(rule.getEquipmentSlot()));\r\n\t\t\t\t}\r\n\t\t\t\tplayer.getLocks().lock(rule.name().toLowerCase(), 100000);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (hasRule(DuelRule.NO_SHIELD)) {\r\n\t\t\tItem i = player.getEquipment().get(EquipmentContainer.SLOT_WEAPON);\r\n\t\t\tif (i != null && i.getDefinition().getConfiguration(ItemConfigParser.TWO_HANDED, false)) {\r\n\t\t\t\tEquipHandler.unequip(player, EquipmentContainer.SLOT_WEAPON, i.getId());\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (hasRule(DuelRule.NO_DRINKS) || hasRule(DuelRule.NO_FOOD)) {\r\n\t\t\tplayer.getSkills().restore();\r\n\t\t}\r\n\t\tif (hasRule(DuelRule.NO_PRAYER)) {\r\n\t\t\tplayer.getPrayer().reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a rule.\r\n\t * @param p The player toggling the rule.\r\n\t * @param index The rule index.\r\n\t */\r\n\tprivate void toggleRule(Player p, int index) {\r\n\t\tDuelSession session = player.getExtension(DuelSession.class);\r\n\t\tif (session == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsession.resetAccept();\r\n\t\tif (rules[index] != null) {\r\n\t\t\trules[index] = null;\r\n\t\t} else {\r\n\t\t\tif (index < 3) {\r\n\t\t\t\tint count = 0;\r\n\t\t\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\t\t\tif (rules[i] != null) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (count == 2) {\r\n\t\t\t\t\tsession.updateToolTip(player, \"You can't have No Ranged, No Melee AND No Magic, how would you fight?\");\r\n\t\t\t\t\tp.getPacketDispatch().sendMessage(\"You can't have No Ranged, No Melee AND No Magic, how would you fight?\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} else if ((index == 8 && rules[9] != null) || (index == 9 && rules[8] != null)) {\r\n\t\t\t\trules[8] = rules[9] = null;\r\n\t\t\t\tp.getPacketDispatch().sendMessage(index == 8 ? \"You can't have obstacles if you want No Movement.\" : \"You can't have No Movement in an area with obstacles.\");\r\n\t\t\t}\r\n\t\t\tif (index == 15 || index == 16) {\r\n\t\t\t\tplayer.sendMessage(\"Beware: You won't be able to use two-handed weapons such as bows.\");\r\n\t\t\t}\r\n\t\t\trules[index] = DuelRule.values()[index];\r\n\t\t}\r\n\t\tint value = 0;\r\n\t\tfor (int i = 0; i < rules.length; i++) {\r\n\t\t\tif (rules[i] != null) {\r\n\t\t\t\tvalue |= 1 << rules[i].getConfigIndex();\r\n\t\t\t}\r\n\t\t}\r\n\t\tplayer.getConfigManager().set(286, value);\r\n\t\tother.getConfigManager().set(286, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks the current rules for restrictions.\r\n\t */\r\n\tprivate boolean checkRules(Player player) {\r\n\t\tContainer c = new Container(60);\r\n\t\tfor (DuelRule rule : rules) {\r\n\t\t\tif (rule != null && rule.getEquipmentSlot() != -1 && player.getEquipment().get(rule.getEquipmentSlot()) != null) {\r\n\t\t\t\tc.add(player.getEquipment().get(rule.getEquipmentSlot()));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (hasRule(DuelRule.FUN_WEAPONS) && !hasFunWeapon(player)) {\r\n\t\t\tupdateToolTip(player, \"Fun Weapons is selected but you don't have a 'fun weapon'.\");\r\n\t\t\tupdateToolTip(getOpposite(player), \"Fun Weapons is selected but your opponent does not have a 'fun weapon'.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (staked) {\r\n\t\t\tc.addAll(getContainer(player));\r\n\t\t\tc.addAll(getOppositeContainer(player));\r\n\t\t}\r\n\t\tif (!player.getInventory().hasSpaceFor(c)) {\r\n\t\t\tupdateToolTip(player, \"You do not have enough space for the items removed and/or the stake.\");\r\n\t\t\tupdateToolTip(getOpposite(player), \"Your opponent does not have enough space for the items removed and/or the stake.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean handle(Player player, Component component, int opcode, int button, final int slot, int itemId) {\r\n\t\tDuelSession session = player.getExtension(DuelSession.class);\r\n\t\tif (session == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tswitch (component.getId()) {\r\n\t\tcase 626:// stake rules\r\n\t\t\tif (button == 53) {\r\n\t\t\t\trequestAccept(player, component);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 639:// friendly rules\r\n\t\t\tif (button == 35) {\r\n\t\t\t\trequestAccept(player, component);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 631:\r\n\t\t\tif (button == 107) {// decline\r\n\t\t\t\tdecline(player);\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (button == 102) {\r\n\t\t\t\trequestAccept(player, component);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tfinal StakeContainer c = session.getContainer(player);\r\n\t\t\tif (button == 103) {\r\n\t\t\t\tint amount = 0;\r\n\t\t\t\tswitch (opcode) {\r\n\t\t\t\tcase 155:\r\n\t\t\t\t\tamount = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 196:\r\n\t\t\t\t\tamount = 5;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 124:\r\n\t\t\t\t\tamount = 10;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 199:\r\n\t\t\t\t\tamount = c.getAmount(c.get(slot));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 234:\r\n\t\t\t\t\tplayer.setAttribute(\"runscript\", new RunScript() {\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic boolean handle() {\r\n\t\t\t\t\t\t\tc.withdraw(slot, (int) getValue());\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tplayer.getDialogueInterpreter().sendInput(false, \"Enter the amount:\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tc.withdraw(slot, amount);\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (button == 104) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (button == 107) {\r\n\t\t\t\tplayer.getInterfaceManager().close();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (button >= 57 && button <= 67) {\r\n\t\t\t\tint index = 12 + ((57 - button) * -1);\r\n\t\t\t\tif (button == 60) {\r\n\t\t\t\t\tindex = DuelRule.values().length - 1;\r\n\t\t\t\t} else if (button == 61) {\r\n\t\t\t\t\tindex = 15;\r\n\t\t\t\t} else if (button == 62) {\r\n\t\t\t\t\tindex = DuelRule.NO_BODY.ordinal();\r\n\t\t\t\t} else if (button == 63) {\r\n\t\t\t\t\tindex = DuelRule.NO_SHIELD.ordinal();\r\n\t\t\t\t} else if (button == 64) {\r\n\t\t\t\t\tindex = DuelRule.NO_LEGS.ordinal();\r\n\t\t\t\t} else if (button == 67) {\r\n\t\t\t\t\tindex = DuelRule.NO_GLOVES.ordinal();\r\n\t\t\t\t} else if (button == 66) {\r\n\t\t\t\t\tindex = DuelRule.NO_BOOTS.ordinal();\r\n\t\t\t\t}\r\n\t\t\t\tsession.toggleRule(player, index);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (button >= 29 && button <= 53) {\r\n\t\t\t\tif (button > 49) {\r\n\t\t\t\t\tbutton--;\r\n\t\t\t\t}\r\n\t\t\t\tint index = (button - 29) / 2;\r\n\t\t\t\tif (index == 11) {\r\n\t\t\t\t\tindex = 10;\r\n\t\t\t\t} else if (index == 10) {\r\n\t\t\t\t\tindex = 11;\r\n\t\t\t\t}\r\n\t\t\t\tsession.toggleRule(player, index);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\tcase 637:\r\n\t\t\tif (button == 86) {\r\n\t\t\t\tplayer.getInterfaceManager().close();\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (button == 83 && session.acceptState < 2) {\r\n\t\t\t\trequestAccept(player, component);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (button >= 46 && button <= 56) {\r\n\t\t\t\tint index = 0;\r\n\t\t\t\tswitch (button) {\r\n\t\t\t\tcase 46:\r\n\t\t\t\t\tindex = DuelRule.NO_HATS.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 47:\r\n\t\t\t\t\tindex = DuelRule.NO_CAPES.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 48:\r\n\t\t\t\t\tindex = DuelRule.NO_AMULET.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 49:\r\n\t\t\t\t\tindex = DuelRule.NO_ARROWS.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 50:\r\n\t\t\t\t\tindex = DuelRule.NO_WEAPON.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 51:\r\n\t\t\t\t\tindex = DuelRule.NO_BODY.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 52:\r\n\t\t\t\t\tindex = DuelRule.NO_SHIELD.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 53:\r\n\t\t\t\t\tindex = DuelRule.NO_LEGS.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 54:\r\n\t\t\t\t\tindex = DuelRule.NO_RINGS.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 55:\r\n\t\t\t\t\tindex = DuelRule.NO_BOOTS.ordinal();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 56:\r\n\t\t\t\t\tindex = DuelRule.NO_GLOVES.ordinal();\r\n\t\t\t\t}\r\n\t\t\t\tsession.toggleRule(player, index);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (button >= 19 && button <= 42) {\r\n\t\t\t\tsession.toggleRule(player, (button - 19) / 2);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\tcase 336:\r\n\t\t\tfinal StakeContainer c1 = player == session.getPlayer() ? session.getPlayerContainer() : session.getTargetContainer();\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 155:\r\n\t\t\t\tc1.offer(slot, 1);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 196:\r\n\t\t\t\tc1.offer(slot, 5);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 124:\r\n\t\t\t\tc1.offer(slot, 10);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 199:\r\n\t\t\t\tc1.offer(slot, player.getInventory().getAmount(player.getInventory().get(slot).getId()));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 234:\r\n\t\t\t\tplayer.setAttribute(\"runscript\", new RunScript() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic boolean handle() {\r\n\t\t\t\t\t\tc1.offer(slot, (int) getValue());\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tplayer.getDialogueInterpreter().sendInput(false, \"Enter the amount:\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tplayer.getPacketDispatch().sendMessage(player.getInventory().get(slot).getDefinition().getExamine());\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Plugin<Object> newInstance(Object arg) throws Throwable {\r\n\t\tComponentDefinition.put(631, this);\r\n\t\tComponentDefinition.put(637, this);\r\n\t\tComponentDefinition.put(626, this);\r\n\t\tComponentDefinition.put(639, this);\r\n\t\tStakeContainer.OVERLAY.setPlugin(this);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Requests an accepting of the duel.\r\n\t * @param player the player.\r\n\t * @param component the component.\r\n\t */\r\n\tpublic void requestAccept(Player player, Component component) {\r\n\t\tDuelSession session = player.getExtension(DuelSession.class);\r\n\t\tif (session == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// 1 & 5 are waiing.\r\n\t\t// 2 & 6 are completed\r\n\t\tif (session.getAcceptState() == (session.getAcceptState() < 3 ? 1 : 5) && session.getOpposite(player).getAttribute(\"duel:accepted\", false)) {\r\n\t\t\tsession.setAcceptState(session.getAcceptState() == 1 ? 2 : 6);\r\n\t\t\tsession.accept();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (session.getAcceptState() == 0 || session.getAcceptState() == 4) {\r\n\t\t\tsession.setAcceptState(session.getAcceptState() == 0 ? 1 : 5);\r\n\t\t\tplayer.setAttribute(\"duel:accepted\", true);\r\n\t\t\tsession.updateToolTip(player, \"Waiting for other player...\");\r\n\t\t\tsession.updateToolTip(session.getOpposite(player), \"Other player accepted.\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the accept state.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void resetAccept() {\r\n\t\tsetAcceptState(getAcceptState() < 3 ? 0 : 4);\r\n\t\tplayer.removeAttribute(\"duel:accepted\");\r\n\t\tother.removeAttribute(\"duel:accepted\");\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the childs.\r\n\t * @param childs the childs.\r\n\t */\r\n\tpublic void clearChilds(Player player, int interfaceId, int... childs) {\r\n\t\tfor (int i : childs) {\r\n\t\t\tplayer.getPacketDispatch().sendString(\"\", interfaceId, i);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tool tip message.\r\n\t * @param player the player.\r\n\t * @param child the child.\r\n\t * @param message the message.\r\n\t */\r\n\tprivate void updateToolTip(Player player, String message) {\r\n\t\tDuelSession session = player.getExtension(DuelSession.class);\r\n\t\tif (session == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint interfaceId = 631;\r\n\t\tint child = 28;\r\n\t\tif (!staked) {\r\n\t\t\tinterfaceId = acceptState < 4 ? FRIENDLY_INTER.getId() : FRIENDLY_RULE_INTER.getId();\r\n\t\t\tchild = acceptState < 4 ? 45 : 33;\r\n\t\t} else if (acceptState > 3) {\r\n\t\t\tinterfaceId = STAKED_RULE_INTER.getId();\r\n\t\t\tchild = 45;\r\n\t\t}\r\n\t\tplayer.getPacketDispatch().sendString(message, interfaceId, child);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the display message for the stake.\r\n\t * @param items the items.\r\n\t * @return the message.\r\n\t */\r\n\tprivate String getDisplayMessage(Item[] items) {\r\n\t\tString message = \"Absolutely nothing!\";\r\n\t\tif (items.length > 0) {\r\n\t\t\tmessage = \"\";\r\n\t\t\tfor (int i = 0; i < items.length; i++) {\r\n\t\t\t\tif (items[i] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tmessage = message + \"<col=FF9040>\" + items[i].getName();\r\n\t\t\t\tif (items[i].getAmount() > 1) {\r\n\t\t\t\t\tmessage = message + \"<col=FFFFFF> x \";\r\n\t\t\t\t\tmessage = message + \"<col=FFFF00>\" + getFormattedNumber(items[i].getAmount()) + \"<br>\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage = message + \"<br>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn message;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has a fun weapon.\r\n\t * @param player the player.\r\n\t * @return <code>True</code>\r\n\t */\r\n\tpublic boolean hasFunWeapon(Player player) {\r\n\t\tContainer c = new Container(60);\r\n\t\tc.addAll(player.getInventory());\r\n\t\tc.addAll(player.getEquipment());\r\n\t\tfor (Item item : c.toArray()) {\r\n\t\t\tif (item == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (item.getDefinition().getConfiguration(\"fun_weapon\", false)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the item is restricted equipment.\r\n\t * @param item the item.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isRestrictedEquipment(Item item) {\r\n\t\tif (item == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tint slot = item.getDefinition().getConfiguration(ItemConfigParser.EQUIP_SLOT, -1);\r\n\t\tif (slot == -1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tboolean twoHanded = item.getDefinition().getConfiguration(ItemConfigParser.TWO_HANDED, false);\r\n\t\tif (slot == EquipmentContainer.SLOT_WEAPON && twoHanded && hasRule(DuelRule.NO_SHIELD)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (DuelRule rule : rules) {\r\n\t\t\tif (rule == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (rule.getEquipmentSlot() == slot) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this session has equipment rules applied.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasEquipmentRules() {\r\n\t\tfor (DuelRule rule : rules) {\r\n\t\t\tif (rule != null && rule.ordinal() >= DuelRule.NO_HATS.ordinal()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a rule is active.\r\n\t * @param r the rule.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasRule(DuelRule r) {\r\n\t\treturn rules[r.ordinal()] != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the opposite container.\r\n\t * @param player the player.\r\n\t * @return the container.\r\n\t */\r\n\tpublic StakeContainer getOppositeContainer(Player player) {\r\n\t\treturn player == this.player ? targetContainer : playerContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the players container.\r\n\t * @param player the player.\r\n\t * @return the staked container.\r\n\t */\r\n\tpublic StakeContainer getContainer(Player player) {\r\n\t\treturn player == this.player ? playerContainer : targetContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the formatted number.\r\n\t * @param amount the amount.\r\n\t * @return the formatted number.\r\n\t */\r\n\tprivate String getFormattedNumber(int amount) {\r\n\t\treturn new DecimalFormat(\"#,###,##0\").format(amount).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the rule size.\r\n\t * @return the amount of active rules.\r\n\t */\r\n\tpublic int getRuleSize() {\r\n\t\tint count = 0;\r\n\t\tfor (DuelRule rule : rules) {\r\n\t\t\tif (rule != null) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the opposite.\r\n\t * @param player the player.\r\n\t * @return the player.\r\n\t */\r\n\tpublic Player getOpposite(Player player) {\r\n\t\treturn this.player == player ? other : this.player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the other player.\r\n\t * @param player the player.\r\n\t * @return the player.\r\n\t */\r\n\tpublic Player getOther(Player player) {\r\n\t\treturn player == this.player ? other : player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the rules.\r\n\t * @return The rules.\r\n\t */\r\n\tpublic DuelRule[] getRules() {\r\n\t\treturn rules;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the playerContainer.\r\n\t * @return the playerContainer.\r\n\t */\r\n\tpublic StakeContainer getPlayerContainer() {\r\n\t\treturn playerContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the playerContainer.\r\n\t * @param playerContainer the playerContainer to set\r\n\t */\r\n\tpublic void setPlayerContainer(StakeContainer playerContainer) {\r\n\t\tthis.playerContainer = playerContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the targetContainer.\r\n\t * @return the targetContainer.\r\n\t */\r\n\tpublic StakeContainer getTargetContainer() {\r\n\t\treturn targetContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the targetContainer.\r\n\t * @param targetContainer the targetContainer to set\r\n\t */\r\n\tpublic void setTargetContainer(StakeContainer targetContainer) {\r\n\t\tthis.targetContainer = targetContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the player.\r\n\t * @return the player.\r\n\t */\r\n\tpublic Player getPlayer() {\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the other.\r\n\t * @return the other.\r\n\t */\r\n\tpublic Player getOther() {\r\n\t\treturn other;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the staked.\r\n\t * @return the staked.\r\n\t */\r\n\tpublic boolean isStaked() {\r\n\t\treturn staked;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the acceptState.\r\n\t * @return the acceptState.\r\n\t */\r\n\tpublic int getAcceptState() {\r\n\t\treturn acceptState;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the acceptState.\r\n\t * @param acceptState the acceptState to set\r\n\t */\r\n\tpublic void setAcceptState(int acceptState) {\r\n\t\tthis.acceptState = acceptState;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the fightState.\r\n\t * @return the fightState.\r\n\t */\r\n\tpublic int getFightState() {\r\n\t\treturn fightState;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the fightState.\r\n\t * @param fightState the fightState to set\r\n\t */\r\n\tpublic void setFightState(int fightState) {\r\n\t\tthis.fightState = fightState;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/activity/duel/DuelSession.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/activity/duel/DuelSession.java	(date 1597089529795)
@@ -334,7 +334,7 @@
 			player.getInventory().addAll(targetContainer);
 		}
 		player.removeExtension(DuelSession.class);
-		PlayerParser.dump(player);
+		PlayerParser.save(player);
 	}
 
 	/**
Index: Client/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'java'\r\nsourceCompatibility = 1.8\r\ntargetCompatibility = 1.8\r\n\r\napply plugin: 'application'\r\n\r\nmainClassName = 'org.runite.Client'\r\n\r\nrepositories {\r\n    flatDir {\r\n        dirs 'lib'\r\n    }\r\n}\r\n\r\n\r\ndependencies {\r\n    implementation name: 'clientlibs'\r\n    implementation name: 'commons-io-2.4'\r\n    implementation name: 'guava-18.0'\r\n    implementation name: 'javassist-3.20.0-GA'\r\n    implementation name: 'joda-time-2.9.9'\r\n    implementation name: 'json-simple-1.1.1'\r\n    implementation name: 'laf-plugin-7.2.1'\r\n    implementation name: 'laf-widget-7.2.1'\r\n    implementation name: 'mysql-connector-java-5.1.30-bin'\r\n    implementation name: 'reflections-0.9.10'\r\n    implementation name: 'substance-7.2.1'\r\n    implementation name: 'trident-7.2.1'\r\n    implementation name: 'twitter4j-core-4.0.3-SNAPSHOT'\r\n}\r\n\r\n\r\njar {\r\n    manifest {\r\n        attributes(\r\n                'Main-Class': 'org.runite.Client'\r\n        )\r\n    }\r\n    archiveBaseName = 'client'\r\n    archiveVersion =  '1.0.0'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Client/build.gradle	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Client/build.gradle	(date 1597089529718)
@@ -8,25 +8,13 @@
 
 repositories {
     flatDir {
-        dirs 'lib'
+        dirs 'libs'
     }
 }
 
 
 dependencies {
     implementation name: 'clientlibs'
-    implementation name: 'commons-io-2.4'
-    implementation name: 'guava-18.0'
-    implementation name: 'javassist-3.20.0-GA'
-    implementation name: 'joda-time-2.9.9'
-    implementation name: 'json-simple-1.1.1'
-    implementation name: 'laf-plugin-7.2.1'
-    implementation name: 'laf-widget-7.2.1'
-    implementation name: 'mysql-connector-java-5.1.30-bin'
-    implementation name: 'reflections-0.9.10'
-    implementation name: 'substance-7.2.1'
-    implementation name: 'trident-7.2.1'
-    implementation name: 'twitter4j-core-4.0.3-SNAPSHOT'
 }
 
 
Index: Server/data/configs/npc_spawns.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"npc_spawns\": [\r\n    {\r\n      \"npc_id\": \"0\",\r\n      \"loc_data\": \"{3221,3218,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1\",\r\n      \"loc_data\": \"{3222,3221,0,1,3}-{2804,3427,0,1,2}-{3285,3208,0,1,4}-{3093,3509,0,1,3}-{3098,3508,0,1,7}-{3096,3510,0,1,3}-{3017,3239,0,1,2}-{2712,3484,0,1,4}-{2693,3495,0,1,1}-{3237,3404,0,1,6}-{3237,3408,0,1,0}-{3247,3396,0,1,3}-{3263,3403,0,1,3}-{3210,3223,1,1,4}-{3230,3208,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2\",\r\n      \"loc_data\": \"{3298,3185,0,1,3}-{3101,3511,0,1,4}-{2690,3489,0,1,3}-{3236,3203,0,1,4}-{3217,3209,0,1,4}-{3237,3217,0,1,6}-{3282,3503,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3\",\r\n      \"loc_data\": \"{2818,3443,0,1,3}-{3306,3200,0,1,6}-{3300,3208,0,1,3}-{3095,3511,0,1,3}-{3094,3513,0,1,4}-{3097,3510,0,1,4}-{2699,3491,0,1,1}-{3231,3239,0,1,4}-{3278,3502,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4\",\r\n      \"loc_data\": \"{3010,3236,0,1,6}-{2693,3493,0,1,7}-{2693,3492,0,1,0}-{2695,3497,0,1,1}-{2700,3496,0,1,5}-{3230,3204,0,1,3}-{3281,3499,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5\",\r\n      \"loc_data\": \"{2817,3447,0,1,5}-{2697,3493,0,1,4}-{3236,3205,0,1,2}-{3229,3238,0,1,1}-{3279,3497,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6\",\r\n      \"loc_data\": \"{3097,3259,0,1,4}-{3280,3491,0,1,0}-{3246,3207,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7\",\r\n      \"loc_data\": \"{2920,3434,0,1,0}-{3226,3290,0,1,3}-{2629,3360,0,1,4}-{3158, 3301, 0, 1, 0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8\",\r\n      \"loc_data\": \"{3019,3230,0,1,4}-{2804,3186,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"9\",\r\n      \"loc_data\": \"{2964,3392,0,1,6}-{2967,3393,0,1,1}-{3008,3324,0,1,2}-{3007,3321,0,1,6}-{3005,3321,0,1,4}-{2965,3389,0,1,6}-{2966,3392,0,1,1}-{2964,3392,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"11\",\r\n      \"loc_data\": \"{3235,3399,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"13\",\r\n      \"loc_data\": \"{3108,3157,1,1,3}-{3113,3157,1,1,4}-{3107,3170,0,1,0}-{3112,3167,0,1,0}-{3106,3157,0,1,3}-{3110,3155,0,1,6}-{2588,3087,0,1,4}-{2592,3086,0,1,6}-{2590,3083,1,1,4}-{2587,3086,1,1,4}-{2594,3084,1,1,6}-{2593,3090,2,1,5}-{2594,3085,2,1,1}-{2588,3089,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"14\",\r\n      \"loc_data\": \"{2890,3443,0,1,1}-{2897,3444,0,1,3}-{2897,3435,0,1,2}-{2899,3438,0,1,0}-{2904,3441,0,1,5}-{2899,3449,0,1,3}-{2913,3450,0,1,4}-{2888,3447,0,1,6}-{2886,3421,0,1,1}-{2892,3414,0,1,7}-{2896,3421,0,1,3}-{2900,3428,0,1,3}-{2883,3431,0,1,4}-{2885,3436,0,1,1}-{2914,3444,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"15\",\r\n      \"loc_data\": \"{2584,3304,0,1,3}-{2588,3291,0,1,7}-{2584,3288,0,1,0}-{2631,3294,0,1,6}-{2629,3296,0,1,4}-{2563,3382,0,1,6}-{2569,3383,0,1,6}-{2571,3381,0,1,1}-{2575,3384,0,1,4}-{2572,3385,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"16\",\r\n      \"loc_data\": \"{3279,3191,0,1,4}-{3296,3202,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"18\",\r\n      \"loc_data\": \"{3282,3176,0,1,0}-{3284,3170,0,1,7}-{3284,3174,0,1,0}-{3288,3168,0,1,5}-{3292,3169,0,1,3}-{3295,3168,0,1,3}-{3301,3170,0,1,6}-{3301,3174,0,1,6}-{3301,3177,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"19\",\r\n      \"loc_data\": \"{2971,3349,0,1,4}-{2979,3350,0,1,2}-{2973,3337,0,1,3}-{2959,3335,0,1,6}-{2982,3339,0,1,6}-{2983,3346,0,1,4}-{2980,3329,0,1,4}-{2987,3330,0,1,6}-{2958,3340,1,1,1}-{2970,3333,1,1,3}-{2966,3329,1,1,4}-{2961,3353,1,1,4}-{2973,3337,1,1,6}-{2998,3341,0,1,6}-{2983,3342,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"20\",\r\n      \"loc_data\": \"{2588,3301,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"21\",\r\n      \"loc_data\": \"{2630,3288,0,1,1}-{2647,3306,0,1,1}-{2667,3315,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"23\",\r\n      \"loc_data\": \"{2582,3297,0,1,6}-{2652,3318,0,1,0}-{2653,3300,0,1,5}-{2669,3298,0,1,4}-{2671,3313,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"24\",\r\n      \"loc_data\": \"{2614,3318,0,1,6}-{2621,3293,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"25\",\r\n      \"loc_data\": \"{2612,3316,0,1,1}-{2574,3321,1,1,4}-{2621,3293,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"27\",\r\n      \"loc_data\": \"{2574,3285,2,0,0}-{2574,3308,2,0,0}-{2582,3284,2,0,0}-{2582,3309,2,0,0}-{2588,3290,2,0,0}-{2588,3303,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"28\",\r\n      \"loc_data\": \"{2611,3269,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"31\",\r\n      \"loc_data\": \"{2616,3308,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"32\",\r\n      \"loc_data\": \"{2651,3307,0,1,1}-{2659,3309,0,1,6}-{2660,3309,0,1,3}-{2661,3309,0,1,1}-{2661,3317,0,1,5}-{2663,3301,0,1,3}-{2665,3300,0,1,3}-{2636,3342,0,1,4}-{2634,3342,0,1,3}-{2635,3339,0,1,3}-{2548,3111,1,1,3}-{2545,3116,1,1,7}-{2549,3115,1,1,1}-{2549,3112,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"35\",\r\n      \"loc_data\": \"{2545,3094,0,1,3}-{2549,3093,0,1,2}-{2543,3089,0,1,3}-{2540,3098,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"36\",\r\n      \"loc_data\": \"{3020,3373,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"38\",\r\n      \"loc_data\": \"{2952,3063,0,0,0}-{2955,3057,0,0,0}-{2956,3035,0,0,0}-{2969,3034,0,0,0}-{2984,3048,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"39\",\r\n      \"loc_data\": \"{2958,3055,0,0,0}-{2954,3029,0,0,0}-{2968,3039,0,0,0}-{2984,3048,0,0,0}-{2989,3058,0,0,0}-{2982,3060,0,0,0}-{2972,3060,0,0,0}-{2998,3061,0,0,0}-{2999,3049,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"40\",\r\n      \"loc_data\": \"{3005,3060,0,0,0}-{3008,3067,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"41\",\r\n      \"loc_data\": \"{3197,3356,0,1,4}-{3234,3297,0,1,3}-{3230,3296,0,1,5}-{3236,3288,0,1,6}-{3236,3300,0,1,2}-{3231,3308,0,1,3}-{2965,3336,0,1,4}-{3110,9573,0,1,6}-{2655,3441,0,1,6}-{2649,3438,0,1,7}-{2649,3446,0,1,6}-{2653,3444,0,1,6}-{2647,3441,0,1,1}-{2784,3062,0,1,4}-{2789,3063,0,1,4}-{3160,3082,0,1,3}-{3140,3096,0,1,3}-{3140,3093,0,1,0}-{3138,3094,0,1,1}-{3140,3093,0,1,3}-{3138,3093,0,1,1}-{3138,3094,0,1,0}-{3189,3278,0,1,3}-{3187,3276,0,1,5}-{3188,3278,0,1,4}-{2851,3370,0,1,3}-{2846,3374,0,1,3}-{2853,3372,0,1,3}-{2847,3373,0,1,3}-{2850,3371,0,1,1}-{2851,3373,0,1,4}-{2852,3370,0,1,4}-{3234,3293,0,1,4}-{3229,3298,0,1,1}-{3228,3296,0,1,4}-{2815,3560,0,1,7}-{2819,3561,0,1,4}-{2818,3559,0,1,6}-{3140,3093,0,1,1}-{2674,3652,0,1,3}-{2672,3655,0,1,6}-{2677,3655,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"42\",\r\n      \"loc_data\": \"{3237,3346,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"43\",\r\n      \"loc_data\": \"{3241,3354,0,1,3}-{3200,3263,0,0,0}-{3212,3262,0,1,1}-{2926,3323,0,1,0}-{2922,3325,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"44\",\r\n      \"loc_data\": \"{3251,3418,0,0,1}-{3252,3418,0,0,1}-{3253,3418,0,0,1}-{3096,3489,0,0,3}-{3254,3418,0,0,1}-{3255,3418,0,0,1}-{3256,3418,0,0,1}-{3147,3448,0,0,1}-{3180,3436,0,0,4}-{3180,3440,0,0,4}-{3180,3444,0,0,4}-{3096,3493,0,0,3}-{3097,3494,0,0,1}-{3191,3437,0,0,3}-{3191,3441,0,0,3}-{3191,3445,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"45\",\r\n      \"loc_data\": \"{3096,3491,0,0,3}-{3148,3448,0,0,0}-{3191,3443,0,0,3}-{3191,3439,0,0,3}-{3191,3435,0,0,3}-{3180,3442,0,0,4}-{3180,3434,0,0,4}-{2843,5214,0,0,4}-{3180,3438,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"46\",\r\n      \"loc_data\": \"{3179,3348,0,1,0}-{3178,3353,0,1,0}-{3211,3322,0,1,0}-{3214,3314,0,1,0}-{3214,3318,0,1,0}-{3216,3314,0,1,0}-{3218,3287,0,1,0}-{3223,3281,0,1,0}-{3231,3271,0,1,0}-{3233,3267,0,1,0}-{3233,3270,0,1,0}-{3235,3265,0,1,0}-{3235,3259,0,1,0}-{3238,3244,0,1,0}-{3241,3230,0,1,0}-{3241,3234,0,1,0}-{3243,3228,0,1,0}-{3247,3221,0,1,0}-{3248,3220,0,1,0}-{3259,3212,0,1,0}-{2979,3359,0,1,0}-{2979,3357,0,1,0}-{2993,3384,0,1,6}-{3015,3285,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"47\",\r\n      \"loc_data\": \"{3097,3364,0,1,3}-{3102,3363,0,1,5}-{3341,3267,0,1,5}-{3235,3224,0,1,3}-{3229,3220,0,1,4}-{3211,3211,0,1,3}-{3225,3220,0,1,1}-{3237,3215,0,1,5}-{3211,3210,0,1,7}-{3227,3220,0,1,7}-{3233,3227,0,1,5}-{3227,3210,0,1,6}-{3228,3222,0,1,4}-{3229,3226,0,1,0}-{3127,3487,0,1,4}-{3125,3486,0,1,6}-{3127,3486,0,1,4}-{3019,3292,0,1,7}-{3018,3295,0,1,7}-{3001,3202,0,1,5}-{3021,3205,0,1,6}-{3026,3174,0,1,5}-{3019,3176,0,1,7}-{3076,3282,0,1,5}-{3089,3266,0,1,4}-{3091,3266,0,1,4}-{3243,3687,0,1,5}-{3249,3669,0,1,3}-{3252,3675,0,1,4}-{3252,3680,0,1,3}-{3259,3683,0,1,0}-{3276,9871,0,1,1}-{3277,9871,0,1,3}-{3225,9862,0,1,4}-{3222,9861,0,1,6}-{3220,9860,0,1,6}-{3219,9865,0,1,6}-{3237,9862,0,1,4}-{3236,3217,0,1,4}-{3259,3230,0,1,4}-{3158,3226,0,1,5}-{3160,3202,0,1,4}-{3233,3237,0,1,7}-{2821,3170,0,1,1}-{2801,3158,0,1,2}-{2852,9642,0,1,6}-{2858,9632,0,1,3}-{2536,2982,0,1,3}-{2531,2980,0,1,0}-{2522,2981,0,1,4}-{2545,2989,0,1,4}-{2523,2970,0,1,2}-{2603,9480,0,1,1}-{2600,9477,0,1,0}-{2579,9496,0,1,4}-{2580,9508,0,1,0}-{2571,9522,0,1,4}-{2654,9640,0,1,6}-{2655,9637,0,1,4}-{2656,9639,0,1,7}-{2651,9636,0,1,5}-{2648,9637,0,1,4}-{2651,9642,0,1,1}-{2654,9640,0,1,0}-{2654,9635,0,1,6}-{2655,9635,0,1,3}-{2664,9626,0,1,6}-{2664,9624,0,1,1}-{2661,9623,0,1,1}-{2663,9623,0,1,3}-{2664,9626,0,1,6}-{2592,9831,0,1,3}-{2588,9825,0,1,6}-{2583,9829,0,1,4}-{2581,9841,0,1,0}-{2597,9823,0,1,2}-{2579,9805,0,1,3}-{2576,9804,0,1,0}-{2573,9805,0,1,5}-{2571,9808,0,1,3}-{2576,9810,0,1,2}-{2587,9802,0,1,2}-{2592,9800,0,1,4}-{2596,9805,0,1,6}-{2601,9802,0,1,5}-{2585,9801,0,1,7}-{2594,9803,0,1,0}-{2590,9806,0,1,3}-{2612,9808,0,1,6}-{2604,9810,0,1,6}-{2579,9821,0,1,2}-{2576,9812,0,1,6}-{2580,9813,0,1,6}-{2600,9813,0,1,4}-{2599,9809,0,1,4}-{2514,3193,0,1,6}-{2518,3192,0,1,3}-{2507,3181,0,1,3}-{2508,3178,0,1,6}-{2511,3183,0,1,3}-{2515,3182,0,1,1}-{2565,9505,0,1,1}-{2566,9510,0,1,6}-{2594,9497,0,1,4}-{3475,9840,0,1,6}-{3481,9842,0,1,1}-{3486,9843,0,1,7}-{3483,9824,0,1,4}-{3496,9808,0,0,5}-{3490,9815,0,1,1}-{3478,9834,0,0,3}-{3490,9824,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"48\",\r\n      \"loc_data\": \"{2775,2929,0,1,2}-{2789,2926,0,1,5}-{2795,2932,0,1,6}-{2775,2933,0,1,0}-{2769,2928,0,1,3}-{2817,2921,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"49\",\r\n      \"loc_data\": \"{2861,9838,0,1,3}-{2858,9842,0,1,4}-{2854,9847,0,1,5}-{2857,9850,0,1,7}-{2865,9849,0,1,6}-{2869,9838,0,1,6}-{3104,3680,0,1,3}-{3114,3688,0,1,1}-{3121,3675,0,1,1}-{3127,3695,0,1,3}-{3129,3678,0,1,2}-{3130,3689,0,1,2}-{3128,3665,0,1,3}-{3135,3701,0,1,6}-{3085,10134,0,1,0}-{3090,10123,0,1,0}-{3094,10133,0,1,0}-{3095,10120,0,1,0}-{3095,10128,0,1,0}-{3098,10122,0,1,0}-{3104,10127,0,1,0}-{3105,10125,0,1,0}-{3177,3905,0,1,4}-{3180,3908,0,1,2}-{3189,3914,0,1,6}-{3193,3906,0,1,2}-{2402,9785,0,1,1}-{2403,9782,0,1,1}-{2408,9782,0,1,1}-{2408,9785,0,1,1}-{2413,9776,0,1,1}-{2417,9777,0,1,1}-{2412,9773,0,1,1}-{2416,9773,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"50\",\r\n      \"loc_data\": \"{2273,4698,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"52\",\r\n      \"loc_data\": \"{2899,9765,0,1,1}-{2893,9768,0,1,1}-{2895,9771,0,1,6}-{2894,9781,0,1,6}-{2891,9787,0,1,2}-{2904,9798,0,1,0}-{2910,9799,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"53\",\r\n      \"loc_data\": \"{2694,9508,0,0,3}-{2703,9505,0,0,6}-{2710,9499,0,0,1}-{2704,9520,0,0,5}-{2714,9523,0,0,3}-{2722,9520,0,0,7}-{3232,3790,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"54\",\r\n      \"loc_data\": \"{2831,9825,0,1,0}-{2838,9824,0,1,1}-{2344,9763,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"55\",\r\n      \"loc_data\": \"{2914,9800,0,1,2}-{2906,9804,0,1,6}-{2896,9798,0,1,0}-{2909,9906,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"58\",\r\n      \"loc_data\": \"{3289,5482,0,1,1}-{3296,5472,0,1,0}-{3291,5466,0,1,6}-{3294,5481,0,1,0}-{3300,5479,0,1,7}-{3288,5480,0,1,3}-{3293,5475,0,1,3}-{3293,5481,0,1,2}-{3286,5465,0,1,3}-{3279,5478,0,1,4}-{3270,5464,0,1,2}-{3270,5468,0,1,1}-{2574,9874,0,1,0}-{2577,9877,0,1,3}-{2574,9878,0,1,0}-{2575,9871,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"59\",\r\n      \"loc_data\": \"{3182,3244,0,1,1}-{3250,3239,0,1,1}-{3241,3241,0,1,1}-{3188,3216,0,1,1}-{3082,3362,0,1,4}-{3146,3347,0,1,3}-{3249,3249,0,1,1}-{3102,9881,0,1,3}-{3095,9883,0,1,2}-{3218,9890,0,1,3}-{3220,9887,0,1,0}-{3218,9887,0,1,1}-{3218,9889,0,1,5}-{3213,9890,0,1,1}-{3169,3257,0,1,1}-{3164,3236,0,1,6}-{3148,3226,0,1,5}-{3162,3223,0,1,7}-{3151,3221,0,1,0}-{3160,3221,0,1,0}-{2461,2880,0,1,5}-{2489,2935,0,1,7}-{2492,2907,0,1,1}-{2496,2890,0,1,4}-{2487,2894,0,1,2}-{2487,2888,0,1,7}-{2483,2877,0,1,3}-{2481,2876,0,1,4}-{2457,2867,0,1,4}-{2481,2847,0,1,0}-{2475,2854,0,1,3}-{2482,2873,0,1,3}-{2485,2876,0,1,2}-{2449,2865,0,1,1}-{2478,2916,0,1,5}-{2485,2902,0,1,3}-{2487,2902,0,1,2}-{2489,2894,0,1,2}-{2490,2905,0,1,7}-{2490,2917,0,1,5}-{2484,2890,0,1,1}-{2503,2889,0,1,1}-{2491,2927,0,1,1}-{2497,2939,0,1,2}-{2648,9766,0,1,4}-{2653,9761,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"60\",\r\n      \"loc_data\": \"{3189,3883,0,1,5}-{3182,3882,0,1,5}-{3177,3871,0,1,0}-{3176,3878,0,1,0}-{3173,3892,0,1,6}-{3171,3884,0,1,4}-{3166,3874,0,1,1}-{3169,3900,0,1,1}-{3165,3881,0,1,3}-{3164,3888,0,1,6}-{3163,3894,0,1,7}-{3162,3894,0,1,4}-{2547,2982,0,1,6}-{2477,2866,0,1,5}-{2484,2897,0,1,3}-{2455,2857,0,1,6}-{2434,2845,0,1,4}-{2544,2904,0,1,2}-{2548,2981,0,1,1}-{2448,2784,0,1,7}-{2460,2869,0,1,3}-{2471,2890,0,1,6}-{2491,2906,0,1,0}-{2523,2975,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"61\",\r\n      \"loc_data\": \"{3321,3145,0,1,3}-{3327,3131,0,1,5}-{3322,3143,0,1,3}-{3182,3878,0,1,6}-{3182,3886,0,1,7}-{3182,3888,0,1,5}-{3175,3888,0,1,4}-{3175,3879,0,1,7}-{3174,3879,0,1,3}-{3174,3882,0,1,0}-{3175,3885,0,1,3}-{3172,3876,0,1,2}-{3172,3894,0,1,1}-{3172,3885,0,1,3}-{3165,3886,0,1,3}-{3165,3896,0,1,1}-{3166,3886,0,1,1}-{3164,3893,0,1,4}-{3163,3881,0,1,4}-{3159,3889,0,1,0}-{3213,9890,0,1,5}-{3210,9886,0,1,4}-{3213,9887,0,1,1}-{3207,9880,0,1,0}-{3255,9870,0,1,4}-{3258,9872,0,1,3}-{3261,9870,0,1,4}-{3156,3248,0,1,4}-{3143,3241,0,1,4}-{3156,3249,0,1,4}-{3175,3248,0,1,7}-{3169,3260,0,1,4}-{3171,3254,0,1,5}-{3162,3246,0,1,6}-{3179,3262,0,1,1}-{3162,3226,0,1,1}-{3166,3222,0,1,1}-{3157,3229,0,1,5}-{3168,3222,0,1,4}-{3211,9622,0,1,2}-{3215,9620,0,1,4}-{3212,9618,0,1,3}-{3217,9617,0,1,3}-{3214,9620,0,1,7}-{2541,3189,0,1,3}-{2542,3187,0,1,6}-{2543,3186,0,1,4}-{2545,3183,0,1,3}-{2545,3183,0,1,3}-{2545,3182,0,1,3}-{2543,3183,0,1,0}-{2543,3182,0,1,3}-{2539,3182,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"62\",\r\n      \"loc_data\": \"{2769,3198,0,1,7}-{2768,3206,0,1,1}-{2776,3107,0,1,1}-{2794,3121,0,1,3}-{2795,3118,0,1,1}-{2796,3109,0,1,1}-{2808,3112,0,1,6}-{2791,3124,0,1,1}-{2860,3094,0,1,6}-{2854,3086,0,1,6}-{2863,3083,0,1,3}-{2853,3081,0,1,4}-{2859,3079,0,1,4}-{2859,3075,0,1,6}-{2871,3092,0,1,1}-{2867,3094,0,1,1}-{2861,3082,0,1,3}-{2861,3094,0,1,3}-{2863,3081,0,1,2}-{2864,3089,0,1,3}-{2859,3084,0,1,0}-{2850,3060,0,1,6}-{2857,3044,0,1,7}-{2856,3066,0,1,4}-{2784,3030,0,1,4}-{2783,3017,0,1,3}-{2811,2975,0,1,7}-{2815,2987,0,1,5}-{2808,3007,0,1,6}-{2812,3007,0,1,1}-{2885,2950,0,1,4}-{2891,2951,0,1,6}-{2894,2946,0,1,4}-{2928,3022,0,1,3}-{2930,3029,0,1,4}-{2927,3039,0,1,6}-{2928,3043,0,1,0}-{2929,3036,0,1,7}-{2919,3040,0,1,4}-{2934,3045,0,1,2}-{2929,3035,0,1,4}-{2914,3055,0,1,4}-{2922,3059,0,1,3}-{2930,3049,0,1,4}-{2914,3047,0,1,4}-{2935,3049,0,1,1}-{2927,3058,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"63\",\r\n      \"loc_data\": \"{3118,9950,0,1,6}-{3116,9956,0,1,0}-{3127,9953,0,1,7}-{3122,9955,0,1,4}-{3124,9951,0,1,4}-{3124,9950,0,1,3}-{3074,3892,0,1,3}-{3071,3894,0,1,7}-{3062,3897,0,1,3}-{3058,3889,0,1,4}-{3054,3880,0,1,2}-{3054,3895,0,1,7}-{3051,3879,0,1,6}-{3051,3886,0,1,6}-{3047,3893,0,1,1}-{3047,3881,0,1,4}-{3044,3893,0,1,5}-{3041,3894,0,1,1}-{3038,3890,0,1,1}-{3046,3872,0,1,4}-{3165,9891,0,1,6}-{3177,9886,0,1,4}-{3175,9889,0,1,4}-{3177,9879,0,1,4}-{3177,9888,0,1,1}-{3178,9895,0,1,4}-{3182,9884,0,1,3}-{2841,9583,0,1,4}-{2841,9582,0,1,4}-{2839,9582,0,1,1}-{2837,9572,0,1,6}-{2832,9580,0,1,1}-{3164,9888,0,1,3}-{3169,9892,0,1,6}-{3258,5560,0,1,2}-{3258,5555,0,1,3}-{3260,5557,0,1,3}-{3257,5552,0,1,1}-{3260,5558,0,1,5}-{3258,5556,0,1,6}-{3257,5555,0,1,6}-{3260,5559,0,1,7}-{3257,5561,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"64\",\r\n      \"loc_data\": \"{2945,3910,0,1,0}-{2956,3923,0,1,0}-{2961,3919,0,1,0}-{2968,3915,0,1,0}-{2972,3927,0,1,0}-{2975,3949,0,1,0}-{2961,3945,0,1,0}-{2950,3927,0,1,0}-{2684,9798,0,1,2}-{2691,9814,0,1,5}-{2694,9819,0,1,6}-{2696,9831,0,1,3}-{2702,9837,0,1,6}-{2709,9844,0,1,3}-{2720,9847,0,1,4}-{2724,9843,0,1,6}-{2733,9846,0,1,4}-{2740,9841,0,1,3}-{2745,9836,0,1,4}-{2745,9828,0,1,5}-{2747,9826,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"66\",\r\n      \"loc_data\": \"{2507,3204,0,1,5}-{2506,3205,0,1,6}-{2526,3169,0,1,6}-{2540,3226,0,1,6}-{2528,3164,0,1,6}-{2529,3169,0,1,1}-{2537,3170,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"67\",\r\n      \"loc_data\": \"{2507,3200,0,1,6}-{2516,3212,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"68\",\r\n      \"loc_data\": \"{2518,3209,0,1,3}-{2533,3209,0,1,5}-{2530,3212,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"73\",\r\n      \"loc_data\": \"{3268,9893,0,1,3}-{3251,9896,0,1,6}-{3087,9672,0,1,1}-{3103,9672,0,1,1}-{3119,9670,0,1,1}-{3123,9657,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"74\",\r\n      \"loc_data\": \"{3148,9899,0,1,3}-{3147,9905,0,1,6}-{3141,9901,0,1,5}-{3142,9891,0,1,6}-{3139,9886,0,1,2}-{3148,9883,0,1,1}-{3151,9889,0,1,3}-{3126,9865,0,1,7}-{3129,9859,0,1,3}-{3121,9863,0,1,3}-{3126,9862,0,1,5}-{3082,9671,0,1,3}-{3105,9672,0,1,1}-{3113,9673,0,1,3}-{3124,9660,0,1,3}-{3122,9656,0,1,4}-{3117,9646,0,1,1}-{3124,9651,0,1,2}-{3117,9645,0,1,3}-{3094,9671,0,1,3}-{2843,9767,0,1,3}-{2845,9762,0,1,7}-{2842,9759,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"75\",\r\n      \"loc_data\": \"{2931,9641,0,1,6}-{3226,9909,0,1,4}-{3225,9905,0,1,0}-{3234,9907,0,1,4}-{2931,9643,0,1,6}-{2588,9493,0,1,3}-{2584,9491,0,1,3}-{2589,9492,0,1,4}-{2591,9492,0,1,6}-{2593,9491,0,1,6}-{2588,9491,0,1,3}-{2839,9774,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"76\",\r\n      \"loc_data\": \"{2843,9774,0,1,6}-{2842,9769,0,1,4}-{2842,9764,0,1,7}-{2845,9754,0,1,4}-{2849,9751,0,1,1}-{2850,9747,0,1,3}-{2844,9758,0,1,7}-{2540,9814,0,1,6}-{2547,9817,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"78\",\r\n      \"loc_data\": \"{2911,9836,0,1,3}-{2904,9831,0,1,5}-{2914,9827,0,1,4}-{2927,9830,0,1,5}-{3069,3901,0,1,4}-{3079,3955,0,1,3}-{3076,3953,0,1,0}-{3079,3952,0,1,1}-{3072,3952,0,1,0}-{3075,3948,0,1,2}-{3072,3956,0,1,1}-{3085,3951,0,1,6}-{2862,9569,0,1,4}-{2857,9571,0,1,7}-{2837,9561,0,1,1}-{3787,9459,0,1,1}-{3725,9369,0,1,1}-{3737,9390,0,1,4}-{3738,9399,0,1,0}-{3740,9407,0,1,1}-{3755,9424,0,1,0}-{3803,9447,0,1,4}-{3765,9407,0,1,1}-{3762,9395,0,1,3}-{3760,9440,0,1,4}-{3737,9425,0,1,7}-{3720,9430,0,1,4}-{3736,9451,0,1,3}-{3728,9463,0,1,2}-{3740,9462,0,1,4}-{3770,9463,0,1,1}-{3778,9438,0,1,1}-{3786,9422,0,1,4}-{3800,9419,0,1,3}-{3797,9427,0,1,4}-{3820,9432,0,1,5}-{3825,9414,0,1,3}-{3833,9415,0,1,0}-{3752,9450,0,1,6}-{3825,9449,0,1,3}-{3827,9459,0,1,1}-{3818,9466,0,1,4}-{3799,9460,0,1,1}-{3794,9451,0,1,1}-{3762,9432,0,1,1}-{3725,9390,0,1,3}-{2672,9805,0,1,3}-{2663,9804,0,1,4}-{2658,9809,0,1,5}-{3753,9387,0,1,0}-{3728,9382,0,1,3}-{3733,9421,0,1,7}-{2568,9528,0,1,5}-{2573,9530,0,1,3}-{2575,9525,0,1,6}-{2571,9528,0,1,7}-{2608,9818,0,1,7}-{2609,9825,0,1,5}-{2607,9830,0,1,1}-{2605,9837,0,1,1}-{2607,9833,0,1,6}-{3729,9360,0,1,6}-{2759,3402,0,1,2}-{2756,3400,0,1,0}-{2543,9564,0,1,1}-{2543,9562,0,1,1}-{2542,9557,0,1,1}-{2542,9569,0,1,4}-{2540,9566,0,1,0}-{2549,9568,0,1,6}-{2538,9568,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"80\",\r\n      \"loc_data\": \"{2619,3265,0,1,0}-{2619,3265,0,1,3}-{2615,3267,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"81\",\r\n      \"loc_data\": \"{3255,3255,0,1,3}-{3255,3256,0,1,4}-{3038,3310,0,1,5}-{3028,3312,0,1,6}-{3028,3299,0,1,6}-{3042,3300,0,1,6}-{2923,3277,0,1,1}-{2921,3289,0,1,1}-{2923,3280,0,1,6}-{2589,3120,0,1,4}-{2605,3116,0,1,5}-{3259,3261,0,1,1}-{3263,3283,0,1,6}-{3257,3268,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"82\",\r\n      \"loc_data\": \"{2936,9652,0,1,3}-{2932,9809,0,1,0}-{2929,9803,0,1,2}-{2934,9795,0,1,6}-{2933,9791,0,1,1}-{3052,3117,2,1,1}-{2841,9557,0,1,3}-{2831,9562,0,1,3}-{2838,9605,0,1,3}-{3058,10128,0,1,0}-{3046,10139,0,1,0}-{3110,3157,2,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"83\",\r\n      \"loc_data\": \"{3169,3711,0,1,7}-{3095,10095,0,1,0}-{3095,10086,0,1,0}-{2639,9477,2,0,3}-{2635,9497,2,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"84\",\r\n      \"loc_data\": \"{2861,9766,0,1,7}-{2875,9776,0,1,3}-{2869,9782,0,1,3}-{2856,9779,0,1,3}-{2867,9773,0,1,0}-{2863,9780,0,1,4}-{2858,9775,0,1,4}-{2700,9481,0,0,5}-{2729,9483,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"86\",\r\n      \"loc_data\": \"{2632,9696,0,1,1}-{2639,9697,0,1,3}-{2646,9696,0,1,3}-{2650,9697,0,1,4}-{2646,9702,0,1,6}-{3098,9880,0,1,5}-{3094,9883,0,1,1}-{3196,3208,0,1,1}-{3119,9891,0,1,4}-{3249,9868,0,1,4}-{3237,9868,0,1,3}-{3221,9873,0,1,6}-{3225,9862,0,1,2}-{3199,3209,0,1,1}-{3193,3211,0,1,5}-{3197,3203,0,1,1}-{3201,3200,0,1,4}-{3199,3210,0,1,0}-{3191,3207,0,1,4}-{3037,9511,0,1,6}-{3105,9517,0,1,7}-{3101,9517,0,1,6}-{3102,9521,0,1,4}-{3106,9519,0,1,1}-{3104,9514,0,1,4}-{3104,9518,0,1,1}-{3107,9519,0,1,1}-{3109,9516,0,1,1}-{3107,9515,0,1,7}-{3105,9512,0,1,6}-{3102,9513,0,1,3}-{3100,9514,0,1,1}-{3100,9516,0,1,7}-{3099,9521,0,1,0}-{3103,9523,0,1,1}-{3212,3191,0,1,6}-{3207,3192,0,1,2}-{3216,3184,0,1,2}-{3224,3174,0,1,4}-{3229,3183,0,1,5}-{3222,3185,0,1,3}-{3216,3177,0,1,4}-{3200,3182,0,1,5}-{3202,3189,0,1,6}-{3188,3181,0,1,7}-{3181,3191,0,1,7}-{3185,3199,0,1,4}-{3176,3198,0,1,6}-{3168,3188,0,1,4}-{3172,3178,0,1,1}-{3179,3174,0,1,1}-{3189,3168,0,1,5}-{3237,9866,0,1,6}-{3232,9867,0,1,7}-{3219,9862,0,1,7}-{3227,9875,0,1,4}-{3276,9870,0,1,3}-{3291,3388,0,1,6}-{2647,9713,0,1,3}-{2641,9719,0,1,1}-{2650,9716,0,1,1}-{2518,3187,0,1,3}-{3495,9812,0,1,1}-{3502,9807,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"87\",\r\n      \"loc_data\": \"{3241,3531,0,1,7}-{3260,3540,0,1,7}-{3103,9881,0,1,3}-{3122,9889,0,1,2}-{3117,9890,0,1,2}-{3293,3382,0,1,4}-{2520,3188,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"88\",\r\n      \"loc_data\": \"{2601,9802,0,1,6}-{2594,9805,0,1,1}-{2587,9806,0,1,2}-{2585,9803,0,1,1}-{2584,9801,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"89\",\r\n      \"loc_data\": \"{2783,3463,0,1,7}-{2629,3266,0,1,2}-{2634,3265,0,1,1}-{2575,3058,0,0,6}-{3080,3451,0,1,1}-{3096,3460,0,1,3}-{3142,3211,0,1,6}-{2557,3065,0,0,1}-{3294,3344,0,1,3}-{3289,3349,0,1,6}-{3286,3345,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"90\",\r\n      \"loc_data\": \"{2925,3254,2,1,3}-{2882,9815,0,1,3}-{2883,9822,0,1,6}-{2883,9827,0,1,6}-{2890,9847,0,1,1}-{2896,9849,0,1,5}-{2900,9848,0,1,3}-{2907,9849,0,1,5}-{3116,3534,0,1,4}-{3110,3367,0,1,3}-{3110,9909,0,1,4}-{3121,9910,0,1,4}-{3133,9909,0,1,5}-{3133,9904,0,1,6}-{3129,9916,0,1,3}-{3133,9916,0,1,0}-{3141,9875,0,1,6}-{3208,9905,0,1,4}-{2852,9577,0,1,1}-{2865,9567,0,1,3}-{2924,3252,2,1,3}-{2926,3255,2,1,4}-{2932,3255,2,1,3}-{2931,3251,2,1,4}-{3194,5448,0,1,3}-{3183,5447,0,1,3}-{3177,5457,0,1,4}-{3187,5456,0,1,1}-{3003,3593,0,1,5}-{3007,3596,0,1,4}-{3025,3595,0,1,4}-{3022,3594,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"91\",\r\n      \"loc_data\": \"{3099,9910,0,1,3}-{3100,9906,0,1,6}-{3212,9906,0,1,6}-{3252,9916,0,1,3}-{3259,9915,0,1,3}-{3272,9913,0,1,6}-{3274,9914,0,1,1}-{3278,9908,0,1,1}-{3275,9911,0,1,5}-{3194,5454,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"92\",\r\n      \"loc_data\": \"{3111,3561,0,1,3}-{3132,9915,0,1,5}-{3095,9909,0,1,3}-{3149,9869,0,1,6}-{3138,9878,0,1,5}-{3137,9869,0,1,3}-{2840,9652,0,1,1}-{2829,9657,0,1,4}-{2819,3288,0,1,1}-{2848,3248,0,1,3}-{2850,3235,0,1,3}-{3117,9671,0,1,1}-{3122,9661,0,1,6}-{3123,9648,0,1,6}-{3005,10362,0,1,1}-{3003,10358,0,1,1}-{3005,10351,0,1,1}-{3003,10345,0,1,5}-{2993,3940,0,1,4}-{2593,9883,0,1,1}-{2590,9885,0,1,4}-{2586,9883,0,1,1}-{2585,9878,0,1,3}-{2537,9845,0,1,1}-{2540,9846,0,1,4}-{2552,9844,0,1,6}-{2556,9846,0,1,4}-{2535,9844,0,1,3}-{2532,9843,0,1,4}-{2530,9845,0,1,3}-{2540,9820,0,1,4}-{2544,9824,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"93\",\r\n      \"loc_data\": \"{3101,9956,0,1,3}-{3104,9948,0,1,0}-{3104,9955,0,1,4}-{3108,9951,0,1,4}-{3108,9954,0,1,1}-{3111,9954,0,1,6}-{3112,9958,0,1,4}-{2841,9625,0,1,4}-{2845,9628,0,1,3}-{2841,9638,0,1,6}-{2845,9645,0,1,1}-{2655,9824,0,1,1}-{2669,9824,0,1,4}-{2667,9823,0,1,5}-{2658,9830,0,1,6}-{2666,9829,0,1,6}-{3194,5460,0,1,6}-{3192,5466,0,1,7}-{2566,9507,0,1,3}-{2562,9505,0,1,1}-{2568,9509,0,1,3}-{3185,5493,0,1,4}-{3182,5494,0,1,6}-{3185,5486,0,1,7}-{3175,5492,0,1,3}-{3169,5496,0,1,4}-{3170,5492,0,1,3}-{3186,5487,0,1,4}-{3169,5491,0,1,2}-{2571,9509,0,1,1}-{2564,9504,0,1,1}-{2566,9505,0,1,1}-{2544,9841,0,1,1}-{2536,9844,0,1,6}-{2527,9844,0,1,3}-{2530,9842,0,1,4}-{2543,9815,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"94\",\r\n      \"loc_data\": \"{2589,9881,0,1,6}-{2591,9882,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"95\",\r\n      \"loc_data\": \"{2616,3283,0,1,3}-{2620,3283,0,1,3}-{2502,2969,0,1,6}-{2507,2971,0,1,2}-{2600,2959,0,1,6}-{2606,2971,0,1,6}-{2606,2963,0,1,4}-{2612,2965,0,1,6}-{2611,2973,0,1,5}-{2613,2963,0,1,3}-{2459,2884,0,1,7}-{2496,2907,0,1,6}-{2489,2887,0,1,7}-{2473,2885,0,1,7}-{2466,2872,0,1,4}-{2452,2883,0,1,5}-{2440,2869,0,1,5}-{2460,2849,0,1,1}-{2451,2842,0,1,4}-{2467,2838,0,1,6}-{2444,2832,0,1,6}-{2498,2845,0,1,3}-{2615,2957,0,1,4}-{2599,2960,0,1,2}-{2609,2966,0,1,0}-{2605,2967,0,1,5}-{2609,2963,0,1,2}-{2496,2857,0,1,4}-{2493,2849,0,1,4}-{2474,2860,0,1,1}-{2470,2865,0,1,4}-{2462,2874,0,1,1}-{2458,2853,0,1,4}-{2454,2876,0,1,5}-{2478,2884,0,1,6}-{2469,2886,0,1,5}-{2442,2876,0,1,1}-{2490,2903,0,1,1}-{2477,2928,0,1,4}-{2492,2956,0,1,1}-{2502,2956,0,1,4}-{2499,2965,0,1,0}-{2508,2968,0,1,4}-{2500,2974,0,1,0}-{3175,3948,0,1,1}-{3200,3931,0,1,1}-{3220,3921,0,1,7}-{2478,3272,0,1,1}-{2465,3276,0,1,1}-{2468,3277,0,1,4}-{2466,3271,0,1,5}-{2468,3277,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"96\",\r\n      \"loc_data\": \"{2842,3450,0,0,0}-{2872,3437,0,0,0}-{2873,3449,0,0,0}-{2868,3456,0,0,0}-{2856,3490,0,0,0}-{2861,3492,0,0,0}-{2862,3505,0,0,0}-{2856,3507,0,0,0}-{3004,3920,0,1,7}-{3007,3925,0,1,3}-{3005,3927,0,1,3}-{3004,3924,0,1,3}-{2988,3918,0,1,2}-{2992,3921,0,1,2}-{2990,3923,0,1,3}-{2988,3925,0,1,6}-{2987,3921,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"97\",\r\n      \"loc_data\": \"{2847,3485,0,0,0}-{2847,3489,0,0,0}-{2833,3511,0,0,0}-{2831,3506,0,0,0}-{2834,3514,0,0,0}-{3003,3921,0,1,6}-{3009,3920,0,1,3}-{3001,3923,0,1,1}-{3001,3927,0,1,4}-{2993,3919,0,1,4}-{2994,3924,0,1,1}-{2988,3918,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"98\",\r\n      \"loc_data\": \"{3014,3294,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"99\",\r\n      \"loc_data\": \"{2624,3319,0,1,1}-{2624,3327,0,1,6}-{2642,3314,0,1,4}-{2646,3325,0,1,1}-{2790,3199,0,1,2}-{2784,3188,0,1,1}-{2779,3207,0,1,1}-{2646,3504,0,1,4}-{2634,3476,0,1,5}-{2651,3477,0,1,5}-{2665,3472,0,1,5}-{2662,3488,0,1,5}-{2672,3505,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"100\",\r\n      \"loc_data\": \"{2551,3408,0,1,6}-{2553,3405,0,1,3}-{2559,3452,0,1,3}-{2567,3440,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"101\",\r\n      \"loc_data\": \"{2555,3407,0,1,3}-{2624,3391,0,1,1}-{2622,3389,0,1,4}-{2619,3390,0,1,4}-{2553,3457,0,1,3}-{2573,3437,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"102\",\r\n      \"loc_data\": \"{2622,3390,0,1,7}-{2622,3390,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"103\",\r\n      \"loc_data\": \"{2501,3289,0,1,1}-{2928,3251,1,1,3}-{3277,3659,0,1,1}-{3280,3658,0,1,1}-{3277,3661,0,1,3}-{3276,3657,0,1,3}-{3241,9907,0,1,4}-{3243,9914,0,1,1}-{3242,9913,0,1,6}-{3242,9916,0,1,5}-{3239,9914,0,1,1}-{2928,3244,1,1,4}-{2924,3253,1,1,3}-{2927,3252,1,1,4}-{2927,3254,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"104\",\r\n      \"loc_data\": \"{3093,3357,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"105\",\r\n      \"loc_data\": \"{2632,3280,0,1,1}-{2633,3274,0,1,3}-{3094,3601,0,1,6}-{3109,3600,0,1,2}-{3091,3604,0,1,0}-{2497,3164,0,1,2}-{3023,4508,0,1,7}-{2696, 3329, 0,1,4}-{2708, 3336, 0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"106\",\r\n      \"loc_data\": \"{2968,3480,0,1,6}-{2968,3490,0,1,3}-{2978,3507,0,1,1}-{2959,3445,0,1,3}-{2807,3377,0,1,6}-{3289,3353,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"107\",\r\n      \"loc_data\": \"{2602,3267,0,1,6}-{2603,3270,0,1,4}-{2607,3268,0,1,5}-{3275,3154,0,1,6}-{3038,9802,0,1,5}-{3041,9804,0,1,6}-{3040,9795,0,1,7}-{3055,9776,0,1,4}-{3039,9769,0,1,6}-{3049,9764,0,1,3}-{3050,9770,0,1,1}-{3039,9765,0,1,1}-{3048,9762,0,1,4}-{3044,9760,0,1,6}-{3048,9779,0,1,1}-{2870,3166,0,1,3}-{2868,3159,0,1,4}-{2867,3172,0,1,5}-{2813,3112,0,1,4}-{2858,3167,0,1,3}-{2846,3153,0,1,3}-{2851,3149,0,1,1}-{2789,2949,0,1,3}-{2787,2943,0,1,3}-{2781,2949,0,1,3}-{3253,9909,0,1,4}-{3300,3312,0,1,1}-{3300,3305,0,1,3}-{3298,3300,0,1,5}-{3298,3294,0,1,0}-{3299,3290,0,1,6}-{2645,9823,0,1,1}-{2641,9819,0,1,7}-{2641,9817,0,1,2}-{2642,9813,0,1,5}-{2639,9809,0,1,2}-{2585,3479,0,1,1}-{2578,3476,0,1,7}-{2588,3485,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"108\",\r\n      \"loc_data\": \"{2715,3218,0,0,0}-{2719,3223,0,0,0}-{2720,3212,0,0,0}-{2722,3220,0,0,0}-{2724,3215,0,0,0}-{2729,3224,0,0,0}-{2733,3225,0,0,0}-{2936,9777,0,0,0}-{2934,9765,0,0,0}-{2932,9755,0,0,0}-{2726,3217,0,0,0}-{2728,3218,0,0,0}-{2735,3219,0,0,0}-{2723,3212,0,0,0}-{2721,3216,0,0,0}-{2716,3219,0,0,0}-{2725,3227,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"109\",\r\n      \"loc_data\": \"{2601,3269,0,0,0}-{2604,3272,0,0,0}-{2605,3268,0,0,0}-{2606,3271,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"110\",\r\n      \"loc_data\": \"{3050,10337,0,1,4}-{3047,10340,0,1,4}-{3048,10346,0,1,4}-{3048,10346,0,1,3}-{3305,9400,0,1,1}-{3296,9378,0,1,3}-{3234,5497,0,1,1}-{2564,9887,0,1,4}-{2581,9897,0,1,1}-{2577,9888,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"111\",\r\n      \"loc_data\": \"{2920,3800,0,1,3}-{2955,3901,0,1,6}-{3043,9581,0,1,1}-{3055,9577,0,1,6}-{3061,9576,0,1,4}-{3055,9571,0,1,7}-{3052,9566,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"112\",\r\n      \"loc_data\": \"{2699,3206,0,1,1}-{3165,9880,0,1,3}-{3168,9880,0,1,1}-{3159,9903,0,1,4}-{2825,3249,0,1,6}-{3156,9907,0,1,0}-{2554,3411,0,1,3}-{2560,3406,0,1,3}-{2554,3400,0,1,3}-{2551,3401,0,1,4}-{3202,5490,0,1,4}-{3237,5555,0,1,5}-{2543,9823,0,1,3}-{2540,9819,0,1,5}-{2543,9817,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"113\",\r\n      \"loc_data\": \"{2622,3272,0,0,0}-{2896,2946,0,0,0}-{2918,2961,0,0,0}-{2926,2986,0,0,0}-{2930,3044,0,0,0}-{2926,3056,0,0,0}-{2916,3065,0,0,0}-{2835,9526,0,1,4}-{2832,9514,0,1,4}-{2825,9521,0,1,5}-{2846,9520,0,1,3}-{2838,9508,0,1,0}-{2832,9495,0,1,6}-{2838,9492,0,1,6}-{2851,9485,0,1,3}-{2847,9481,0,1,3}-{2865,9494,0,1,3}-{2855,9502,0,1,2}-{2870,9496,0,1,1}-{2851,9511,0,1,2}-{2853,9519,0,1,3}-{2857,9520,0,1,6}-{2863,9525,0,1,1}-{2869,9530,0,1,5}-{2865,9515,0,1,4}-{2868,9507,0,1,3}-{2874,9512,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"115\",\r\n      \"loc_data\": \"{2572,3028,0,1,2}-{2550,3046,0,1,4}-{2572,3034,0,1,3}-{2576,3026,0,1,4}-{2534,2975,0,1,1}-{2518,2974,0,1,1}-{2573,2987,0,1,1}-{2592,2967,0,1,3}-{2589,2961,0,0,2}-{2575,2989,0,1,0}-{2574,2992,0,1,4}-{2521,2974,0,1,4}-{2500,3092,0,1,6}-{2524,3375,0,1,3}-{2524,3374,0,1,3}-{2529,3374,0,1,3}-{2532,3375,0,1,1}-{2532,3373,0,1,1}-{2527,3376,0,1,6}-{2525,3373,0,1,7}-{2525,3373,0,1,5}-{2511,3086,0,1,1}-{2511,3084,0,1,3}-{2503,3114,0,1,6}-{2509,3120,0,1,4}-{2506,3107,0,1,4}-{2500,3112,0,1,4}-{2521,3045,0,1,6}-{2517,3043,0,1,5}-{2500,3095,0,1,3}-{2497,3090,0,1,4}-{2502,3099,0,1,4}-{2504,3097,0,1,4}-{2503,3134,0,1,3}-{2554,3196,0,1,7}-{2519,3039,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"116\",\r\n      \"loc_data\": \"{2622,3277,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"117\",\r\n      \"loc_data\": \"{2907,9737,0,1,5}-{2913,9733,0,1,2}-{2904,9728,0,1,6}-{2902,9736,0,1,3}-{2908,9732,0,1,4}-{2909,9726,0,1,1}-{3118,9845,0,1,4}-{3111,9844,0,1,6}-{3123,9845,0,1,3}-{3114,9833,0,1,3}-{3110,9841,0,1,1}-{3119,9839,0,1,1}-{3097,9832,0,1,0}-{3101,9832,0,1,1}-{3107,9829,0,1,3}-{3115,9831,0,1,4}-{3109,9835,0,1,4}-{3044,10321,0,1,2}-{3044,10316,0,1,4}-{3045,10308,0,1,4}-{3048,10317,0,1,2}-{2548,3146,0,1,1}-{2542,3145,0,1,4}-{2503,3150,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"118\",\r\n      \"loc_data\": \"{3042,3465,0,1,1}-{3035,3443,0,1,6}-{3042,3468,0,1,3}-{3008,3449,0,1,4}-{3000,9842,0,1,2}-{2996,9844,0,1,4}-{3003,9828,0,1,1}-{2995,9811,0,1,3}-{3002,9811,0,1,3}-{2994,9809,0,1,5}-{3004,9813,0,1,6}-{2998,9828,0,1,4}-{3004,9799,0,1,4}-{2997,9809,0,1,0}-{3019,9813,0,1,4}-{2983,9807,0,1,6}-{3012,9812,0,1,3}-{3010,9811,0,1,3}-{2964,9811,0,1,1}-{3025,9801,0,1,4}-{3026,9824,0,1,1}-{3018,9819,0,1,6}-{3028,9815,0,1,3}-{3024,9811,0,1,4}-{3021,9826,0,1,5}-{3022,9832,0,1,1}-{3023,9833,0,1,6}-{3027,9833,0,1,3}-{3028,9828,0,1,6}-{3023,9814,0,1,6}-{3042,9831,0,1,4}-{3024,9824,0,1,6}-{3019,9847,0,1,0}-{3034,9847,0,1,7}-{3021,9851,0,1,5}-{3043,9824,0,1,3}-{3038,9821,0,1,1}-{3044,9818,0,1,4}-{3047,9814,0,1,4}-{3037,9814,0,1,6}-{2603,3056,0,1,0}-{2598,3064,0,1,3}-{2589,3068,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"119\",\r\n      \"loc_data\": \"{3248,3794,0,1,1}-{2925,9766,0,1,7}-{2921,9758,0,1,3}-{2935,9770,0,1,1}-{2935,9761,0,1,0}-{3029,10313,0,1,4}-{3028,10309,0,1,4}-{3033,10311,0,1,6}-{3035,10309,0,1,1}-{3035,10313,0,1,1}-{3244,3797,0,1,3}-{3245,3790,0,1,4}-{3239,3781,0,1,5}-{3253,3791,0,1,1}-{3245,3802,0,1,1}-{3250,3808,0,1,3}-{3246,3800,0,1,6}-{3246,3795,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"122\",\r\n      \"loc_data\": \"{2996,9574,0,1,6}-{3007,9579,0,1,7}-{3001,9580,0,1,4}-{3018,9580,0,1,3}-{3021,9585,0,1,4}-{3024,9582,0,1,4}-{2507,3726,0,1,2}-{2523,3724,0,1,3}-{2535,9556,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"123\",\r\n      \"loc_data\": \"{3023,3801,0,1,4}-{3021,3805,0,1,0}-{3026,3805,0,1,1}-{3029,3801,0,1,3}-{3020,3808,0,1,3}-{3027,3810,0,1,6}-{3032,3805,0,1,1}-{2533,9554,0,1,4}-{2531,9556,0,1,5}-{2522,9562,0,1,4}-{2524,9558,0,1,4}-{2518,9562,0,1,6}-{2515,9566,0,1,3}-{2517,9573,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"124\",\r\n      \"loc_data\": \"{3118,9974,0,1,6}-{3119,9971,0,1,3}-{3120,9976,0,1,3}-{3124,9974,0,1,6}-{3142,5532,0,1,6}-{3141,5531,0,1,6}-{3139,5526,0,1,3}-{3143,5524,0,1,3}-{3148,5523,0,1,4}-{3148,5531,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"125\",\r\n      \"loc_data\": \"{2969,3916,0,1,0}-{2963,3928,0,1,0}-{2973,3941,0,1,0}-{2951,3908,0,1,0}-{2950,3912,0,1,0}-{2952,3915,0,1,0}-{2948,3917,0,1,0}-{2951,3923,0,1,0}-{2956,3924,0,1,0}-{2957,3931,0,1,0}-{2950,3939,0,1,0}-{2845,3517,0,1,4}-{2848,3515,0,1,4}-{3050,9570,0,1,3}-{2958,3867,0,1,3}-{2956,3857,0,1,6}-{2952,3862,0,1,3}-{2949,3858,0,1,4}-{2955,3875,0,1,7}-{2954,3874,0,1,5}-{2962,3876,0,1,1}-{2961,3877,0,1,3}-{2947,3878,0,1,6}-{2959,3884,0,1,4}-{2956,3885,0,1,3}-{2956,3886,0,1,3}-{2948,3886,0,1,1}-{3043,9579,0,1,2}-{3056,9585,0,1,0}-{3058,9575,0,1,1}-{3052,9582,0,1,0}-{3049,9577,0,1,4}-{3042,9586,0,1,6}-{3052,9588,0,1,1}-{3049,9590,0,1,5}-{3060,9578,0,1,3}-{3054,9566,0,1,7}-{3227,5443,0,1,5}-{3220,5448,0,1,5}-{3208,5443,0,1,6}-{3207,5448,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"126\",\r\n      \"loc_data\": \"{2381,4422,0,1,5}-{2381,4425,0,1,4}-{2382,4429,0,1,0}-{2385,4419,0,1,0}-{2388,4421,0,1,1}-{2388,4428,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"127\",\r\n      \"loc_data\": \"{2956,9794,0,0,0}-{2954,9786,0,0,0}-{2966,9790,0,0,0}-{2963,9781,0,0,0}-{3193,3959,0,0,0}-{3188,3960,0,0,0}-{3190,3962,0,0,0}-{3187,3959,0,0,0}-{3192,3961,0,0,0}-{3187,3960,0,0,0}-{3193,3959,0,0,0}-{3187,3961,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"128\",\r\n      \"loc_data\": \"{2610,3274,0,0,0}-{2610,3275,0,0,0}-{2615,3276,0,0,0}-{2616,3275,0,0,0}-{2616,3276,0,0,0}-{3193,3958,0,0,0}-{2877,3154,0,0,0}-{2878,3153,0,0,0}-{2870,3161,0,0,0}-{2822,3192,0,1,5}-{2770,3213,0,0,0}-{2759,3179,0,0,0}-{2741,3173,0,0,0}-{2757,3170,0,0,0}-{2746,3167,0,0,0}-{2784,3173,0,0,0}-{2746,3147,0,0,0}-{2733,3162,0,0,0}-{2730,3146,0,0,0}-{2782,3104,0,0,0}-{2782,3103,0,0,0}-{2777,3090,0,0,0}-{2773,3089,0,0,0}-{2803,3115,0,0,0}-{2808,3112,0,0,0}-{2887,3145,0,0,0}-{2824,3084,0,0,0}-{2821,3078,0,0,0}-{2817,3078,0,0,0}-{2837,3076,0,0,0}-{2844,3040,0,0,0}-{2840,3049,0,0,0}-{2837,3043,0,0,0}-{2834,3042,0,0,0}-{2827,3026,0,0,0}-{2824,3018,0,0,0}-{2830,3021,0,0,0}-{2832,3018,0,0,0}-{2925,2969,0,0,0}-{2939,2977,0,0,0}-{2936,2980,0,0,0}-{2933,2976,0,0,0}-{2930,2971,0,0,0}-{2928,2984,0,0,0}-{2942,2983,0,0,0}-{2936,2989,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"131\",\r\n      \"loc_data\": \"{2594,3271,0,1,4}-{2593,3269,0,1,1}-{2592,3272,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"132\",\r\n      \"loc_data\": \"{2600,3275,0,1,6}-{2600,3279,0,1,4}-{2603,3279,0,1,3}-{2603,3281,0,1,3}-{2604,3277,0,1,6}-{2867,3163,0,1,3}-{2883,3147,0,1,6}-{2856,3144,0,1,7}-{2812,3180,0,1,1}-{2791,3181,0,1,3}-{2749,3173,0,1,3}-{2758,3170,0,1,4}-{2754,3167,0,1,3}-{2754,3175,0,1,1}-{2891,3079,0,1,1}-{2897,3064,0,1,0}-{2896,3071,0,1,1}-{2837,3038,0,1,0}-{2837,3041,0,1,3}-{2831,3031,0,1,3}-{2818,3054,0,1,4}-{2832,3050,0,1,6}-{2832,3011,0,1,4}-{2784,3005,0,1,1}-{2782,3008,0,1,1}-{2791,2999,0,1,2}-{2791,2988,0,1,1}-{2795,2987,0,1,6}-{2797,2985,0,1,3}-{2876,3011,0,1,3}-{2863,3021,0,1,3}-{2867,3016,0,1,1}-{2871,3022,0,1,4}-{2877,3028,0,1,3}-{2868,3012,0,1,4}-{2910,3026,0,1,5}-{2902,3010,0,1,1}-{2928,3029,0,1,4}-{2920,3027,0,1,6}-{2875,2936,0,1,2}-{2945,2979,0,1,3}-{2953,2965,0,1,4}-{2952,2982,0,1,4}-{2955,3003,0,1,3}-{2944,2999,0,1,5}-{2932,3023,0,1,3}-{2933,3024,0,1,3}-{2929,3009,0,1,0}-{2927,3022,0,1,1}-{2926,3023,0,1,6}-{2927,3020,0,1,7}-{2908,3078,0,1,4}-{2920,3081,0,1,4}-{2890,3082,0,1,1}-{2916,3082,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"133\",\r\n      \"loc_data\": \"{3079,3618,0,0,7}-{3070,3629,0,0,3}-{3073,3634,0,0,6}-{3088,3636,0,0,3}-{3092,3637,0,0,2}-{3073,3636,0,0,0}-{3070,3657,0,0,5}-{3109,3634,0,0,2}-{3114,3628,0,0,1}-{3107,3626,0,0,2}-{3118,3639,0,0,5}-{3119,3627,0,0,3}-{3119,3604,0,0,1}-{3136,3612,0,0,5}-{3124,3586,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"134\",\r\n      \"loc_data\": \"{3088,9945,0,1,3}-{3089,9943,0,1,0}-{3090,9944,0,1,7}-{3043,10262,0,1,1}-{3044,10252,0,1,4}-{3051,10257,0,1,3}-{3055,10253,0,1,3}-{3067,10255,0,1,3}-{3067,10257,0,1,3}-{3068,10253,0,1,2}-{3069,10257,0,1,4}-{3069,10259,0,1,0}-{2876,9810,0,1,4}-{2876,9803,0,1,5}-{2869,9799,0,1,4}-{2858,9804,0,1,7}-{2857,9821,0,1,4}-{2869,9816,0,1,0}-{2849,9817,0,1,6}-{3278,5477,0,1,1}-{3278,5476,0,1,2}-{3277,5451,0,1,5}-{3283,5449,0,1,4}-{3280,5476,0,1,3}-{3274,5463,0,1,1}-{3272,5477,0,1,1}-{3271,5473,0,1,4}-{3270,5459,0,1,1}-{3271,5454,0,1,3}-{3278,5525,0,1,3}-{3272,5529,0,1,3}-{3270,5536,0,1,6}-{3277,5536,0,1,4}-{3277,5512,0,1,3}-{3279,5516,0,1,6}-{3280,5531,0,1,6}-{2598,9558,0,1,6}-{2599,9557,0,1,4}-{2598,9556,0,1,4}-{2600,9555,0,1,3}-{2601,9553,0,1,1}-{2572,9569,0,1,3}-{2599,9552,0,1,6}-{2601,9560,0,1,1}-{2599,9564,0,1,6}-{2600,9563,0,1,4}-{2597,9569,0,1,1}-{2594,9571,0,1,2}-{2589,9571,0,1,4}-{2589,9574,0,1,3}-{2584,9572,0,1,6}-{2581,9575,0,1,6}-{2583,9577,0,1,6}-{2582,9572,0,1,3}-{2572,9568,0,1,1}-{2570,9567,0,1,1}-{2572,9571,0,1,3}-{2575,9572,0,1,0}-{2577,9574,0,1,3}-{2580,9578,0,1,3}-{2597,9572,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"138\",\r\n      \"loc_data\": \"{2375,3434,0,1,4}-{2379,3438,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"139\",\r\n      \"loc_data\": \"{2378,3432,0,1,2}-{2375,3438,0,1,7}-{2376,3431,0,1,1}-{2380,3438,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"141\",\r\n      \"loc_data\": \"{3324,5510,0,1,3}-{3286,5512,0,1,1}-{3310,5524,0,1,2}-{3289,5527,0,1,7}-{3296,5519,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"142\",\r\n      \"loc_data\": \"{2514,3194,0,1,3}-{2547,3178,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"143\",\r\n      \"loc_data\": \"{2787,2929,0,1,6}-{2835,2934,0,1,4}-{2889,2936,0,1,2}-{2921,2937,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"144\",\r\n      \"loc_data\": \"{3043,9779,0,1,4}-{3047,9769,0,1,1}-{2847,3282,0,1,6}-{2846,3293,0,1,6}-{2850,3301,0,1,4}-{2852,3308,0,1,4}-{2861,3297,0,1,1}-{2863,3283,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"146\",\r\n      \"loc_data\": \"{2827,3139,0,1,0}-{2976,3053,0,1,0}-{2985,3038,0,1,0}-{2994,3048,0,1,5}-{2992,3030,0,1,0}-{2896,2992,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"151\",\r\n      \"loc_data\": \"{2756,3156,0,1,4}-{2760,3152,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"152\",\r\n      \"loc_data\": \"{3103,3347,0,0,0}-{3107,3337,0,0,0}-{3107,3342,0,0,0}-{3107,3344,0,0,0}-{3108,3346,0,0,0}-{3111,3339,0,0,0}-{3111,3348,0,0,0}-{3115,3344,0,0,0}-{3120,3344,0,0,0}-{3122,3335,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"153\",\r\n      \"loc_data\": \"{2415,4466,0,0,0}-{2419,4427,0,0,0}-{2421,4468,0,0,0}-{2426,4431,0,0,0}-{2500,3492,0,1,4}-{2245,3147,0,1,4}-{2246,3143,0,1,0}-{2242,3140,0,1,3}-{2247,3149,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"154\",\r\n      \"loc_data\": \"{2394,4453,0,0,0}-{2394,4457,0,0,0}-{2406,4447,0,0,0}-{2568,3470,0,1,5}-{2523,3164,0,1,4}-{2534,3173,0,1,3}-{2538,3160,0,1,3}-{2246,3144,0,1,4}-{2245,3147,0,1,4}-{2240,3147,0,1,3}-{2247,3142,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"155\",\r\n      \"loc_data\": \"{3235,3222,0,0,0}-{3255,3226,0,0,0}-{2561,3471,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"157\",\r\n      \"loc_data\": \"{2502,3521,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"162\",\r\n      \"loc_data\": \"{2480,3426,0,1,6}-{2489,3429,0,1,1}-{2480,3431,0,1,0}-{2475,3418,0,1,4}-{2470,3423,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"166\",\r\n      \"loc_data\": \"{2450,3480,1,0,1}-{2449,3480,1,0,1}-{2448,3480,1,0,1}-{2440,3488,1,0,4}-{2440,3487,1,0,4}-{2448,3427,1,0,6}-{2448,3424,1,0,6}-{2443,3424,1,0,3}-{2443,3425,1,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"170\",\r\n      \"loc_data\": \"{2890,3175,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"172\",\r\n      \"loc_data\": \"{3225,3369,0,1,3}-{3226,3371,0,1,7}-{3230,3372,0,1,0}-{3230,3370,0,1,3}-{3229,3368,0,1,1}-{3227,3367,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"174\",\r\n      \"loc_data\": \"{3095,3232,0,1,6}-{3095,3231,0,1,0}-{3225,3370,0,1,4}-{3230,3370,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"175\",\r\n      \"loc_data\": \"{3084,3495,0,1,4}-{2994,9549,0,1,6}-{2993,9551,0,1,6}-{2995,9555,0,1,6}-{2999,9548,0,1,0}-{3182,3365,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"178\",\r\n      \"loc_data\": \"{2892,9709,0,1,6}-{2915,9708,0,1,7}-{2899,9702,0,1,1}-{2907,9711,0,1,4}-{2938,9811,0,1,6}-{3096,3220,0,1,1}-{3273,3507,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"179\",\r\n      \"loc_data\": \"{3025,3511,1,1,3}-{3038,3505,0,1,4}-{3026,3494,0,1,6}-{3026,3505,0,1,4}-{3026,3512,0,1,6}-{3025,3512,0,1,4}-{3027,3512,0,1,6}-{3030,3511,0,1,6}-{3028,3511,0,1,1}-{3039,3855,0,1,4}-{3031,3852,0,1,1}-{3032,3849,0,1,3}-{3023,3849,0,1,6}-{3022,3847,0,1,3}-{3023,3514,1,1,3}-{3014,3516,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"180\",\r\n      \"loc_data\": \"{2744,3519,0,0,0}-{2957,3238,0,1,4}-{2988,3423,0,1,7}-{2953,3240,0,1,3}-{3011,3277,0,1,1}-{3009,3280,0,1,1}-{3110,3295,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"181\",\r\n      \"loc_data\": \"{3105,9942,0,1,3}-{3106,9934,0,1,3}-{3109,9930,0,1,1}-{2937,9847,0,0,0}-{2930,9850,0,0,0}-{2934,9846,0,0,0}-{2930,9845,0,0,0}-{2563,3355,0,1,4}-{2561,3355,0,1,3}-{2561,3357,0,1,1}-{2563,3358,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"182\",\r\n      \"loc_data\": \"{3041,3958,0,0,0}-{3043,3958,0,0,0}-{3039,3958,0,0,0}-{3039,3950,0,0,0}-{3041,3958,0,0,0}-{3041,3954,0,0,0}-{3038,3957,0,0,0}-{3041,3954,0,0,0}-{3038,3955,0,0,0}-{3690,2966,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"183\",\r\n      \"loc_data\": \"{3043,3958,0,0,0}-{3043,3950,0,0,0}-{3042,3950,0,0,0}-{3039,3951,0,0,0}-{3044,3949,0,0,0}-{2805,3160,0,0,0}-{2803,3190,0,1,4}-{2795,3167,0,0,0}-{2793,3184,0,1,3}-{3670,2977,0,1,1}-{3654,2960,0,1,0}-{3698,2969,0,1,2}-{3676,2991,0,1,3}-{3666,2994,0,1,7}-{3666,2981,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"184\",\r\n      \"loc_data\": \"{2994,9584,0,1,6}-{2992,9573,0,1,1}-{2990,9583,0,1,4}-{2998,9572,0,1,2}-{2998,9573,0,1,4}-{2989,9578,0,1,0}-{2993,9566,0,1,4}-{2994,9570,0,1,3}-{3659,2952,0,1,6}-{3669,2961,0,1,4}-{3683,2977,0,1,6}-{3668,2981,0,1,3}-{3655,2973,0,1,1}-{3675,2967,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"186\",\r\n      \"loc_data\": \"{3158,3571,0,0,7}-{3170,3575,0,0,0}-{3172,3578,0,0,5}-{3175,3564,0,0,4}-{3176,3570,0,0,2}-{3180,3565,0,0,5}-{3189,3565,0,0,7}-{3189,3580,0,0,0}-{3192,3568,0,0,7}-{3159,3563,0,0,1}-{3163,3572,0,0,6}-{3173,3574,0,0,3}-{3179,3561,0,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"187\",\r\n      \"loc_data\": \"{3291,3924,0,1,4}-{3294,3930,0,1,4}-{3286,3933,0,1,6}-{3285,3928,0,1,6}-{3287,3935,1,1,6}-{3286,3927,1,1,6}-{3283,3936,2,1,6}-{3292,3932,1,1,4}-{3291,3940,0,1,6}-{3280,3943,0,1,6}-{3278,3926,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"188\",\r\n      \"loc_data\": \"{2933,3516,0,1,3}-{2935,3515,0,1,3}-{2932,3514,0,1,2}-{3158,5497,0,1,6}-{3157,5494,0,1,1}-{3155,5498,0,1,6}-{3140,5494,0,1,6}-{3143,5493,0,1,5}-{3142,5497,0,1,4}-{3156,5494,0,1,5}-{3148,5496,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"189\",\r\n      \"loc_data\": \"{3151,5489,0,1,7}-{3145,5495,0,1,3}-{3142,5493,0,1,3}-{3149,5489,0,1,6}-{3155,5491,0,1,2}-{3142,5497,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"190\",\r\n      \"loc_data\": \"{2837,9815,0,1,1}-{2833,9814,0,1,2}-{2831,9808,0,1,3}-{2829,9804,0,1,7}-{2825,9806,0,1,1}-{2828,9809,0,1,3}-{2826,9813,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"191\",\r\n      \"loc_data\": \"{2730,3161,0,0,0}-{2729,3159,0,0,0}-{2727,3163,0,0,0}-{2725,3157,0,0,0}-{2726,3161,0,0,0}-{2725,3161,0,0,0}-{2723,3155,0,0,0}-{2723,3156,0,0,0}-{2725,3162,0,0,0}-{2775,3066,0,0,0}-{2802,3071,0,0,0}-{2800,3016,0,0,0}-{2868,3053,0,0,0}-{2770,3018,0,0,0}-{2770,3014,0,0,0}-{2840,3018,0,0,0}-{2919,2983,0,0,0}-{2937,2993,0,0,0}-{2940,2994,0,0,0}-{2940,2997,0,0,0}-{2942,2997,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"192\",\r\n      \"loc_data\": \"{3027,3612,0,1,6}-{3021,3611,0,1,1}-{3036,3613,0,1,4}-{3024,3606,0,1,1}-{3023,3634,0,1,3}-{3026,3637,0,1,5}-{3031,3637,0,1,2}-{3035,3637,0,1,6}-{3034,3632,0,1,6}-{3035,3629,0,1,6}-{3035,3625,0,1,5}-{3029,3626,0,1,3}-{3032,3626,0,1,4}-{3022,3626,0,1,1}-{3023,3623,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"193\",\r\n      \"loc_data\": \"{2581,9505,0,1,4}-{2594,9497,0,1,1}-{2593,9499,0,1,7}-{2587,9498,0,1,3}-{2573,9500,0,1,5}-{2579,9503,0,1,5}-{2580,9500,0,1,4}-{2578,9497,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"195\",\r\n      \"loc_data\": \"{3042,3708,0,0,6}-{3037,3702,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"196\",\r\n      \"loc_data\": \"{3038,3670,0,1,1}-{3034,3674,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"198\",\r\n      \"loc_data\": \"{3190,3358,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"199\",\r\n      \"loc_data\": \"{3079,3443,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"201\",\r\n      \"loc_data\": \"{2931,9692,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"205\",\r\n      \"loc_data\": \"{2613,9523,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"206\",\r\n      \"loc_data\": \"{3026,3455,0,1,6}-{3015,3458,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"208\",\r\n      \"loc_data\": \"{2568,3459,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"209\",\r\n      \"loc_data\": \"{3013,3452,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"216\",\r\n      \"loc_data\": \"{2851,3348,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"217\",\r\n      \"loc_data\": \"{2852,3343,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"222\",\r\n      \"loc_data\": \"{2851,3351,0,0,7}-{2849,3348,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"225\",\r\n      \"loc_data\": \"{2641,3437,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"227\",\r\n      \"loc_data\": \"{2643,3440,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"228\",\r\n      \"loc_data\": \"{2634,3427,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"229\",\r\n      \"loc_data\": \"{2628,3413,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"230\",\r\n      \"loc_data\": \"{2649,3454,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"231\",\r\n      \"loc_data\": \"{2650,3468,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"232\",\r\n      \"loc_data\": \"{2819,3487,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"237\",\r\n      \"loc_data\": \"{2769,3403,0,1,0}-{2766,3402,0,1,3}-{2770,3402,0,1,0}-{2772,3404,0,1,1}-{2767,3405,1,1,0}-{2771,3403,1,1,6}-{2767,3401,1,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"239\",\r\n      \"loc_data\": \"{2758,3516,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"240\",\r\n      \"loc_data\": \"{2760,3501,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"241\",\r\n      \"loc_data\": \"{2762,3498,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"242\",\r\n      \"loc_data\": \"{2764,3509,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"243\",\r\n      \"loc_data\": \"{2756,3513,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"244\",\r\n      \"loc_data\": \"{2765,3504,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"245\",\r\n      \"loc_data\": \"{2755,3517,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"247\",\r\n      \"loc_data\": \"{2769,3402,2,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"250\",\r\n      \"loc_data\": \"{2924,3405,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"251\",\r\n      \"loc_data\": \"{2761,3512,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"253\",\r\n      \"loc_data\": \"{2616,3172,0,1,1}-{2583,3142,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"254\",\r\n      \"loc_data\": \"{2565,3150,0,1,6}-{2564,3146,0,1,5}-{2572,3143,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"255\",\r\n      \"loc_data\": \"{2601,3195,0,1,3}-{2615,3188,0,1,6}-{2606,3186,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"256\",\r\n      \"loc_data\": \"{2568,3144,0,1,3}-{2606,3180,0,1,5}-{2600,3184,0,1,4}-{2598,3185,0,1,6}-{2593,3175,0,1,2}-{2594,3182,0,1,3}-{2594,3188,0,1,3}-{2593,3193,0,1,3}-{2592,3179,0,1,1}-{2605,3171,0,1,3}-{2581,3170,0,1,6}-{2580,3166,0,1,6}-{2577,3163,0,1,1}-{2585,3150,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"259\",\r\n      \"loc_data\": \"{2567,3140,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"260\",\r\n      \"loc_data\": \"{2589,3142,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"261\",\r\n      \"loc_data\": \"{2587,3142,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"262\",\r\n      \"loc_data\": \"{2616,3162,0,0,0}-{2616,3161,0,0,0}-{2596,3142,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"263\",\r\n      \"loc_data\": \"{2597,3143,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"265\",\r\n      \"loc_data\": \"{2616,3167,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"267\",\r\n      \"loc_data\": \"{2601,3168,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"268\",\r\n      \"loc_data\": \"{2583,3171,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"278\",\r\n      \"loc_data\": \"{3209,3215,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"279\",\r\n      \"loc_data\": \"{2604,3209,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"281\",\r\n      \"loc_data\": \"{2604,3219,0,0,0}-{2609,3207,0,0,0}-{2618,3211,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"282\",\r\n      \"loc_data\": \"{3280,3494,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"284\",\r\n      \"loc_data\": \"{2953,3450,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"285\",\r\n      \"loc_data\": \"{3110,3330,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"286\",\r\n      \"loc_data\": \"{3111,3367,2,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"287\",\r\n      \"loc_data\": \"{2770,3403,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"288\",\r\n      \"loc_data\": \"{3110,3366,2,0,2}-{2677,3655,0,1,3}-{2681,3653,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"289\",\r\n      \"loc_data\": \"{2616,3302,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"290\",\r\n      \"loc_data\": \"{2614,3306,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"296\",\r\n      \"loc_data\": \"{3084,3518,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"297\",\r\n      \"loc_data\": \"{3093,3518,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"298\",\r\n      \"loc_data\": \"{3113,3513,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"299\",\r\n      \"loc_data\": \"{3113,3511,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"300\",\r\n      \"loc_data\": \"{3105,9569,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"302\",\r\n      \"loc_data\": \"{2519,3429,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"304\",\r\n      \"loc_data\": \"{2520,3496,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"305\",\r\n      \"loc_data\": \"{2511,3484,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"306\",\r\n      \"loc_data\": \"{2514,9580,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"307\",\r\n      \"loc_data\": \"{2968,3206,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"308\",\r\n      \"loc_data\": \"{2611,3393,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"309\",\r\n      \"loc_data\": \"{2716,3530,0,0,0}-{2840,3356,0,0,4}-{2561,3374,0,0,4}-{2562,3374,0,0,4}-{2566,3370,0,0,4}-{2633,3693,0,0,4}-{2633,3694,0,0,4}-{2215,3248,0,0,4}-{2217,3245,0,0,4}-{2213,3241,0,0,4}-{2840,3356,0,0,0}-{2840,3356,0,0,0}-{3104,3424,0,0,0}-{3104,3425,0,0,0}-{2561,3374,0,0,0}-{2561,3374,0,0,0}-{2562,3374,0,0,0}-{2562,3374,0,0,0}-{2566,3370,0,0,0}-{2566,3370,0,0,0}-{2637,3444,0,0,0}-{2633,3693,0,0,0}-{2633,3693,0,0,0}-{2633,3694,0,0,0}-{2633,3694,0,0,0}-{2215,3248,0,0,0}-{2215,3248,0,0,0}-{2217,3245,0,0,0}-{2217,3245,0,0,0}-{2213,3241,0,0,0}-{2213,3241,0,0,0}-{2860,2972,0,0,0}-{2860,2972,0,0,2}-{160,41,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"310\",\r\n      \"loc_data\": \"{2537,3406,0,0,4}-{2527,3412,0,0,4}-{2507,3421,0,0,4}-{2508,3421,0,0,4}-{2537,3406,0,0,0}-{2537,3406,0,0,0}-{2527,3412,0,0,0}-{2527,3412,0,0,0}-{2507,3421,0,0,0}-{2507,3421,0,0,0}-{2508,3421,0,0,0}-{2508,3421,0,0,0}-{3239,3243,0,0,6}-{3239,3241,0,0,6}-{3238,3252,0,0,6}-{2860,2972,0,0,6}-{2865,2972,0,0,4}-{162,30,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"312\",\r\n      \"loc_data\": \"{2860,3426,0,0,1}-{162,30,0,0,4}-{161,41,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"313\",\r\n      \"loc_data\": \"{2853,3423,0,0,1}-{162,30,0,0,4}-{159,41,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"316\",\r\n      \"loc_data\": \"{2986,3176,0,0,4}-{3086,3227,0,0,1}-{2996,3157,0,0,1}-{2986,3176,0,0,0}-{2986,3176,0,0,0}-{3085,3230,0,0,0}-{162,41,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"322\",\r\n      \"loc_data\": \"{2641,3700,0,0,4}-{2640,3700,0,0,4}-{2266,3253,0,0,4}-{2262,3249,0,0,4}-{2777,2740,0,0,4}-{2780,2741,0,0,4}-{2788,2741,0,0,4}-{2771,2733,0,0,4}-{2771,2734,0,0,4}-{2641,3700,0,0,0}-{2641,3700,0,0,0}-{2641,3700,0,0,0}-{2640,3700,0,0,0}-{2640,3700,0,0,0}-{2640,3700,0,0,0}-{2266,3253,0,0,0}-{2266,3253,0,0,0}-{2266,3253,0,0,0}-{2262,3249,0,0,0}-{2262,3249,0,0,0}-{2262,3249,0,0,0}-{2777,2740,0,0,0}-{2777,2740,0,0,0}-{2777,2740,0,0,0}-{2780,2741,0,0,0}-{2780,2741,0,0,0}-{2780,2741,0,0,0}-{2788,2741,0,0,0}-{2788,2741,0,0,0}-{2788,2741,0,0,0}-{2771,2733,0,0,0}-{2771,2733,0,0,0}-{2771,2733,0,0,0}-{2771,2734,0,0,0}-{2771,2734,0,0,0}-{2771,2734,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"323\",\r\n      \"loc_data\": \"{3259,3204,0,0,3}-{3248,3161,0,0,4}-{3259,3206,0,0,3}-{2516,3575,0,0,7}-{2511,3562,0,0,7}-{2498,3547,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"324\",\r\n      \"loc_data\": \"{2645,3708,0,0,1}-{2648,3708,0,0,1}-{2632,3427,0,0,0}-{2647,3711,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"325\",\r\n      \"loc_data\": \"{2671,3160,0,0,4}-{2672,3160,0,0,4}-{2678,3160,0,0,4}-{2682,3160,0,0,4}-{2683,3160,0,0,4}-{2686,3162,0,0,4}-{2671,3160,0,0,0}-{2671,3160,0,0,0}-{2672,3160,0,0,0}-{2672,3160,0,0,0}-{2678,3160,0,0,0}-{2678,3160,0,0,0}-{2682,3160,0,0,0}-{2682,3160,0,0,0}-{2683,3160,0,0,0}-{2683,3160,0,0,0}-{2686,3162,0,0,0}-{2686,3162,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"326\",\r\n      \"loc_data\": \"{2840,3431,0,0,0}-{3246,3156,0,0,0}-{3245,3152,0,0,0}-{3242,3148,0,0,0}-{2855,3423,0,0,1}-{3267,3148,0,0,6}-{3276,3140,0,0,6}-{3275,3140,0,0,6}-{3169,3266,0,0,3}-{3173,3274,0,0,3}-{2607,3416,0,0,1}-{2604,3417,0,0,1}-{2602,3419,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"333\",\r\n      \"loc_data\": \"{2845,3429,0,0,6}-{2923,3178,0,0,6}-{2923,3180,0,0,6}-{2926,3180,0,0,6}-{2926,3177,0,0,6}-{2602,3411,0,0,3}-{2605,3413,0,0,3}-{2609,3416,0,0,3}-{2610,3413,0,0,3}-{2605,3421,0,0,1}-{2602,3423,0,0,1}-{2603,3426,0,0,1}-{3128,3510,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"334\",\r\n      \"loc_data\": \"{2639,3698,0,0,4}-{2642,3698,0,0,4}-{2267,3253,0,0,4}-{2273,3247,0,0,4}-{2699,2702,0,0,4}-{2694,2706,0,0,4}-{2700,2702,0,0,4}-{2707,2698,0,0,4}-{2612,3411,0,0,0}-{2627,3415,0,0,0}-{2639,3698,0,0,0}-{2639,3698,0,0,0}-{2639,3698,0,0,0}-{2642,3698,0,0,0}-{2642,3698,0,0,0}-{2642,3698,0,0,0}-{2267,3253,0,0,0}-{2267,3253,0,0,0}-{2267,3253,0,0,0}-{2273,3247,0,0,0}-{2273,3247,0,0,0}-{2273,3247,0,0,0}-{2699,2702,0,0,0}-{2699,2702,0,0,0}-{2699,2702,0,0,0}-{2694,2706,0,0,0}-{2694,2706,0,0,0}-{2694,2706,0,0,0}-{2700,2702,0,0,0}-{2700,2702,0,0,0}-{2700,2702,0,0,0}-{2707,2698,0,0,0}-{2707,2698,0,0,0}-{2707,2698,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"336\",\r\n      \"loc_data\": \"{2928,3218,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"338\",\r\n      \"loc_data\": \"{2929,3222,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"340\",\r\n      \"loc_data\": \"{2929,3217,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"342\",\r\n      \"loc_data\": \"{3281,3382,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"343\",\r\n      \"loc_data\": \"{3284,3382,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"344\",\r\n      \"loc_data\": \"{3016,3187,1,1,0}-{3015,3183,1,1,0}-{3014,3181,1,1,0}-{3011,3185,1,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"345\",\r\n      \"loc_data\": \"{3018,3185,2,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"347\",\r\n      \"loc_data\": \"{2523,3292,0,0,0}-{2536,3294,0,0,0}-{2538,3321,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"348\",\r\n      \"loc_data\": \"{2501,3315,0,0,0}-{2513,3325,0,0,0}-{2526,3279,0,0,0}-{2528,3297,0,0,0}-{2535,3288,0,0,0}-{2548,3287,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"349\",\r\n      \"loc_data\": \"{2556,3266,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"350\",\r\n      \"loc_data\": \"{2559,3266,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"351\",\r\n      \"loc_data\": \"{2507,3325,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"352\",\r\n      \"loc_data\": \"{2511,3322,0,1,2}-{2540,3279,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"353\",\r\n      \"loc_data\": \"{2504,3326,0,1,1}-{2509,3314,0,1,3}-{2545,3278,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"354\",\r\n      \"loc_data\": \"{2510,3318,0,1,6}-{2524,3271,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"355\",\r\n      \"loc_data\": \"{2504,3318,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"356\",\r\n      \"loc_data\": \"{2523,3307,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"357\",\r\n      \"loc_data\": \"{2518,3309,0,0,0}-{2526,3303,0,0,0}-{2543,3309,0,0,0}-{2550,3319,0,0,0}-{2552,3319,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"358\",\r\n      \"loc_data\": \"{2529,3285,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"360\",\r\n      \"loc_data\": \"{2550,3272,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"361\",\r\n      \"loc_data\": \"{2519,3277,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"362\",\r\n      \"loc_data\": \"{2537,3324,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"363\",\r\n      \"loc_data\": \"{2513,3315,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"364\",\r\n      \"loc_data\": \"{2577,3298,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"366\",\r\n      \"loc_data\": \"{2612,3324,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"367\",\r\n      \"loc_data\": \"{2935,3210,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"368\",\r\n      \"loc_data\": \"{3263,3407,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"369\",\r\n      \"loc_data\": \"{2542,3326,0,0,0}-{2545,3324,0,0,0}-{2545,3327,0,0,0}-{2552,3326,0,0,0}-{2553,3322,0,0,0}-{2553,3324,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"370\",\r\n      \"loc_data\": \"{2551,3324,1,0,0}-{2551,3327,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"371\",\r\n      \"loc_data\": \"{2547,3326,0,0,0}-{2549,3322,0,0,0}-{2550,3326,0,0,0}-{2552,3323,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"372\",\r\n      \"loc_data\": \"{2559,3303,0,0,6}-{2561,3303,0,0,6}-{2561,3305,0,0,4}-{2559,3305,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"373\",\r\n      \"loc_data\": \"{2516,3274,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"375\",\r\n      \"loc_data\": \"{3053,3249,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"376\",\r\n      \"loc_data\": \"{3027,3217,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"377\",\r\n      \"loc_data\": \"{3028,3223,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"378\",\r\n      \"loc_data\": \"{3028,3220,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"379\",\r\n      \"loc_data\": \"{2939,3156,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"380\",\r\n      \"loc_data\": \"{2953,3149,0,0,0}-{2770,3226,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"381\",\r\n      \"loc_data\": \"{2684,3272,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"382\",\r\n      \"loc_data\": \"{3044,9758,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"384\",\r\n      \"loc_data\": \"{2545,3568,0,1,7}-{2545,3571,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"385\",\r\n      \"loc_data\": \"{2549,3568,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"387\",\r\n      \"loc_data\": \"{3000,3440,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"388\",\r\n      \"loc_data\": \"{2709,3485,0,1,1}-{2716,3475,0,1,3}-{2697,3472,0,1,6}-{2702,3469,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"397\",\r\n      \"loc_data\": \"{3254,3258,0,1,1}-{3264,3258,0,1,2}-{3026,3303,0,1,4}-{2880,3248,0,1,0}-{3259,3279,0,1,6}-{3247,3292,0,1,3}-{3260,3291,0,1,2}-{3247,3282,0,1,5}-{3261,3260,0,1,1}-{3252,3283,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"398\",\r\n      \"loc_data\": \"{2849,5091,0,0,0}-{2726,3349,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"399\",\r\n      \"loc_data\": \"{2846,5081,0,0,0}-{2730,3349,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"400\",\r\n      \"loc_data\": \"{2728,3377,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"401\",\r\n      \"loc_data\": \"{2800,2943,0,0,0}-{2762,2944,0,0,0}-{2823,2941,0,0,0}-{2861,2941,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"402\",\r\n      \"loc_data\": \"{2791,2944,0,0,0}-{2762,2943,0,0,0}-{2818,2939,0,0,0}-{2870,2943,0,0,0}-{2933,2944,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"407\",\r\n      \"loc_data\": \"{3059,4507,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"411\",\r\n      \"loc_data\": \"{2887,3164,0,0,0}-{2878,3161,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"412\",\r\n      \"loc_data\": \"{2728,10122,0,1,1}-{2735,10123,0,1,3}-{2733,10129,0,1,1}-{2728,10133,0,1,6}-{2722,10133,0,1,6}-{2736,10137,0,1,1}-{2732,10142,0,1,0}-{2726,10142,0,1,6}-{2729,10140,0,1,3}-{2720,10144,0,1,6}-{2712,10142,0,1,3}-{2760,3402,0,1,4}-{2759,3400,0,1,1}-{2756,3403,0,1,1}-{2759,3400,0,1,3}-{2755,3402,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"419\",\r\n      \"loc_data\": \"{3195,5450,0,1,6}-{3181,5449,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"420\",\r\n      \"loc_data\": \"{3175,5454,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"421\",\r\n      \"loc_data\": \"{3195,5459,0,1,6}-{3186,5454,0,1,5}-{3173,5494,0,1,6}-{3179,5491,0,1,1}-{3185,5492,0,1,4}-{3184,5487,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"423\",\r\n      \"loc_data\": \"{2731,5340,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"424\",\r\n      \"loc_data\": \"{2724,5359,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"425\",\r\n      \"loc_data\": \"{2717,5332,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"428\",\r\n      \"loc_data\": \"{2361,5209,0,1,4}-{2359,5213,0,1,1}-{2364,5215,0,1,6}-{2361,5216,0,1,1}-{2361,5212,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"429\",\r\n      \"loc_data\": \"{2363,5214,0,1,6}-{2358,5214,0,1,7}-{2361,5212,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"437\",\r\n      \"loc_data\": \"{2807,3191,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"444\",\r\n      \"loc_data\": \"{2551,3197,0,1,1}-{2555,3194,0,1,4}-{2551,3157,0,1,3}-{2525,3155,0,1,3}-{2518,3149,0,1,3}-{2502,3175,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"445\",\r\n      \"loc_data\": \"{2550,3196,0,1,4}-{2557,3197,0,1,1}-{2538,3155,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"446\",\r\n      \"loc_data\": \"{2994,3194,0,1,1}-{3285,9896,0,1,1}-{3279,9895,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"447\",\r\n      \"loc_data\": \"{3114,3242,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"448\",\r\n      \"loc_data\": \"{3120,3238,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"449\",\r\n      \"loc_data\": \"{3127,3248,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"450\",\r\n      \"loc_data\": \"{3081,3220,0,1,0}-{3081,3222,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"451\",\r\n      \"loc_data\": \"{2994,3215,0,1,2}-{3077,3234,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"452\",\r\n      \"loc_data\": \"{3223,3293,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"454\",\r\n      \"loc_data\": \"{2899,3430,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"455\",\r\n      \"loc_data\": \"{2925,3485,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"456\",\r\n      \"loc_data\": \"{3244,3205,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"458\",\r\n      \"loc_data\": \"{3148,3175,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"459\",\r\n      \"loc_data\": \"{2566,9507,0,1,6}-{2565,9506,0,0,5}-{2566,9507,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"460\",\r\n      \"loc_data\": \"{2590,9488,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"461\",\r\n      \"loc_data\": \"{2588,3091,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"462\",\r\n      \"loc_data\": \"{2590,3084,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"469\",\r\n      \"loc_data\": \"{2542,3169,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"470\",\r\n      \"loc_data\": \"{2519,3212,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"471\",\r\n      \"loc_data\": \"{2526,3160,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"472\",\r\n      \"loc_data\": \"{2521,3168,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"473\",\r\n      \"loc_data\": \"{2503,3192,0,0,0}-{2514,3159,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"475\",\r\n      \"loc_data\": \"{2513,3262,0,1,3}-{2522,3251,0,1,1}-{2454,3300,0,1,7}-{2455,3301,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"477\",\r\n      \"loc_data\": \"{2455,3301,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"478\",\r\n      \"loc_data\": \"{2509,3255,0,1,3}-{2503,3254,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"481\",\r\n      \"loc_data\": \"{2499,3266,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"482\",\r\n      \"loc_data\": \"{2524,3258,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"483\",\r\n      \"loc_data\": \"{2501,3234,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"484\",\r\n      \"loc_data\": \"{2542,3169,0,1,4}-{2541,3170,0,1,4}-{2537,3168,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"491\",\r\n      \"loc_data\": \"{2919,9849,0,1,4}-{2915,9845,0,1,3}-{2922,9833,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"494\",\r\n      \"loc_data\": \"{2807,3443,0,0,6}-{2810,3443,0,0,6}-{2657,3283,0,0,3}-{2657,3286,0,0,3}-{2615,3094,0,0,3}-{2615,3092,0,0,3}-{2615,3092,0,0,3}-{2615,3094,0,0,3}-{3122,3125,0,0,6}-{3120,3125,0,0,6}-{3090,3242,0,0,4}-{3090,3245,0,0,4}-{3090,3243,0,0,4}-{2584,3422,0,0,4}-{2584,3419,0,0,4}-{3682,2981,0,0,3}-{2618,3330,0,0,0}-{2619,3330,0,0,0}-{2584,3418,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"495\",\r\n      \"loc_data\": \"{2809,3443,0,0,6}-{2811,3443,0,0,6}-{2615,3091,0,0,3}-{2615,3091,0,0,3}-{2615,3330,0,0,0}-{2584,3421,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"496\",\r\n      \"loc_data\": \"{3267,3164,0,0,4}-{3267,3167,0,0,4}-{3267,3169,0,0,4}-{3682,2983,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"497\",\r\n      \"loc_data\": \"{3267,3166,0,0,4}-{3267,3168,0,0,4}-{3682,2982,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"498\",\r\n      \"loc_data\": \"{2384,4457,0,0,7}-{2385,4461,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"499\",\r\n      \"loc_data\": \"{2853,2953,0,0,1}-{2852,2953,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"500\",\r\n      \"loc_data\": \"{2880,2951,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"504\",\r\n      \"loc_data\": \"{2870,2950,0,0,0}-{2877,2959,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"505\",\r\n      \"loc_data\": \"{2868,2954,0,0,6}-{2876,2948,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"510\",\r\n      \"loc_data\": \"{2780,3211,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"511\",\r\n      \"loc_data\": \"{2834,2956,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"512\",\r\n      \"loc_data\": \"{2862,2995,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"513\",\r\n      \"loc_data\": \"{2857,2962,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"514\",\r\n      \"loc_data\": \"{2824,2888,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"515\",\r\n      \"loc_data\": \"{2834,2987,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"516\",\r\n      \"loc_data\": \"{2826,2958,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"517\",\r\n      \"loc_data\": \"{2870,2970,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"518\",\r\n      \"loc_data\": \"{2764,2959,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"519\",\r\n      \"loc_data\": \"{3228,3203,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"520\",\r\n      \"loc_data\": \"{3217,3241,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"521\",\r\n      \"loc_data\": \"{3217,3240,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"522\",\r\n      \"loc_data\": \"{3218,3415,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"523\",\r\n      \"loc_data\": \"{3217,3411,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"524\",\r\n      \"loc_data\": \"{3316,3184,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"525\",\r\n      \"loc_data\": \"{3316,3182,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"527\",\r\n      \"loc_data\": \"{2959,3390,0,1,1}-{2957,3388,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"528\",\r\n      \"loc_data\": \"{3078,3512,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"529\",\r\n      \"loc_data\": \"{3079,3507,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"530\",\r\n      \"loc_data\": \"{2947,3217,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"531\",\r\n      \"loc_data\": \"{2947,3212,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"532\",\r\n      \"loc_data\": \"{2906,3145,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"533\",\r\n      \"loc_data\": \"{2906,3144,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"534\",\r\n      \"loc_data\": \"{2375,4449,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"535\",\r\n      \"loc_data\": \"{2376,4447,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"536\",\r\n      \"loc_data\": \"{3192,3359,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"537\",\r\n      \"loc_data\": \"{3192,3355,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"538\",\r\n      \"loc_data\": \"{3076,3429,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"539\",\r\n      \"loc_data\": \"{3299,3204,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"540\",\r\n      \"loc_data\": \"{3288,3212,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"541\",\r\n      \"loc_data\": \"{3288,3190,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"542\",\r\n      \"loc_data\": \"{3316,3175,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"543\",\r\n      \"loc_data\": \"{3272,3182,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"544\",\r\n      \"loc_data\": \"{3316,3164,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"545\",\r\n      \"loc_data\": \"{3322,3195,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"546\",\r\n      \"loc_data\": \"{3203,3433,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"547\",\r\n      \"loc_data\": \"{3217,3435,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"548\",\r\n      \"loc_data\": \"{3205,3416,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"549\",\r\n      \"loc_data\": \"{3229,3438,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"550\",\r\n      \"loc_data\": \"{3232,3423,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"551\",\r\n      \"loc_data\": \"{3203,3397,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"552\",\r\n      \"loc_data\": \"{3205,3399,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"553\",\r\n      \"loc_data\": \"{3253,3403,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"554\",\r\n      \"loc_data\": \"{3281,3398,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"556\",\r\n      \"loc_data\": \"{3012,3244,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"557\",\r\n      \"loc_data\": \"{3012,3203,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"558\",\r\n      \"loc_data\": \"{3013,3221,0,1,6}-{160,27,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"559\",\r\n      \"loc_data\": \"{3026,3252,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"560\",\r\n      \"loc_data\": \"{2766,3117,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"561\",\r\n      \"loc_data\": \"{156,52,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"562\",\r\n      \"loc_data\": \"{2799,3438,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"563\",\r\n      \"loc_data\": \"{2803,3430,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"564\",\r\n      \"loc_data\": \"{2485,4450,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"565\",\r\n      \"loc_data\": \"{2476,4467,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"566\",\r\n      \"loc_data\": \"{2480,4471,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"568\",\r\n      \"loc_data\": \"{2925,3143,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"569\",\r\n      \"loc_data\": \"{2659,3316,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"570\",\r\n      \"loc_data\": \"{2669,3303,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"571\",\r\n      \"loc_data\": \"{2655,3310,0,1,1}-{2669,3310,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"572\",\r\n      \"loc_data\": \"{2659,3296,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"573\",\r\n      \"loc_data\": \"{2663,3296,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"574\",\r\n      \"loc_data\": \"{2656,3300,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"575\",\r\n      \"loc_data\": \"{2821,3442,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"576\",\r\n      \"loc_data\": \"{2836,3447,0,1,4}-{161,42,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"577\",\r\n      \"loc_data\": \"{2975,3384,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"578\",\r\n      \"loc_data\": \"{2807,3342,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"579\",\r\n      \"loc_data\": \"{3034,9845,0,1,3}-{147,15,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"580\",\r\n      \"loc_data\": \"{2952,3388,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"581\",\r\n      \"loc_data\": \"{2975,3314,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"582\",\r\n      \"loc_data\": \"{2998,9828,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"583\",\r\n      \"loc_data\": \"{3011,3257,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"584\",\r\n      \"loc_data\": \"{2944,3332,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"585\",\r\n      \"loc_data\": \"{2946,3205,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"586\",\r\n      \"loc_data\": \"{2884,3450,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"587\",\r\n      \"loc_data\": \"{2897,3428,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"588\",\r\n      \"loc_data\": \"{2803,3152,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"589\",\r\n      \"loc_data\": \"{2660,3291,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"590\",\r\n      \"loc_data\": \"{2613,3294,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"591\",\r\n      \"loc_data\": \"{2615,3292,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"592\",\r\n      \"loc_data\": \"{2597,3401,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"593\",\r\n      \"loc_data\": \"{2569,3098,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"594\",\r\n      \"loc_data\": \"{2998,9840,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"595\",\r\n      \"loc_data\": \"{3271,3412,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"596\",\r\n      \"loc_data\": \"{3037,3705,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"597\",\r\n      \"loc_data\": \"{3025,3701,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"598\",\r\n      \"loc_data\": \"{2943,3384,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"599\",\r\n      \"loc_data\": \"{2522,5001,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"600\",\r\n      \"loc_data\": \"{2449,3511,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"601\",\r\n      \"loc_data\": \"{2482,3509,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"602\",\r\n      \"loc_data\": \"{2469,3488,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"603\",\r\n      \"loc_data\": \"{2491,3488,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"604\",\r\n      \"loc_data\": \"{3001,3144,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"605\",\r\n      \"loc_data\": \"{2985,3343,2,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"606\",\r\n      \"loc_data\": \"{2974,3343,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"607\",\r\n      \"loc_data\": \"{2539,3547,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"608\",\r\n      \"loc_data\": \"{2962,3337,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"610\",\r\n      \"loc_data\": \"{3027,3506,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"611\",\r\n      \"loc_data\": \"{3029,3505,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"612\",\r\n      \"loc_data\": \"{3028,3510,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"619\",\r\n      \"loc_data\": \"{3353,3333,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"636\",\r\n      \"loc_data\": \"{2395,3494,0,0,6}-{2396,3494,0,0,6}-{2397,3494,0,0,6}-{2396,3493,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"637\",\r\n      \"loc_data\": \"{3158,3425,1,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"638\",\r\n      \"loc_data\": \"{3195,3404,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"639\",\r\n      \"loc_data\": \"{3211,3425,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"640\",\r\n      \"loc_data\": \"{3253,3487,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"641\",\r\n      \"loc_data\": \"{3207,3392,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"642\",\r\n      \"loc_data\": \"{3185,3385,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"643\",\r\n      \"loc_data\": \"{3246,3383,1,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"644\",\r\n      \"loc_data\": \"{3247,9781,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"645\",\r\n      \"loc_data\": \"{3223,3401,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"646\",\r\n      \"loc_data\": \"{3257,3447,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"648\",\r\n      \"loc_data\": \"{3220,3471,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"649\",\r\n      \"loc_data\": \"{3149,3210,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"650\",\r\n      \"loc_data\": \"{3148,3205,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"651\",\r\n      \"loc_data\": \"{3148,3207,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"652\",\r\n      \"loc_data\": \"{3147,3209,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"656\",\r\n      \"loc_data\": \"{2822,3374,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"657\",\r\n      \"loc_data\": \"{3048,3236,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"658\",\r\n      \"loc_data\": \"{2832,3336,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"659\",\r\n      \"loc_data\": \"{3052,3373,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"665\",\r\n      \"loc_data\": \"{2986,9811,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"666\",\r\n      \"loc_data\": \"{2819,3451,0,0,3}-{3158,3405,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"670\",\r\n      \"loc_data\": \"{2465,3496,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"674\",\r\n      \"loc_data\": \"{3001,3041,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"675\",\r\n      \"loc_data\": \"{2944,3041,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"677\",\r\n      \"loc_data\": \"{2708,9486,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"678\",\r\n      \"loc_data\": \"{2658,3436,0,1,3}-{2655,3431,0,1,0}-{2656,3424,0,1,1}-{2664,3426,0,1,4}-{2671,3438,0,1,1}-{2669,3441,0,1,7}-{2674,3438,0,1,5}-{2671,3418,0,1,7}-{2666,3417,0,1,3}-{2666,3415,0,1,2}-{2664,3416,0,1,3}-{2680,3431,0,1,6}-{2678,3431,0,1,1}-{2661,3430,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"679\",\r\n      \"loc_data\": \"{2658,3439,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"680\",\r\n      \"loc_data\": \"{2679,3432,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"682\",\r\n      \"loc_data\": \"{2671,3434,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"683\",\r\n      \"loc_data\": \"{2673,3434,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"684\",\r\n      \"loc_data\": \"{2666,3427,2,0,6}-{2669,3426,2,0,1}-{2667,3430,2,0,6}-{2670,3429,2,0,3}-{2673,3416,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"692\",\r\n      \"loc_data\": \"{2661,3419,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"694\",\r\n      \"loc_data\": \"{2659,3431,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"705\",\r\n      \"loc_data\": \"{3208,3252,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"706\",\r\n      \"loc_data\": \"{3103,3163,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"707\",\r\n      \"loc_data\": \"{3113,3160,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"708\",\r\n      \"loc_data\": \"{3215,3282,0,1,1}-{3242,3306,0,1,1}-{3208,3357,0,1,3}-{3240,3393,0,1,3}-{3219,3221,0,1,4}-{3162,3410,0,1,2}-{2962,3424,0,1,6}-{3011,3513,0,1,1}-{2980,3337,0,1,6}-{2997,3300,0,1,3}-{3031,3322,0,1,1}-{2957,3308,0,1,0}-{2935,3343,0,1,1}-{2942,3247,0,1,7}-{2976,3176,0,1,6}-{3239,3523,0,1,4}-{3262,3523,0,1,2}-{2865,3175,0,1,0}-{2855,3188,0,1,1}-{2838,3194,0,1,3}-{2806,3181,0,1,3}-{2827,3170,0,1,5}-{2788,3179,0,1,3}-{2753,3178,0,1,3}-{2759,3155,0,1,0}-{2603,3221,0,1,7}-{2604,3212,0,1,3}-{2614,3230,0,1,1}-{2611,3204,0,1,7}-{2544,3184,0,1,3}-{2627,3231,0,1,4}-{2595,3125,0,1,1}-{2598,3145,0,1,1}-{2588,3145,0,1,7}-{2601,3135,0,1,3}-{2598,3120,0,1,6}-{2615,3120,0,1,4}-{2598,3108,0,1,4}-{2733,3459,0,1,3}-{2732,3457,0,1,6}-{2715,3451,0,1,4}-{2715,3436,0,1,3}-{2977,3377,0,0,3}-{2941,3356,0,0,7}-{2932,3322,0,0,5}-{2934,3301,0,1,5}-{2934,3301,0,1,3}-{2973,3274,0,1,3}-{2994,3270,0,1,0}-{3010,3271,0,1,6}-{2977,3202,0,1,7}-{3068,3251,0,1,6}-{3189,3503,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"711\",\r\n      \"loc_data\": \"{2536,3314,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"713\",\r\n      \"loc_data\": \"{2526,3319,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"716\",\r\n      \"loc_data\": \"{2540,3286,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"717\",\r\n      \"loc_data\": \"{2513,3294,0,0,0}-{2518,3320,0,0,0}-{2530,3274,0,0,0}-{2535,3296,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"719\",\r\n      \"loc_data\": \"{2560,3288,0,0,0}-{2026,4619,0,1,6}-{2026,4615,0,0,6}-{2020,4614,0,1,1}-{2021,4614,0,1,6}-{2008,4612,0,1,3}-{2002,4613,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"720\",\r\n      \"loc_data\": \"{2542,3306,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"725\",\r\n      \"loc_data\": \"{2540,3305,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"728\",\r\n      \"loc_data\": \"{2540,3308,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"729\",\r\n      \"loc_data\": \"{2536,3308,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"731\",\r\n      \"loc_data\": \"{3278,3487,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"732\",\r\n      \"loc_data\": \"{3267,3392,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"733\",\r\n      \"loc_data\": \"{3226,3399,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"734\",\r\n      \"loc_data\": \"{3045,3256,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"735\",\r\n      \"loc_data\": \"{2795,3155,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"736\",\r\n      \"loc_data\": \"{2957,3373,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"737\",\r\n      \"loc_data\": \"{2572,3319,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"738\",\r\n      \"loc_data\": \"{2691,3492,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"739\",\r\n      \"loc_data\": \"{2554,3080,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"740\",\r\n      \"loc_data\": \"{2808,3086,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"741\",\r\n      \"loc_data\": \"{3212,3220,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"742\",\r\n      \"loc_data\": \"{2854,9636,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"743\",\r\n      \"loc_data\": \"{3098,3257,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"744\",\r\n      \"loc_data\": \"{3047,3204,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"745\",\r\n      \"loc_data\": \"{3013,3189,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"746\",\r\n      \"loc_data\": \"{3010,3502,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"747\",\r\n      \"loc_data\": \"{3069,3516,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"749\",\r\n      \"loc_data\": \"{1749,5323,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"750\",\r\n      \"loc_data\": \"{1765,5321,0,1,2}-{1744,5326,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"751\",\r\n      \"loc_data\": \"{1778,5323,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"753\",\r\n      \"loc_data\": \"{2929,9649,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"755\",\r\n      \"loc_data\": \"{3100,3268,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"756\",\r\n      \"loc_data\": \"{3222,3398,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"758\",\r\n      \"loc_data\": \"{3189,3273,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"767\",\r\n      \"loc_data\": \"{3303,3511,0,0,1}-{3302,3514,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"780\",\r\n      \"loc_data\": \"{3151,3410,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"781\",\r\n      \"loc_data\": \"{3221,3434,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"782\",\r\n      \"loc_data\": \"{3150,3406,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"783\",\r\n      \"loc_data\": \"{3221,3435,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"784\",\r\n      \"loc_data\": \"{3155,3406,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"788\",\r\n      \"loc_data\": \"{2773,3187,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"789\",\r\n      \"loc_data\": \"{2811,3167,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"791\",\r\n      \"loc_data\": \"{2450,3056,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"792\",\r\n      \"loc_data\": \"{2774,3197,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"793\",\r\n      \"loc_data\": \"{2790,3189,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"794\",\r\n      \"loc_data\": \"{2793,3191,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"797\",\r\n      \"loc_data\": \"{2900,3511,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"799\",\r\n      \"loc_data\": \"{2778,3197,0,1,4}-{2777,3194,0,1,4}-{2777,3199,0,1,3}-{2771,3193,0,1,3}-{2761,3192,0,1,5}-{2775,3190,0,1,4}-{2803,3195,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"801\",\r\n      \"loc_data\": \"{3058,3485,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"802\",\r\n      \"loc_data\": \"{3046,3486,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"804\",\r\n      \"loc_data\": \"{2934,3285,1,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"805\",\r\n      \"loc_data\": \"{2936,3288,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"812\",\r\n      \"loc_data\": \"{2738,3473,0,0,1}-{2733,3473,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"820\",\r\n      \"loc_data\": \"{2697,3496,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"822\",\r\n      \"loc_data\": \"{3302,9466,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"827\",\r\n      \"loc_data\": \"{3273,9417,0,1,6}-{3289,9443,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"830\",\r\n      \"loc_data\": \"{3271,3028,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"831\",\r\n      \"loc_data\": \"{3291,3032,1,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"832\",\r\n      \"loc_data\": \"{3171,3025,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"833\",\r\n      \"loc_data\": \"{3167,3033,0,1,2}-{3170,3027,0,1,5}-{3174,3028,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"834\",\r\n      \"loc_data\": \"{3170,3045,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"836\",\r\n      \"loc_data\": \"{3304,3124,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"837\",\r\n      \"loc_data\": \"{3305,3121,0,1,0}-{3301,3120,0,1,1}-{3302,3123,0,1,6}-{3307,3125,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"838\",\r\n      \"loc_data\": \"{3306,3117,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"839\",\r\n      \"loc_data\": \"{3153,3035,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"841\",\r\n      \"loc_data\": \"{3288,3022,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"843\",\r\n      \"loc_data\": \"{2644,3274,0,1,3}-{2644,3276,0,1,5}-{2647,3271,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"844\",\r\n      \"loc_data\": \"{2683,3323,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"845\",\r\n      \"loc_data\": \"{2635,3311,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"846\",\r\n      \"loc_data\": \"{2787,3184,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"847\",\r\n      \"loc_data\": \"{3143,3447,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"848\",\r\n      \"loc_data\": \"{2480,3489,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"850\",\r\n      \"loc_data\": \"{2439,3502,1,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"851\",\r\n      \"loc_data\": \"{2449,3503,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"853\",\r\n      \"loc_data\": \"{2506,3115,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"854\",\r\n      \"loc_data\": \"{2511,3085,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"858\",\r\n      \"loc_data\": \"{2550,3032,0,0,0}-{2552,3033,0,0,0}-{2550,3030,0,0,0}-{2550,3032,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"860\",\r\n      \"loc_data\": \"{2503,3013,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"872\",\r\n      \"loc_data\": \"{2547,3117,2,1,3}-{2547,3112,2,1,6}-{2544,3114,2,1,3}-{2547,3118,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"877\",\r\n      \"loc_data\": \"{2536,3092,0,1,1}-{2534,3091,0,1,1}-{2550,3118,0,1,4}-{2543,3117,0,1,3}-{2546,3113,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"878\",\r\n      \"loc_data\": \"{2534,3092,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"881\",\r\n      \"loc_data\": \"{3112,3162,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"882\",\r\n      \"loc_data\": \"{3203,3424,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"883\",\r\n      \"loc_data\": \"{3204,3470,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"884\",\r\n      \"loc_data\": \"{3204,3495,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"885\",\r\n      \"loc_data\": \"{2565,3271,0,0,0}-{2573,3268,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"887\",\r\n      \"loc_data\": \"{2570,3275,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"888\",\r\n      \"loc_data\": \"{2565,3273,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"889\",\r\n      \"loc_data\": \"{2571,3270,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"890\",\r\n      \"loc_data\": \"{2569,3272,0,0,0}-{2573,3269,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"895\",\r\n      \"loc_data\": \"{2929,3456,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"902\",\r\n      \"loc_data\": \"{2535,4715,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"903\",\r\n      \"loc_data\": \"{2541,4715,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"904\",\r\n      \"loc_data\": \"{2507,4693,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"905\",\r\n      \"loc_data\": \"{2540,4719,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"912\",\r\n      \"loc_data\": \"{3101,3940,0,0,0}-{3109,3931,0,0,0}-{3109,3939,0,0,0}-{3097,3931,0,1,4}-{3098,3938,0,1,6}-{3113,3938,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"913\",\r\n      \"loc_data\": \"{3105,3931,0,0,0}-{3101,3929,0,0,1}-{3111,3939,0,1,6}-{3109,3926,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"914\",\r\n      \"loc_data\": \"{3099,3936,0,0,7}-{3104,3929,0,0,0}-{3110,3936,0,1,2}-{3096,3932,0,1,4}-{3113,3928,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"915\",\r\n      \"loc_data\": \"{3108,3264,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"916\",\r\n      \"loc_data\": \"{3122,3245,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"917\",\r\n      \"loc_data\": \"{3125,3250,0,1,6}-{3122,3249,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"918\",\r\n      \"loc_data\": \"{3048,3209,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"919\",\r\n      \"loc_data\": \"{3128,3245,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"920\",\r\n      \"loc_data\": \"{3123,3241,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"922\",\r\n      \"loc_data\": \"{3086,3261,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"923\",\r\n      \"loc_data\": \"{3302,3163,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"924\",\r\n      \"loc_data\": \"{3286,3180,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"925\",\r\n      \"loc_data\": \"{3267,3226,0,0,3}-{3266,3229,0,0,3}-{3269,3229,0,0,4}-{3268,3226,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"931\",\r\n      \"loc_data\": \"{2792,2929,0,0,0}-{2815,2935,0,0,0}-{2842,2935,0,0,0}-{2842,2929,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"933\",\r\n      \"loc_data\": \"{2725,3367,0,0,2}-{2725,3380,2,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"941\",\r\n      \"loc_data\": \"{2974,3620,0,1,3}-{2975,3609,0,1,3}-{2983,3614,0,1,3}-{3340,3678,0,1,1}-{3339,3695,0,1,6}-{3344,3705,0,1,3}-{3307,5462,0,1,0}-{3121,10085,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"942\",\r\n      \"loc_data\": \"{3074,3086,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"943\",\r\n      \"loc_data\": \"{3103,3096,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"944\",\r\n      \"loc_data\": \"{3107,9511,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"945\",\r\n      \"loc_data\": \"{3093,3107,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"946\",\r\n      \"loc_data\": \"{3141,3090,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"947\",\r\n      \"loc_data\": \"{3127,3124,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"948\",\r\n      \"loc_data\": \"{3084,9506,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"949\",\r\n      \"loc_data\": \"{3086,3122,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"952\",\r\n      \"loc_data\": \"{3101,3092,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"954\",\r\n      \"loc_data\": \"{3123,3107,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"955\",\r\n      \"loc_data\": \"{3176,3317,0,1,3}-{3169,3319,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"957\",\r\n      \"loc_data\": \"{3314,3241,0,0,1}-{3314,3240,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"958\",\r\n      \"loc_data\": \"{3383,3272,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"959\",\r\n      \"loc_data\": \"{3359,3272,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"960\",\r\n      \"loc_data\": \"{3370,3276,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"961\",\r\n      \"loc_data\": \"{3377,3276,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"962\",\r\n      \"loc_data\": \"{3362,3276,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"963\",\r\n      \"loc_data\": \"{3375,3274,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"970\",\r\n      \"loc_data\": \"{3082,3248,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1005\",\r\n      \"loc_data\": \"{3057,3905,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1013\",\r\n      \"loc_data\": \"{2544,2988,0,0,0}-{2532,2983,0,0,0}-{2549,2983,0,0,0}-{2545,2983,0,0,0}-{2528,2986,0,0,0}-{2550,2979,0,0,0}-{2522,2978,0,0,0}-{2523,2976,0,0,0}-{2526,2974,0,0,0}-{2593,2971,0,0,0}-{2594,2971,0,0,0}-{2596,2961,0,0,0}-{2598,2971,0,0,0}-{2599,2960,0,0,0}-{2598,2960,0,0,0}-{2603,2966,0,0,0}-{2603,2970,0,0,0}-{2598,2960,0,0,0}-{2596,2963,0,0,0}-{2595,2964,0,0,0}-{2594,2964,0,0,0}-{2601,2964,0,0,0}-{2598,2969,0,0,0}-{2604,2971,0,0,0}-{2601,2972,0,0,0}-{2544,2904,0,0,0}-{2548,2990,0,0,0}-{2552,2988,0,0,0}-{2548,2979,0,0,0}-{2547,2991,0,0,0}-{2525,2975,0,0,0}-{2464,2912,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1017\",\r\n      \"loc_data\": \"{3198,3359,0,1,0}-{3231,3296,0,1,6}-{3233,3300,0,1,4}-{3235,3293,0,1,3}-{3232,3288,0,1,0}-{3234,3298,0,1,6}-{2785,3069,0,1,4}-{2800,3072,0,1,6}-{3234,3297,0,1,3}-{3234,3292,0,1,4}-{3235,3289,0,1,1}-{2677,3656,0,1,2}-{2672,3654,0,1,2}-{2676,3652,0,1,4}-{2681,3652,0,1,4}-{2675,3652,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1019\",\r\n      \"loc_data\": \"{3187,5555,0,1,4}-{3213,9377,0,1,3}-{3209,9397,0,1,4}-{3245,9401,0,1,6}-{3237,9402,0,1,2}-{3207,9349,0,1,3}-{3220,9347,0,1,6}-{3233,9359,0,1,4}-{3235,9354,0,0,6}-{3259,9370,0,1,1}-{3258,9387,0,1,6}-{3278,9368,0,1,5}-{3271,9359,0,1,3}-{3287,9359,0,1,5}-{3301,9394,0,1,5}-{3318,9352,0,1,5}-{3190,5563,0,1,1}-{3193,5555,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1027\",\r\n      \"loc_data\": \"{3278,3155,0,0,0}-{2354,3608,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1028\",\r\n      \"loc_data\": \"{2778,3436,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1029\",\r\n      \"loc_data\": \"{2920,3499,0,0,0}-{2784,3480,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1030\",\r\n      \"loc_data\": \"{2768,3470,0,0,0}-{2843,3155,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1032\",\r\n      \"loc_data\": \"{2865,3504,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1033\",\r\n      \"loc_data\": \"{2606,2967,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1035\",\r\n      \"loc_data\": \"{2599,2954,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1036\",\r\n      \"loc_data\": \"{3514,3479,1,0,0}-{3514,3481,1,0,0}-{3514,3481,0,0,3}-{3514,3479,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1037\",\r\n      \"loc_data\": \"{2435,3412,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1038\",\r\n      \"loc_data\": \"{3507,3496,1,1,1}-{3508,3494,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1039\",\r\n      \"loc_data\": \"{3499,3506,1,1,5}-{3500,3505,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1040\",\r\n      \"loc_data\": \"{3475,3494,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1041\",\r\n      \"loc_data\": \"{3490,3503,1,0,0}-{3490,3500,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1042\",\r\n      \"loc_data\": \"{3495,3469,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1043\",\r\n      \"loc_data\": \"{3459,3457,0,0,0}-{3460,3462,0,0,0}-{3462,3459,0,0,0}-{3463,3490,0,0,0}-{3464,3511,0,0,0}-{3465,3466,0,0,0}-{3466,3495,0,0,0}-{3466,3497,0,0,0}-{3467,3485,0,0,0}-{3467,3497,0,0,0}-{3467,3509,0,0,0}-{3469,3470,0,0,0}-{3470,3469,0,0,0}-{3471,3477,0,0,0}-{3474,3505,0,0,0}-{3476,3507,0,0,0}-{3479,3511,0,0,0}-{3480,3468,0,0,0}-{3480,3470,0,0,0}-{3482,3469,0,0,0}-{3483,3511,0,0,0}-{3484,3464,0,0,0}-{3485,3509,0,0,0}-{3490,3461,0,0,0}-{3491,3460,0,0,0}-{3494,3461,0,0,0}-{3494,3512,0,0,0}-{3498,3461,0,0,0}-{3499,3513,0,0,0}-{3501,3513,0,0,0}-{3502,3464,0,0,0}-{3504,3463,0,0,0}-{3506,3512,0,0,0}-{3506,3515,0,0,0}-{3507,3515,0,0,0}-{3509,3512,0,0,0}-{3511,3488,0,0,0}-{3513,3467,0,0,0}-{3513,3487,0,0,0}-{3513,3489,0,0,0}-{3513,3503,0,0,0}-{3514,3490,0,0,0}-{3515,3495,0,0,0}-{3515,3499,0,0,0}-{3516,3469,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1044\",\r\n      \"loc_data\": \"{3408,3484,0,1,6}-{3408,3493,0,1,1}-{3410,3489,1,1,3}-{3412,3487,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1045\",\r\n      \"loc_data\": \"{3413,3489,0,1,3}-{3409,3485,1,1,4}-{3413,3489,1,1,1}-{3213,3476,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1046\",\r\n      \"loc_data\": \"{3409,3489,0,1,4}-{3413,3485,0,1,4}-{3414,3491,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1047\",\r\n      \"loc_data\": \"{3415,3489,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1048\",\r\n      \"loc_data\": \"{3437,3486,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1049\",\r\n      \"loc_data\": \"{3440,9895,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1054\",\r\n      \"loc_data\": \"{3444,3459,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1055\",\r\n      \"loc_data\": \"{2811,3191,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1060\",\r\n      \"loc_data\": \"{2898,3528,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1061\",\r\n      \"loc_data\": \"{2898,3532,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1062\",\r\n      \"loc_data\": \"{2893,3540,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1063\",\r\n      \"loc_data\": \"{2900,3531,0,0,7}-{2900,3533,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1064\",\r\n      \"loc_data\": \"{2895,3537,0,0,5}-{2894,3537,0,0,5}-{2893,3537,0,0,5}-{2892,3537,0,0,5}-{2891,3537,0,0,3}-{2891,3538,0,0,3}-{2892,3538,0,0,3}-{2893,3538,0,0,3}-{2894,3538,0,0,3}-{2895,3538,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1065\",\r\n      \"loc_data\": \"{2889,3529,0,1,1}-{2904,3538,0,1,6}-{2882,3531,0,1,4}-{2903,3544,0,1,4}-{2911,3542,0,1,4}-{2906,3540,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1066\",\r\n      \"loc_data\": \"{2892,3532,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1067\",\r\n      \"loc_data\": \"{2893,3533,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1068\",\r\n      \"loc_data\": \"{2894,3532,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1069\",\r\n      \"loc_data\": \"{2840,3589,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1070\",\r\n      \"loc_data\": \"{2269,4758,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1071\",\r\n      \"loc_data\": \"{2820,3554,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1072\",\r\n      \"loc_data\": \"{2897,3569,0,0,0}-{2893,3565,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1073\",\r\n      \"loc_data\": \"{2900,3549,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1074\",\r\n      \"loc_data\": \"{2897,3549,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1076\",\r\n      \"loc_data\": \"{2900,3556,0,0,1}-{2897,3565,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1077\",\r\n      \"loc_data\": \"{2897,3556,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1079\",\r\n      \"loc_data\": \"{2906,3537,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1081\",\r\n      \"loc_data\": \"{2896,3562,0,0,0}-{2891,3568,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1082\",\r\n      \"loc_data\": \"{2919,3576,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1083\",\r\n      \"loc_data\": \"{2931,3546,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1084\",\r\n      \"loc_data\": \"{2915,3549,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1085\",\r\n      \"loc_data\": \"{2921,3558,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1086\",\r\n      \"loc_data\": \"{2965,3262,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1087\",\r\n      \"loc_data\": \"{2911,3540,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1088\",\r\n      \"loc_data\": \"{2918,3545,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1089\",\r\n      \"loc_data\": \"{2919,3529,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1090\",\r\n      \"loc_data\": \"{2931,3566,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1093\",\r\n      \"loc_data\": \"{2817,3560,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1096\",\r\n      \"loc_data\": \"{2852,3591,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1097\",\r\n      \"loc_data\": \"{2858,3596,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1098\",\r\n      \"loc_data\": \"{2868,3591,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1099\",\r\n      \"loc_data\": \"{2857,3589,0,0,0}-{2857,3589,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1100\",\r\n      \"loc_data\": \"{2859,3589,0,0,0}-{2859,3589,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1101\",\r\n      \"loc_data\": \"{2851,3598,0,0,0}-{2854,3600,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1106\",\r\n      \"loc_data\": \"{2864,3594,0,1,1}-{2881,3592,0,1,5}-{2857,3587,0,1,7}-{2855,3596,0,1,4}-{2827,10078,1,1,6}-{2925,3626,0,1,0}-{2843,3682,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1107\",\r\n      \"loc_data\": \"{2874,3595,0,1,3}-{2875,3596,0,1,1}-{2873,3598,0,1,1}-{2836,10088,1,1,5}-{2845,3674,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1108\",\r\n      \"loc_data\": \"{2878,3592,0,1,6}-{2861,3586,0,1,6}-{2855,10058,2,1,4}-{2852,3673,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1109\",\r\n      \"loc_data\": \"{2875,3588,0,1,1}-{2883,3586,0,1,6}-{2825,10087,1,1,3}-{2836,10080,1,1,6}-{2784,10040,2,1,3}-{2920,3627,0,1,0}-{2923,10029,0,1,7}-{2851,3667,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1110\",\r\n      \"loc_data\": \"{2883,3591,0,1,4}-{2869,3594,0,1,3}-{2861,3587,0,1,4}-{2872,3594,0,1,5}-{2829,10080,1,1,6}-{2836,10097,2,1,4}-{2852,10110,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1111\",\r\n      \"loc_data\": \"{2863,3588,0,1,6}-{2865,3591,0,1,0}-{2866,3598,0,1,1}-{2840,10101,1,1,4}-{2857,10055,2,1,3}-{2836,10090,2,1,1}-{2925,10033,0,1,6}-{2855,3685,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1112\",\r\n      \"loc_data\": \"{2867,3595,0,1,6}-{2871,3597,0,1,4}-{2832,10089,1,1,1}-{2836,10077,2,1,1}-{2925,10030,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1113\",\r\n      \"loc_data\": \"{2831,10083,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1114\",\r\n      \"loc_data\": \"{2826,10078,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1115\",\r\n      \"loc_data\": \"{2832,10088,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1116\",\r\n      \"loc_data\": \"{2824,10073,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1117\",\r\n      \"loc_data\": \"{2829,10101,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1118\",\r\n      \"loc_data\": \"{2920,3613,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1119\",\r\n      \"loc_data\": \"{2930,3614,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1120\",\r\n      \"loc_data\": \"{2927,3608,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1121\",\r\n      \"loc_data\": \"{2930,3600,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1122\",\r\n      \"loc_data\": \"{2918,3604,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1123\",\r\n      \"loc_data\": \"{2914,3603,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1124\",\r\n      \"loc_data\": \"{2925,3600,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1125\",\r\n      \"loc_data\": \"{2916,3610,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1128\",\r\n      \"loc_data\": \"{2833,10080,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1129\",\r\n      \"loc_data\": \"{2833,10084,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1131\",\r\n      \"loc_data\": \"{2905,3694,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1132\",\r\n      \"loc_data\": \"{2901,3697,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1133\",\r\n      \"loc_data\": \"{2895,3699,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1134\",\r\n      \"loc_data\": \"{2891,3699,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1135\",\r\n      \"loc_data\": \"{2843,10057,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1136\",\r\n      \"loc_data\": \"{2840,10056,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1137\",\r\n      \"loc_data\": \"{2847,10056,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1138\",\r\n      \"loc_data\": \"{2826,10083,1,1,0}-{2837,10083,2,1,1}-{2909,3639,0,1,3}-{2923,10031,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1140\",\r\n      \"loc_data\": \"{2856,10054,1,0,0}-{2860,10057,1,0,0}-{2898,3688,0,0,0}-{2819,3586,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1141\",\r\n      \"loc_data\": \"{2857,10059,1,0,0}-{2857,10057,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1142\",\r\n      \"loc_data\": \"{2851,10089,0,1,1}-{2854,10092,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1143\",\r\n      \"loc_data\": \"{2850,10088,0,1,3}-{2854,10086,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1144\",\r\n      \"loc_data\": \"{2856,10089,0,1,4}-{2858,10089,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1146\",\r\n      \"loc_data\": \"{2864,10081,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1147\",\r\n      \"loc_data\": \"{2853,10076,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1148\",\r\n      \"loc_data\": \"{2858,10082,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1149\",\r\n      \"loc_data\": \"{2861,10085,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1150\",\r\n      \"loc_data\": \"{2857,10075,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1151\",\r\n      \"loc_data\": \"{2845,10058,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1153\",\r\n      \"loc_data\": \"{3489,9509,2,1,4}-{3499,9515,2,1,6}-{3505,9527,2,1,5}-{3510,9521,2,1,1}-{3490,9526,2,1,3}-{3475,9524,2,1,5}-{3465,9505,2,1,1}-{3479,9501,2,1,3}-{3487,9491,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1154\",\r\n      \"loc_data\": \"{3472,9501,2,1,3}-{3495,9494,2,1,4}-{3479,9484,2,1,1}-{3500,9477,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1155\",\r\n      \"loc_data\": \"{3468,9486,2,1,0}-{3467,9480,2,1,1}-{3505,9496,2,1,6}-{3513,9496,2,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1157\",\r\n      \"loc_data\": \"{3480,9508,0,1,0}-{3495,9505,0,1,2}-{3492,9490,0,1,1}-{3472,9497,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1158\",\r\n      \"loc_data\": \"{3484,9491,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1161\",\r\n      \"loc_data\": \"{3487,9526,2,1,5}-{3474,9519,2,1,1}-{3465,9512,2,1,0}-{3489,9501,2,1,4}-{3494,9501,2,1,3}-{3480,9489,2,1,6}-{3483,9477,2,1,3}-{3494,9476,2,1,3}-{3473,9487,0,1,3}-{3476,9496,0,1,6}-{3473,9501,0,1,7}-{3481,9504,0,1,6}-{3488,9514,0,1,6}-{3497,9501,0,1,3}-{3486,9490,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1162\",\r\n      \"loc_data\": \"{2781,3088,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1171\",\r\n      \"loc_data\": \"{2766,3168,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1172\",\r\n      \"loc_data\": \"{2909,3086,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1174\",\r\n      \"loc_data\": \"{2792,3015,0,0,0}-{2792,3019,0,0,0}-{2801,3010,0,0,0}-{2792,3015,0,0,4}-{2792,3019,0,0,4}-{2801,3010,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1176\",\r\n      \"loc_data\": \"{2928,3112,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1177\",\r\n      \"loc_data\": \"{2912,3119,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1178\",\r\n      \"loc_data\": \"{2768,3165,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1179\",\r\n      \"loc_data\": \"{2941,3100,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1180\",\r\n      \"loc_data\": \"{2916,3110,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1181\",\r\n      \"loc_data\": \"{2902,3101,0,1,1}-{2922,3105,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1192\",\r\n      \"loc_data\": \"{2924,3506,0,1,0}-{2927,3498,0,0,0}-{2297,3176,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1193\",\r\n      \"loc_data\": \"{2297,3176,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1194\",\r\n      \"loc_data\": \"{2298,3177,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1195\",\r\n      \"loc_data\": \"{3228,3501,0,1,5}-{3023,4504,0,1,4}-{2216,3174,0,1,4}-{2294,3155,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1196\",\r\n      \"loc_data\": \"{3025,4506,0,1,5}-{3023,4504,0,1,4}-{2212,3174,0,1,3}-{2294,3152,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1198\",\r\n      \"loc_data\": \"{2296,3192,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1199\",\r\n      \"loc_data\": \"{2262,3151,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1201\",\r\n      \"loc_data\": \"{2264,3147,0,1,1}-{2266,3145,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1202\",\r\n      \"loc_data\": \"{2352,3172,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1203\",\r\n      \"loc_data\": \"{2189,3155,0,0,1}-{2183,3156,0,1,4}-{2194,3156,0,1,6}-{2182,3148,0,1,4}-{2179,3137,0,1,3}-{2189,3136,0,1,3}-{2182,3146,0,1,3}-{2187,3172,0,0,1}-{2180,3180,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1205\",\r\n      \"loc_data\": \"{3054,3254,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1206\",\r\n      \"loc_data\": \"{2185,3144,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1207\",\r\n      \"loc_data\": \"{3055,3254,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1208\",\r\n      \"loc_data\": \"{2194,3140,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1213\",\r\n      \"loc_data\": \"{2914,3418,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1215\",\r\n      \"loc_data\": \"{2612,3287,0,0,0}-{2613,3287,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1216\",\r\n      \"loc_data\": \"{2611,3285,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1217\",\r\n      \"loc_data\": \"{3000,3386,0,1,0}-{3019,3368,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1218\",\r\n      \"loc_data\": \"{3412,3512,0,1,4}-{3412,3515,0,1,1}-{3413,3514,0,1,6}-{3414,3512,0,1,5}-{3415,3518,0,1,5}-{3416,3509,0,1,7}-{3416,3511,0,1,4}-{3417,3518,0,1,4}-{3418,3509,0,1,4}-{3419,3512,0,1,7}-{3420,3517,0,1,7}-{3420,3518,0,1,6}-{3423,3461,0,1,5}-{3426,3465,0,1,4}-{3427,3463,0,1,5}-{3428,3458,0,1,4}-{3428,3465,0,1,2}-{3430,3462,0,1,1}-{3430,3467,0,1,3}-{3433,3458,0,1,1}-{3433,3468,0,1,4}-{3434,3464,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1219\",\r\n      \"loc_data\": \"{3292,5455,0,1,3}-{3295,5452,0,1,0}-{3290,5448,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1220\",\r\n      \"loc_data\": \"{3600,3491,0,1,2}-{3598,3498,0,1,4}-{3600,3496,0,1,0}-{3600,3496,0,1,6}-{3602,3494,0,1,1}-{3597,3490,0,1,6}-{3595,3497,0,1,4}-{3605,3491,0,1,4}-{3604,3495,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1227\",\r\n      \"loc_data\": \"{3424,3318,0,1,0}-{3423,3312,0,1,4}-{3507,3435,0,1,4}-{3484,3456,0,1,0}-{3486,3458,0,1,4}-{3511,3455,0,1,0}-{3508,3420,0,1,3}-{3508,3420,0,1,4}-{3506,3402,0,1,7}-{3494,3388,0,1,0}-{3502,3392,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1228\",\r\n      \"loc_data\": \"{3420,3302,0,1,1}-{3424,3296,0,1,4}-{3509,3440,0,1,4}-{3518,3454,0,1,1}-{3504,3406,0,1,4}-{3497,3404,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1229\",\r\n      \"loc_data\": \"{3421,3302,0,1,4}-{3417,3291,0,1,4}-{3423,3288,0,1,4}-{3418,3284,0,1,6}-{3427,3298,0,1,3}-{3431,3303,0,1,1}-{3432,3311,0,1,1}-{3492,3457,0,1,1}-{3502,3455,0,1,2}-{3516,3415,0,1,4}-{3511,3401,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1230\",\r\n      \"loc_data\": \"{3419,3280,0,1,4}-{3421,3277,0,1,4}-{3431,3275,0,1,3}-{3428,3314,0,1,1}-{3436,3318,0,1,5}-{3434,3322,0,1,6}-{3496,3447,0,1,7}-{3520,3437,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1231\",\r\n      \"loc_data\": \"{3426,3271,0,1,4}-{3435,3268,0,1,7}-{3443,3266,0,1,7}-{3442,3319,0,1,1}-{3445,3318,0,1,6}-{3518,3397,0,1,4}-{3519,3408,0,1,2}-{3516,3410,0,1,2}-{3489,3391,0,1,2}-{3487,3409,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1232\",\r\n      \"loc_data\": \"{3441,3265,0,1,5}-{3438,3277,0,1,7}-{3438,3283,0,1,4}-{3439,3315,0,1,3}-{3439,3310,0,1,1}-{3435,3302,0,1,3}-{3508,3420,0,1,1}-{3514,3415,0,1,7}-{3525,3417,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1233\",\r\n      \"loc_data\": \"{3432,3285,0,1,4}-{3434,3288,0,1,5}-{3428,3290,0,1,3}-{3440,3295,0,1,4}-{3436,3288,0,1,1}-{3446,3289,0,1,3}-{3514,3415,0,1,6}-{3509,3415,0,1,1}-{3516,3402,0,1,2}-{3492,3393,0,1,7}-{3493,3401,0,1,6}-{3487,3406,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1234\",\r\n      \"loc_data\": \"{3446,3282,0,1,1}-{3446,3298,0,1,3}-{3449,3304,0,1,1}-{3493,3454,0,1,2}-{3493,3454,0,1,0}-{3518,3454,0,1,2}-{3519,3441,0,1,7}-{3506,3417,0,1,5}-{3519,3401,0,1,2}-{3499,3420,0,1,3}-{3520,3412,0,1,0}-{3516,3410,0,1,7}-{3513,3383,0,1,0}-{3491,3388,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1235\",\r\n      \"loc_data\": \"{3425,3306,0,1,1}-{3442,3303,0,1,3}-{3437,3299,0,1,1}-{3422,3321,0,1,1}-{3486,3458,0,1,7}-{3503,3420,0,1,3}-{3514,3398,0,1,4}-{3524,3419,0,1,1}-{3509,3386,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1239\",\r\n      \"loc_data\": \"{3166,3033,0,1,1}-{3174,3043,0,1,6}-{3177,3041,0,1,4}-{3176,3038,0,1,4}-{3177,3035,0,1,7}-{3183,3035,0,1,6}-{3182,3032,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1240\",\r\n      \"loc_data\": \"{3502,3288,0,1,4}-{3505,3284,0,1,4}-{3490,3292,0,1,4}-{3502,3300,0,1,4}-{3492,3303,0,1,4}-{3516,3303,0,1,4}-{3478,3281,0,1,4}-{3473,3273,0,1,4}-{3469,3288,0,1,4}-{3469,3304,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1251\",\r\n      \"loc_data\": \"{3474,3309,0,1,5}-{3486,3277,0,1,4}-{3496,3289,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1253\",\r\n      \"loc_data\": \"{3488,3297,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1257\",\r\n      \"loc_data\": \"{3490,3290,0,0,3}-{3487,3303,0,1,5}-{3496,3296,0,1,4}-{3479,3303,0,1,4}-{3498,3282,0,1,3}-{3473,3281,0,1,3}-{3478,3308,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1258\",\r\n      \"loc_data\": \"{3488,3287,0,1,1}-{3501,3285,0,1,5}-{3478,3274,0,1,4}-{3497,3283,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1261\",\r\n      \"loc_data\": \"{3492,3300,0,1,4}-{3498,3300,0,1,5}-{3487,3302,0,1,6}-{3497,3299,0,1,5}-{3488,3273,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1262\",\r\n      \"loc_data\": \"{3487,3283,0,1,1}-{3477,3300,0,1,4}-{3497,3276,0,1,1}-{3502,3279,0,1,1}-{3481,3296,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1263\",\r\n      \"loc_data\": \"{3108,3160,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1266\",\r\n      \"loc_data\": \"{2680,3719,0,0,7}-{2684,3722,0,0,1}-{2684,3726,0,0,1}-{2678,3728,0,0,2}-{2673,3728,0,0,0}-{2670,3724,0,0,3}-{2671,3726,0,0,2}-{2679,3731,0,0,2}-{2684,3729,0,0,6}-{2688,3721,0,0,1}-{2693,3715,0,0,5}-{2699,3715,0,0,2}-{2706,3711,0,0,1}-{2712,3718,0,0,5}-{2716,3721,0,0,7}-{2722,3726,0,0,1}-{2525,3763,0,0,7}-{2508,3762,0,0,0}-{2510,3755,0,0,2}-{2523,3756,0,0,1}-{2532,3752,0,0,0}-{2529,3755,0,0,1}-{2528,3739,0,0,6}-{2529,3730,0,0,0}-{2518,3724,0,0,1}-{2508,3723,0,0,1}-{2525,3718,0,0,1}-{2549,3733,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1268\",\r\n      \"loc_data\": \"{2681,3716,0,0,2}-{2678,3721,0,0,2}-{2684,3719,0,0,1}-{2699,3719,0,0,4}-{2701,3717,0,0,2}-{2707,3719,0,0,0}-{2700,3726,0,0,2}-{2695,3713,0,0,2}-{2716,3718,0,0,5}-{2706,3713,0,0,2}-{2537,3761,0,0,7}-{2537,3761,0,0,7}-{2528,3767,0,0,3}-{2526,3753,0,0,2}-{2513,3755,0,0,3}-{2505,3753,0,0,3}-{2530,3751,0,0,1}-{2527,3755,0,0,1}-{2532,3758,0,0,6}-{2532,3751,0,0,3}-{2530,3738,0,0,2}-{2531,3729,0,0,0}-{2523,3723,0,0,1}-{2520,3722,0,0,3}-{2515,3720,0,0,3}-{2505,3724,0,0,4}-{2505,3729,0,0,6}-{2535,3717,0,0,4}-{2536,3724,0,0,1}-{2543,3729,0,0,6}-{2550,3734,0,0,1}-{2552,3747,0,0,6}-{2552,3752,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1269\",\r\n      \"loc_data\": \"{2672,3683,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1270\",\r\n      \"loc_data\": \"{2770,3624,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1274\",\r\n      \"loc_data\": \"{2660,3680,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1275\",\r\n      \"loc_data\": \"{2657,3680,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1276\",\r\n      \"loc_data\": \"{2658,3679,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1277\",\r\n      \"loc_data\": \"{2659,3678,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1278\",\r\n      \"loc_data\": \"{2659,3664,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1281\",\r\n      \"loc_data\": \"{2661,3651,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1282\",\r\n      \"loc_data\": \"{2640,3681,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1283\",\r\n      \"loc_data\": \"{2647,3660,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1284\",\r\n      \"loc_data\": \"{2658,3673,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1285\",\r\n      \"loc_data\": \"{2657,3669,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1286\",\r\n      \"loc_data\": \"{2656,3676,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1287\",\r\n      \"loc_data\": \"{2652,3588,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1288\",\r\n      \"loc_data\": \"{2634,3667,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1289\",\r\n      \"loc_data\": \"{2667,3692,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1294\",\r\n      \"loc_data\": \"{2658,3673,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1296\",\r\n      \"loc_data\": \"{2660,3663,0,0,6}-{2657,3663,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1298\",\r\n      \"loc_data\": \"{2663,3646,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1299\",\r\n      \"loc_data\": \"{2660,3646,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1300\",\r\n      \"loc_data\": \"{2662,3674,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1301\",\r\n      \"loc_data\": \"{2623,3675,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1302\",\r\n      \"loc_data\": \"{2641,3699,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1303\",\r\n      \"loc_data\": \"{2664,3692,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1304\",\r\n      \"loc_data\": \"{2582,3845,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1305\",\r\n      \"loc_data\": \"{2643,3676,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1306\",\r\n      \"loc_data\": \"{2674,3677,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1307\",\r\n      \"loc_data\": \"{2658,3673,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1308\",\r\n      \"loc_data\": \"{2672,3662,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1309\",\r\n      \"loc_data\": \"{2667,3653,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1310\",\r\n      \"loc_data\": \"{2667,3701,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1311\",\r\n      \"loc_data\": \"{2655,3651,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1312\",\r\n      \"loc_data\": \"{2639,3651,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1313\",\r\n      \"loc_data\": \"{2626,3653,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1314\",\r\n      \"loc_data\": \"{2675,3677,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1315\",\r\n      \"loc_data\": \"{2646,3675,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1317\",\r\n      \"loc_data\": \"{2632,3677,0,1,2}-{2641,3682,0,1,3}-{2643,3675,0,1,6}-{2643,3674,0,1,4}-{2646,3668,0,1,3}-{2651,3669,0,1,3}-{2648,3688,0,1,4}-{2656,3692,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1318\",\r\n      \"loc_data\": \"{2671,3658,0,1,2}-{2638,3648,0,1,3}-{2626,3658,0,1,4}-{2626,3668,0,1,1}-{2613,3668,0,1,3}-{2630,3673,0,1,7}-{2635,3680,0,1,4}-{2644,3675,0,1,5}-{2642,3681,0,1,3}-{2631,3678,0,1,6}-{2661,3698,0,1,1}-{2663,3687,0,1,3}-{2673,3695,0,1,3}-{2674,3710,0,1,1}-{2676,3693,0,1,3}-{2675,3685,0,1,4}-{2669,3677,0,1,1}-{2667,3670,0,1,2}-{2675,3670,0,1,4}-{2679,3685,0,1,2}-{2667,3671,0,1,3}-{2666,3663,0,1,6}-{2688,3659,0,1,2}-{2658,3657,0,1,4}-{2684,3649,0,1,4}-{2679,3649,0,1,4}-{2646,3664,0,1,4}-{2646,3655,0,1,1}-{2637,3655,0,1,3}-{2667,3658,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1320\",\r\n      \"loc_data\": \"{2738,3636,0,1,7}-{2739,3636,0,1,7}-{2738,3637,0,1,4}-{2735,3637,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1321\",\r\n      \"loc_data\": \"{2736,3642,0,1,4}-{2744,3638,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1329\",\r\n      \"loc_data\": \"{3073,3640,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1334\",\r\n      \"loc_data\": \"{2510,3644,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1338\",\r\n      \"loc_data\": \"{3151,5559,0,1,2}-{3157,5548,0,1,3}-{3155,5553,0,1,4}-{3145,5559,0,1,6}-{3152,5556,0,1,3}-{3149,5544,0,1,0}-{3145,5548,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1339\",\r\n      \"loc_data\": \"{3153,5547,0,1,0}-{3150,5545,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1340\",\r\n      \"loc_data\": \"{3147,5557,0,1,3}-{3154,5559,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1343\",\r\n      \"loc_data\": \"{3145,5548,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1359\",\r\n      \"loc_data\": \"{2612,3875,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1360\",\r\n      \"loc_data\": \"{2620,3896,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1369\",\r\n      \"loc_data\": \"{2527,5806,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1373\",\r\n      \"loc_data\": \"{2500,3860,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1374\",\r\n      \"loc_data\": \"{2505,3854,1,0,4}-{2509,3849,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1375\",\r\n      \"loc_data\": \"{2501,3858,1,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1376\",\r\n      \"loc_data\": \"{2548,3895,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1377\",\r\n      \"loc_data\": \"{2544,3843,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1378\",\r\n      \"loc_data\": \"{2516,3865,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1385\",\r\n      \"loc_data\": \"{2629,3694,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1389\",\r\n      \"loc_data\": \"{2603,3877,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1390\",\r\n      \"loc_data\": \"{2604,3876,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1391\",\r\n      \"loc_data\": \"{2604,3876,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1393\",\r\n      \"loc_data\": \"{2519,3868,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1394\",\r\n      \"loc_data\": \"{2519,3863,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1395\",\r\n      \"loc_data\": \"{2547,3868,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1396\",\r\n      \"loc_data\": \"{2525,3892,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1397\",\r\n      \"loc_data\": \"{2573,3856,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1398\",\r\n      \"loc_data\": \"{2526,3850,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1399\",\r\n      \"loc_data\": \"{2577,3854,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1400\",\r\n      \"loc_data\": \"{3037,4512,0,1,0}-{3049,4498,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1401\",\r\n      \"loc_data\": \"{2605,3878,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1402\",\r\n      \"loc_data\": \"{2603,3877,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1404\",\r\n      \"loc_data\": \"{3037,4492,0,1,4}-{3036,4502,0,1,4}-{3029,4520,0,1,1}-{3019,4512,0,1,1}-{2239,3164,0,1,2}-{2241,3166,0,1,3}-{2242,3163,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1405\",\r\n      \"loc_data\": \"{2576,3843,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1427\",\r\n      \"loc_data\": \"{2957,3025,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1434\",\r\n      \"loc_data\": \"{2753,2770,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1447\",\r\n      \"loc_data\": \"{2761,2785,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1452\",\r\n      \"loc_data\": \"{2743,2796,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1454\",\r\n      \"loc_data\": \"{2742,2790,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1457\",\r\n      \"loc_data\": \"{2747,2782,0,0,1}-{2754,2778,0,1,1}-{2761,2778,0,1,1}-{2765,2779,0,1,4}-{2767,2784,0,1,6}-{2772,2781,0,1,5}-{2774,2787,0,1,1}-{2777,2790,0,1,4}-{2762,2793,0,1,3}-{2756,2789,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1458\",\r\n      \"loc_data\": \"{2728,2751,0,1,1}-{2728,2758,0,1,1}-{2727,2762,0,1,6}-{2728,2755,0,1,6}-{2714,2753,0,1,1}-{2714,2757,0,1,6}-{2714,2761,0,1,6}-{2715,2749,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1459\",\r\n      \"loc_data\": \"{2790,2791,0,1,4}-{2803,2785,0,1,7}-{2797,2792,0,1,0}-{2800,2779,0,1,5}-{2788,2779,0,1,7}-{2795,2776,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1460\",\r\n      \"loc_data\": \"{2787,2794,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1463\",\r\n      \"loc_data\": \"{2600,3276,0,1,4}-{2601,3276,0,1,6}-{2601,3277,0,1,6}-{2601,3278,0,1,2}-{2602,3279,0,1,5}-{2602,3282,0,1,4}-{2604,3276,0,1,4}-{2605,3280,0,1,4}-{2605,3281,0,1,7}-{2606,3280,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1469\",\r\n      \"loc_data\": \"{2595,3277,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1514\",\r\n      \"loc_data\": \"{3432,3487,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1515\",\r\n      \"loc_data\": \"{3438,3487,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1516\",\r\n      \"loc_data\": \"{3437,3487,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1517\",\r\n      \"loc_data\": \"{3434,3483,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1518\",\r\n      \"loc_data\": \"{3435,3483,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1519\",\r\n      \"loc_data\": \"{3433,3486,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1520\",\r\n      \"loc_data\": \"{3434,3486,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1553\",\r\n      \"loc_data\": \"{2828,10065,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1554\",\r\n      \"loc_data\": \"{2829,10104,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1555\",\r\n      \"loc_data\": \"{2829,10096,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1560\",\r\n      \"loc_data\": \"{3150,5454,0,1,4}-{3144,5446,0,1,7}-{3166,5446,0,1,3}-{3158,5451,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1561\",\r\n      \"loc_data\": \"{3144,5450,0,1,1}-{3153,5454,0,1,5}-{3160,5450,0,1,5}-{3167,5450,0,1,3}-{3161,5451,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1562\",\r\n      \"loc_data\": \"{3147,5448,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1563\",\r\n      \"loc_data\": \"{3152,5453,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1582\",\r\n      \"loc_data\": \"{2657,9500,0,0,1}-{2632,9589,2,0,1}-{2628,9549,2,0,5}-{2629,9543,2,0,2}-{3249,5517,0,1,3}-{2568,9889,0,1,6}-{2578,9898,0,1,1}-{2352,9755,0,1,1}-{2343,9775,0,1,1}-{2340,9777,0,1,1}-{2334,9775,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1583\",\r\n      \"loc_data\": \"{2655,9481,0,0,3}-{2631,9579,2,0,4}-{3211,5519,0,1,0}-{3254,5513,0,1,7}-{2563,9885,0,1,7}-{2575,9897,0,1,1}-{2352,9760,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1584\",\r\n      \"loc_data\": \"{2661,9481,0,0,4}-{2635,9570,2,0,1}-{2627,9539,2,0,5}-{3209,5512,0,1,6}-{3231,5494,0,1,7}-{2350,9776,0,1,1}-{2337,9773,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1585\",\r\n      \"loc_data\": \"{2666,9482,0,0,5}-{2641,9563,2,0,5}-{3257,5523,0,1,1}-{3204,5516,0,1,3}-{2575,9892,0,1,6}-{2355,9762,0,1,1}-{2354,9768,0,1,1}-{2351,9770,0,1,1}-{2354,9773,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1586\",\r\n      \"loc_data\": \"{2668,9497,0,0,4}-{2635,9565,2,0,4}-{2633,9554,2,0,4}-{3247,5520,0,1,5}-{3205,5513,0,1,6}-{3213,5519,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1587\",\r\n      \"loc_data\": \"{2692,3202,0,1,4}-{2695,3216,0,1,0}-{2830,3241,0,1,6}-{2681,9577,0,0,0}-{2673,9591,0,0,5}-{2655,9575,0,0,5}-{2640,9580,0,0,0}-{2646,9553,0,0,1}-{2650,9536,0,0,7}-{2645,9489,0,0,7}-{2670,9543,0,0,0}-{2663,9555,0,0,7}-{3237,5557,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1588\",\r\n      \"loc_data\": \"{2691,3215,0,1,3}-{2826,3245,0,1,3}-{2679,9592,0,0,2}-{2654,9587,0,0,3}-{2650,9564,0,0,6}-{2647,9548,0,0,6}-{2637,9545,0,0,5}-{2637,9532,0,0,5}-{2634,9521,0,0,0}-{2642,9493,0,0,0}-{2645,9484,0,0,7}-{2678,9548,0,0,4}-{2658,9551,0,0,1}-{3246,5558,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1589\",\r\n      \"loc_data\": \"{2698,9503,0,0,7}-{2713,9505,0,0,0}-{2717,9502,0,0,7}-{2699,9523,0,0,0}-{2706,9525,0,0,2}-{2719,9517,0,0,5}-{2724,9515,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1590\",\r\n      \"loc_data\": \"{2730,9490,0,1,0}-{2731,9482,0,1,7}-{2742,9491,0,1,0}-{3184,5557,0,1,7}-{3148,5514,0,1,6}-{3144,5514,0,1,3}-{2340,9733,0,1,3}-{2348,9733,0,1,3}-{2348,9743,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1591\",\r\n      \"loc_data\": \"{2703,9456,0,0,0}-{2717,9459,0,0,7}-{2731,9460,0,0,3}-{2737,9454,0,0,3}-{2737,9444,0,0,3}-{2736,9432,0,0,3}-{2738,9421,0,0,5}-{2727,9418,0,0,1}-{2724,9439,0,0,0}-{2715,9443,0,0,4}-{2891,3919,0,1,0}-{2901,3914,0,1,0}-{2911,3914,0,1,0}-{2920,3919,0,1,0}-{2929,3919,0,1,0}-{2929,3935,0,1,0}-{2929,3944,0,1,0}-{2702,9443,0,0,3}-{2700,9428,0,0,3}-{2705,9419,0,0,7}-{2311,9744,0,1,3}-{2313,9733,0,1,3}-{2317,9735,0,1,3}-{2329,9736,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1592\",\r\n      \"loc_data\": \"{2893,3929,0,1,0}-{2893,3942,0,1,0}-{2897,3951,0,1,0}-{2903,3954,0,1,0}-{2910,3954,0,1,0}-{2920,3952,0,1,0}-{2929,3952,0,1,0}-{2728,9426,0,0,4}-{2714,9432,0,0,0}-{2707,9450,0,0,6}-{2724,9451,0,0,6}-{2311,9778,0,1,3}-{2313,9772,0,1,2}-{2318,9776,0,1,3}-{2318,9764,0,1,3}-{2318,9760,0,1,3}-{2313,9752,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1593\",\r\n      \"loc_data\": \"{2744,9503,0,0,2}-{2681,9563,0,0,5}-{2677,9586,0,0,2}-{2644,9587,0,0,1}-{2652,9526,0,0,7}-{2656,9514,0,0,7}-{2666,9522,0,0,4}-{2665,9513,0,0,3}-{2666,9489,0,0,1}-{2702,9525,0,0,2}-{2704,9487,0,0,7}-{2711,9485,0,0,2}-{2722,9486,0,0,4}-{2717,9480,0,0,6}-{2733,9494,0,0,1}-{2742,9489,0,0,0}-{2638,9592,2,0,5}-{2633,9583,2,0,7}-{2627,9545,2,0,6}-{2626,9535,2,0,6}-{2628,9507,2,0,5}-{2635,9508,2,0,2}-{2634,9483,2,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1594\",\r\n      \"loc_data\": \"{2672,9569,0,0,1}-{2657,9577,0,0,3}-{2643,9543,0,0,7}-{2646,9530,0,0,7}-{2643,9519,0,0,7}-{2660,9521,0,0,1}-{2665,9527,0,0,2}-{2671,9521,0,0,7}-{2670,9516,0,0,6}-{2660,9497,0,0,7}-{2643,9487,0,0,5}-{2653,9488,0,0,2}-{2677,9501,0,0,2}-{2699,9516,0,0,0}-{2709,9524,0,0,7}-{2683,9476,0,0,7}-{2700,9489,0,0,5}-{2703,9484,0,0,5}-{2710,9481,0,0,2}-{2716,9486,0,0,2}-{2726,9489,0,0,1}-{2735,9481,0,0,4}-{2740,9497,0,0,2}-{2739,9506,0,0,0}-{2658,9546,0,0,6}-{2636,9574,2,0,7}-{2643,9566,2,0,7}-{2635,9559,2,0,7}-{2630,9515,2,0,7}-{2642,9506,2,0,7}-{2629,9487,2,0,5}-{2648,9476,2,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1595\",\r\n      \"loc_data\": \"{2744,3152,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1597\",\r\n      \"loc_data\": \"{3146,9913,0,1,6}-{168,50,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1598\",\r\n      \"loc_data\": \"{2447,4429,0,1,6}-{162,54,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1600\",\r\n      \"loc_data\": \"{2791,9997,0,1,3}-{3190,9574,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1601\",\r\n      \"loc_data\": \"{2797,9997,0,1,6}-{2781,9996,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1602\",\r\n      \"loc_data\": \"{2793,9995,0,1,3}-{2783,9998,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1603\",\r\n      \"loc_data\": \"{2789,9994,0,1,1}-{2786,9998,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1604\",\r\n      \"loc_data\": \"{3434,3550,1,1,3}-{3439,3549,1,1,4}-{3425,3549,1,1,5}-{3423,3553,1,1,4}-{3426,3541,1,1,1}-{3425,3541,1,1,2}-{3426,3539,1,1,0}-{3420,3537,1,1,3}-{3417,3536,1,1,6}-{2373,9778,0,1,1}-{2372,9768,0,1,1}-{2371,9774,0,1,1}-{2375,9770,0,1,1}-{2383,9777,0,1,1}-{2387,9774,0,1,1}-{2384,9772,0,1,1}-{2387,9770,0,1,1}-{2392,9780,0,1,1}-{2396,9775,0,1,1}-{2399,9777,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1608\",\r\n      \"loc_data\": \"{2698,9999,0,1,6}-{2695,9997,0,1,7}-{2697,9996,0,1,5}-{2695,9999,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1609\",\r\n      \"loc_data\": \"{2700,9994,0,1,6}-{2698,10001,0,1,4}-{2703,9994,0,1,4}-{2701,10000,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1610\",\r\n      \"loc_data\": \"{3443,3537,2,1,4}-{3434,3536,2,1,4}-{3443,3540,2,1,3}-{3446,3548,2,1,4}-{3439,3549,2,1,3}-{3434,3547,2,1,1}-{3444,3537,2,1,3}-{3174,5474,0,1,4}-{3175,5479,0,1,6}-{3183,5473,0,1,7}-{3178,5468,0,1,4}-{2428,9745,0,1,1}-{2428,9742,0,1,1}-{2428,9735,0,1,1}-{2425,9737,0,1,1}-{2422,9735,0,1,1}-{2419,9738,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1612\",\r\n      \"loc_data\": \"{3438,3562,0,1,1}-{3430,3564,0,1,3}-{3434,3555,0,1,5}-{3443,3551,0,1,4}-{3442,3545,0,1,1}-{3449,3536,0,1,1}-{3440,3539,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1613\",\r\n      \"loc_data\": \"{3439,3565,2,1,6}-{3443,3571,2,1,1}-{3435,3565,2,1,3}-{3443,3564,2,1,2}-{3444,3559,2,1,2}-{3427,3558,2,1,0}-{3425,3557,2,1,4}-{3430,3557,2,1,3}-{3170,5554,0,1,2}-{3166,5556,0,1,5}-{3171,5560,0,1,4}-{3173,5556,0,1,3}-{2426,9751,0,1,1}-{2427,9754,0,1,1}-{2425,9757,0,1,1}-{2422,9756,0,1,1}-{2426,9753,0,1,1}-{2420,9755,0,1,1}-{2417,9755,0,1,1}-{2406,9763,0,1,1}-{2404,9765,0,1,1}-{2407,9766,0,1,1}-{2410,9764,0,1,1}-{2416,9765,0,1,1}-{2417,9763,0,1,1}-{2420,9764,0,1,1}-{2418,9765,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1615\",\r\n      \"loc_data\": \"{3422,3566,2,1,5}-{3426,3568,2,1,6}-{3418,3562,2,1,4}-{3414,3566,2,1,3}-{3412,3570,2,1,4}-{3421,3572,2,1,2}-{3422,3571,2,1,1}-{3033,4873,0,1,7}-{3039,4885,0,1,3}-{3050,4890,0,1,3}-{3062,4892,0,1,5}-{3064,4901,0,1,3}-{3056,4912,0,1,3}-{3048,4916,0,1,5}-{3038,4911,0,1,6}-{3022,4914,0,1,6}-{3018,4902,0,1,6}-{3025,4898,0,1,4}-{3033,4885,0,1,0}-{3021,4877,0,1,3}-{3048,4872,0,1,1}-{3061,4880,0,1,3}-{3061,4891,0,1,1}-{3054,4901,0,1,1}-{2402,9739,0,1,1}-{2402,9742,0,1,1}-{2402,9751,0,1,1}-{2406,9753,0,1,1}-{2408,9750,0,1,1}-{2404,9748,0,1,1}-{2407,9748,0,1,1}-{2416,9748,0,1,1}-{2415,9745,0,1,1}-{2418,9745,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1616\",\r\n      \"loc_data\": \"{2741,10011,0,1,2}-{2742,10010,0,1,3}-{2739,10014,0,1,1}-{2740,10006,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1617\",\r\n      \"loc_data\": \"{2743,10003,0,1,1}-{2746,10008,0,1,2}-{2743,10015,0,1,3}-{2745,10011,0,1,5}-{2744,10016,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1618\",\r\n      \"loc_data\": \"{3424,3565,1,1,1}-{3416,3562,1,1,6}-{3423,3559,1,1,0}-{3424,3560,1,1,4}-{3412,3558,1,1,1}-{3412,3568,1,1,1}-{3417,3565,1,1,3}-{2425,9774,0,1,1}-{2425,9776,0,1,1}-{2423,9779,0,1,1}-{2419,9785,0,1,1}-{2415,9785,0,1,1}-{2416,9788,0,1,1}-{2430,9788,0,1,1}-{2434,9789,0,1,1}-{2436,9794,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1620\",\r\n      \"loc_data\": \"{2794,10036,0,1,4}-{2788,10037,0,1,0}-{2795,10034,0,1,3}-{2785,10035,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1621\",\r\n      \"loc_data\": \"{2797,10035,0,1,6}-{2787,10032,0,1,3}-{2802,10031,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1624\",\r\n      \"loc_data\": \"{3179,5522,0,1,6}-{3223,9393,0,1,5}-{3225,9401,0,1,0}-{3222,9375,0,1,6}-{3220,9380,0,1,6}-{3215,9364,0,1,3}-{3213,9361,0,1,1}-{3212,9355,0,1,2}-{3230,9367,0,1,3}-{3240,9350,0,1,5}-{3248,9348,0,1,4}-{3255,9350,0,1,4}-{3256,9392,0,1,4}-{3168,5513,0,1,3}-{3174,5514,0,1,6}-{3178,5517,0,1,4}-{3178,5528,0,1,1}-{3169,5516,0,1,3}-{3179,5524,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1626\",\r\n      \"loc_data\": \"{3165,5537,0,1,3}-{3159,5538,0,1,4}-{3155,5539,0,1,3}-{3158,5537,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1627\",\r\n      \"loc_data\": \"{2724,10008,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1628\",\r\n      \"loc_data\": \"{2723,10004,0,1,4}-{2722,9999,0,1,1}-{2729,10002,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1629\",\r\n      \"loc_data\": \"{2723,10005,0,1,0}-{2726,9998,0,1,1}-{2723,10009,0,1,3}-{2727,9998,0,1,4}-{2727,10001,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1630\",\r\n      \"loc_data\": \"{2721,10005,0,1,1}-{2724,10005,0,1,3}-{2729,10004,0,1,3}-{2724,10012,0,1,4}-{2718,10009,0,1,1}-{2721,10001,0,1,7}-{2720,9996,0,1,7}-{2721,10006,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1631\",\r\n      \"loc_data\": \"{2800,10017,0,1,1}-{2796,10021,0,1,1}-{2805,10021,0,1,1}-{2803,10013,0,1,1}-{3160,9589,0,1,3}-{3167,9589,0,1,6}-{3179,9585,0,1,1}-{3188,9572,0,1,7}-{3190,9580,0,1,3}-{3206,9586,0,1,3}-{3221,9586,0,1,7}-{3226,9573,0,1,5}-{3223,9569,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1632\",\r\n      \"loc_data\": \"{2798,10019,0,1,1}-{2800,10015,0,1,1}-{2797,10018,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1633\",\r\n      \"loc_data\": \"{1935,3217,0,1,0}-{1933,3209,0,1,0}-{1930,3208,0,1,0}-{1929,3217,0,1,0}-{1927,3219,0,1,0}-{1924,3211,0,1,0}-{1920,3216,0,1,0}-{1925,3213,0,1,0}-{1837,3244,0,1,0}-{1836,3250,0,1,0}-{1845,3251,0,1,0}-{1845,3247,0,1,0}-{1849,3241,0,1,0}-{1858,3251,0,1,0}-{1853,3247,0,1,0}-{1848,3254,0,1,0}-{2761,10007,0,1,0}-{2757,10010,0,1,3}-{2763,10000,0,1,5}-{2760,10011,0,1,0}-{2761,9997,0,1,4}-{3263,9399,0,1,3}-{3274,9397,0,1,1}-{3275,9393,0,1,6}-{3271,9384,0,1,0}-{3270,9380,0,1,2}-{3283,9378,0,1,6}-{3285,9386,0,1,5}-{3284,9401,0,1,4}-{3278,9353,0,1,1}-{3299,9380,0,1,1}-{3319,9402,0,1,1}-{3305,9350,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1634\",\r\n      \"loc_data\": \"{2757,10008,0,1,6}-{2760,10005,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1635\",\r\n      \"loc_data\": \"{2758,10001,0,1,1}-{2763,10006,0,1,1}-{2766,10000,0,1,6}-{2759,9999,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1636\",\r\n      \"loc_data\": \"{2760,10004,0,1,1}-{2760,10002,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1637\",\r\n      \"loc_data\": \"{3276,5454,0,1,4}-{3279,5450,0,1,0}-{3271,5446,0,1,3}-{3277,5512,0,1,1}-{2700,10027,0,1,6}-{3278,5535,0,0,0}-{3277,5520,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1638\",\r\n      \"loc_data\": \"{3284,5456,0,1,1}-{3278,5453,0,1,1}-{3271,5512,0,1,4}-{2704,10022,0,1,4}-{2707,10023,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1639\",\r\n      \"loc_data\": \"{3283,5461,0,1,4}-{3285,5456,0,1,6}-{3275,5455,0,1,5}-{3272,5446,0,1,4}-{3277,5445,0,1,3}-{2711,10028,0,1,2}-{2710,10030,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1640\",\r\n      \"loc_data\": \"{3272,5445,0,1,4}-{2705,10028,0,1,3}-{2704,10031,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1641\",\r\n      \"loc_data\": \"{2708,10025,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1642\",\r\n      \"loc_data\": \"{2703,10020,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1643\",\r\n      \"loc_data\": \"{3246,5446,0,1,3}-{3434,3562,1,1,6}-{3439,3558,1,1,5}-{3444,3567,1,1,4}-{3439,3571,1,1,3}-{3435,3570,1,1,7}-{3447,3561,1,1,4}-{3442,3573,1,1,6}-{3237,5455,0,1,0}-{3246,5450,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1644\",\r\n      \"loc_data\": \"{3240,5448,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1648\",\r\n      \"loc_data\": \"{3426,3537,0,1,4}-{3413,3536,0,1,3}-{3419,3545,0,1,2}-{3426,3544,0,1,6}-{3410,3535,0,1,2}-{3425,3556,0,1,6}-{3418,3557,0,1,1}-{3428,3571,0,1,3}-{3432,3573,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1650\",\r\n      \"loc_data\": \"{3411,3541,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1655\",\r\n      \"loc_data\": \"{3424,3544,0,1,1}-{3423,3546,0,1,1}-{3409,3538,0,1,3}-{3421,3559,0,1,4}-{3413,3559,0,1,6}-{3433,3574,0,1,3}-{3428,3571,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1658\",\r\n      \"loc_data\": \"{2595,3087,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1679\",\r\n      \"loc_data\": \"{2291,3145,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1680\",\r\n      \"loc_data\": \"{2290,3143,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1681\",\r\n      \"loc_data\": \"{3202,5483,0,1,4}-{2544,9843,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1683\",\r\n      \"loc_data\": \"{3678,3511,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1684\",\r\n      \"loc_data\": \"{3660,3517,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1685\",\r\n      \"loc_data\": \"{3659,3497,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1686\",\r\n      \"loc_data\": \"{3657,3516,0,1,3}-{3663,3522,0,1,7}-{3654,3518,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1688\",\r\n      \"loc_data\": \"{3709,3497,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1691\",\r\n      \"loc_data\": \"{3624,3530,0,1,1}-{3623,3524,0,1,2}-{3618,3526,0,1,6}-{3612,3527,0,1,6}-{3609,3527,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1692\",\r\n      \"loc_data\": \"{3632,3528,0,1,5}-{3633,3525,0,1,6}-{3631,3529,0,1,3}-{3631,3529,0,1,2}-{3628,3530,0,1,1}-{3631,3530,0,1,4}-{3629,3529,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1694\",\r\n      \"loc_data\": \"{3673,3491,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1695\",\r\n      \"loc_data\": \"{3461,3558,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1697\",\r\n      \"loc_data\": \"{3662,3502,0,1,4}-{3664,3493,0,1,6}-{3672,3486,0,1,2}-{3685,3485,0,1,3}-{3684,3496,0,1,3}-{3675,3502,0,1,3}-{3667,3484,0,1,0}-{3666,3471,0,1,4}-{3676,3464,0,1,3}-{3683,3467,0,1,6}-{3685,3474,0,1,4}-{3690,3474,0,1,1}-{3695,3473,0,1,3}-{3693,3466,0,1,7}-{3698,3463,0,1,3}-{3688,3467,0,1,3}-{3675,3474,0,1,4}-{3665,3476,0,1,6}-{3662,3491,0,1,1}-{3662,3495,0,1,4}-{3661,3501,0,1,6}-{3682,3486,0,1,4}-{3678,3493,0,1,4}-{3673,3491,0,1,3}-{3658,3502,0,1,4}-{3660,3505,0,1,1}-{3665,3469,0,1,6}-{3659,3465,0,1,6}-{3667,3461,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1699\",\r\n      \"loc_data\": \"{3659,3480,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1700\",\r\n      \"loc_data\": \"{3681,3493,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1702\",\r\n      \"loc_data\": \"{3690,3464,0,0,1}-{3691,3464,0,0,1}-{3688,3464,0,0,1}-{3687,3464,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1703\",\r\n      \"loc_data\": \"{3697,3496,0,1,3}-{3699,3497,0,1,2}-{3689,3503,0,1,3}-{3690,3508,0,1,6}-{3690,3512,0,1,6}-{3689,3517,0,1,1}-{3690,3524,0,1,6}-{3689,3528,0,1,5}-{3690,3518,0,1,5}-{3689,3503,0,1,3}-{3689,3496,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1704\",\r\n      \"loc_data\": \"{3703,3487,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1706\",\r\n      \"loc_data\": \"{3661,3508,0,0,1}-{3658,3508,0,0,1}-{3652,3487,0,0,3}-{3652,3484,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1710\",\r\n      \"loc_data\": \"{3165,9631,0,1,6}-{3165,9633,0,1,0}-{3160,9634,0,1,7}-{3156,9630,0,1,6}-{3152,9627,0,1,4}-{3148,9621,0,1,4}-{3175,9630,0,1,1}-{3174,9634,0,1,3}-{3172,9638,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1711\",\r\n      \"loc_data\": \"{3160,9638,0,1,1}-{3159,9633,0,1,6}-{3161,9626,0,1,6}-{3169,9626,0,1,4}-{3171,9634,0,1,4}-{3164,9634,0,1,3}-{3165,9631,0,1,7}-{3180,9631,0,1,7}-{3183,9629,0,1,6}-{3182,9633,0,1,1}-{3172,9632,0,1,4}-{3158,9631,0,1,1}-{3160,9630,0,1,1}-{3159,9633,0,1,4}-{3150,9623,0,1,6}-{3152,9620,0,1,6}-{3159,9622,0,1,0}-{3169,9623,0,1,6}-{3169,9623,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1712\",\r\n      \"loc_data\": \"{3153,9646,0,1,3}-{3151,9651,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1714\",\r\n      \"loc_data\": \"{3172,9624,0,1,2}-{3161,9623,0,1,1}-{3151,9624,0,1,1}-{3150,9622,0,1,4}-{3153,9627,0,1,3}-{3157,9634,0,1,2}-{3171,9636,0,1,6}-{3174,9639,0,1,3}-{3174,9634,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1715\",\r\n      \"loc_data\": \"{3171,9635,0,1,3}-{3159,9636,0,1,2}-{3169,9630,0,1,3}-{3172,9625,0,1,0}-{3159,9627,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1752\",\r\n      \"loc_data\": \"{2510,3228,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1754\",\r\n      \"loc_data\": \"{3259,3308,0,1,4}-{3100,3246,0,1,2}-{3131,3263,0,1,5}-{3122,3278,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1755\",\r\n      \"loc_data\": \"{3258,3312,0,1,3}-{3106,3275,0,1,1}-{3106,3266,0,1,3}-{3114,3273,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1756\",\r\n      \"loc_data\": \"{3262,3320,0,1,1}-{3096,3251,0,1,3}-{3117,3278,0,1,0}-{3102,3261,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1757\",\r\n      \"loc_data\": \"{3233,3308,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1758\",\r\n      \"loc_data\": \"{2895,3403,0,0,0}-{3262,3325,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1759\",\r\n      \"loc_data\": \"{3250,3310,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1761\",\r\n      \"loc_data\": \"{3121,3274,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1765\",\r\n      \"loc_data\": \"{3206,3265,0,1,4}-{2923,3320,0,1,7}-{2921,3320,0,1,4}-{2923,3320,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1766\",\r\n      \"loc_data\": \"{3259,3262,0,1,4}-{3262,3274,0,1,3}-{3259,3278,0,1,1}-{3263,3273,0,1,7}-{3171,3320,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1767\",\r\n      \"loc_data\": \"{3262,3262,0,1,6}-{3025,3311,0,1,5}-{2924,3288,0,0,1}-{2921,3290,0,1,1}-{2926,3279,0,1,1}-{2931,3272,0,1,1}-{2936,3273,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1769\",\r\n      \"loc_data\": \"{2979,3203,0,1,4}-{3264,3249,0,1,4}-{2596,9822,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1770\",\r\n      \"loc_data\": \"{2999,3212,0,1,1}-{3262,3253,0,1,6}-{3259,3254,0,1,3}-{2595,9826,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1771\",\r\n      \"loc_data\": \"{2993,3199,0,1,6}-{3248,3233,0,1,6}-{3247,3240,0,1,3}-{3187, 3286, 0, 1, 0}-{3209, 3277, 0, 1, 0}-{3174, 3294, 0, 1, 0}-{3178, 3294, 0, 1, 0}-{3144, 3302, 0, 1, 0}-{3142, 3303, 0, 1, 0}-{3151, 3300, 0, 1, 0}-{3139, 3299, 0, 1, 0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1772\",\r\n      \"loc_data\": \"{2993,3203,0,1,0}-{3251,3231,0,1,1}-{3260,3241,0,1,0}-{3259,3222,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1773\",\r\n      \"loc_data\": \"{2991,3219,0,1,1}-{3252,3227,0,1,1}-{3263,3219,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1774\",\r\n      \"loc_data\": \"{3012,3204,0,1,3}-{3255,3228,0,1,4}-{3265,3219,0,1,2}-{2592,9834,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1775\",\r\n      \"loc_data\": \"{3010,3211,0,1,6}-{3254,3224,0,1,1}-{2585,9829,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1776\",\r\n      \"loc_data\": \"{2999,3216,0,1,6}-{3264,3247,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1778\",\r\n      \"loc_data\": \"{3260,3859,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1779\",\r\n      \"loc_data\": \"{2978,3752,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1780\",\r\n      \"loc_data\": \"{3272,3687,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1781\",\r\n      \"loc_data\": \"{3008,3862,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1782\",\r\n      \"loc_data\": \"{3363,3883,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1783\",\r\n      \"loc_data\": \"{3079,3516,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1784\",\r\n      \"loc_data\": \"{3025,3705,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1785\",\r\n      \"loc_data\": \"{3144,3788,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1786\",\r\n      \"loc_data\": \"{3234,3633,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1787\",\r\n      \"loc_data\": \"{3074,3609,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1795\",\r\n      \"loc_data\": \"{2967,9811,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1796\",\r\n      \"loc_data\": \"{2968,9809,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1798\",\r\n      \"loc_data\": \"{2701,3471,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1805\",\r\n      \"loc_data\": \"{2765,3652,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1828\",\r\n      \"loc_data\": \"{3231,9545,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1829\",\r\n      \"loc_data\": \"{3153,9548,0,1,1}-{3154,9547,0,1,4}-{3176,9546,0,1,4}-{3221,9558,0,1,4}-{3226,9548,0,1,7}-{3224,9551,0,1,1}-{3219,9558,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1831\",\r\n      \"loc_data\": \"{3208,9555,0,1,1}-{3165,9542,0,1,3}-{3211,9570,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1832\",\r\n      \"loc_data\": \"{3150,9573,0,1,1}-{3188,9550,0,1,0}-{3148,9578,0,1,4}-{3152,9556,0,1,3}-{3150,9553,0,1,2}-{3167,9547,0,1,1}-{3168,9546,0,1,3}-{3184,9551,0,1,3}-{3220,9573,0,1,4}-{3224,9574,0,1,1}-{3208,9588,0,1,6}-{3210,9585,0,1,4}-{3191,9583,0,1,4}-{3187,9583,0,1,3}-{3272,5549,0,1,0}-{3275,5546,0,1,0}-{3281,5545,0,1,2}-{3286,5544,0,1,0}-{3285,5539,0,1,3}-{3268,5553,0,1,1}-{3274,5558,0,1,6}-{3281,5557,0,1,4}-{3282,5554,0,1,4}-{3269,5551,0,1,3}-{3287,5549,0,1,3}-{3279,5546,0,1,6}-{3283,5545,0,1,0}-{3269,5548,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1833\",\r\n      \"loc_data\": \"{3151,9575,0,1,3}-{3150,9577,0,1,4}-{3148,9554,0,1,6}-{3165,9547,0,1,1}-{3165,9546,0,1,2}-{3184,9551,0,1,3}-{3222,9575,0,1,4}-{3226,9576,0,1,3}-{3210,9587,0,1,2}-{3189,9581,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1834\",\r\n      \"loc_data\": \"{3169,3174,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1841\",\r\n      \"loc_data\": \"{3020,3452,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1860\",\r\n      \"loc_data\": \"{2957,3203,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1861\",\r\n      \"loc_data\": \"{3208,3256,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1862\",\r\n      \"loc_data\": \"{3304,3211,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1863\",\r\n      \"loc_data\": \"{3358,2956,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1864\",\r\n      \"loc_data\": \"{3363,2956,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1865\",\r\n      \"loc_data\": \"{3352,2974,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1866\",\r\n      \"loc_data\": \"{3360,2983,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1867\",\r\n      \"loc_data\": \"{3347,2966,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1870\",\r\n      \"loc_data\": \"{3373,2972,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1871\",\r\n      \"loc_data\": \"{3344,2986,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1872\",\r\n      \"loc_data\": \"{3354,2953,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1873\",\r\n      \"loc_data\": \"{3343,2962,0,1,0}-{3343,2964,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1875\",\r\n      \"loc_data\": \"{3354,2952,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1884\",\r\n      \"loc_data\": \"{2811,3174,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1902\",\r\n      \"loc_data\": \"{3333,2946,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1905\",\r\n      \"loc_data\": \"{3335,2948,0,1,2}-{3331,2948,0,1,6}-{3333,2950,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1917\",\r\n      \"loc_data\": \"{3177,2987,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1918\",\r\n      \"loc_data\": \"{3180,3043,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1920\",\r\n      \"loc_data\": \"{3497,3478,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1921\",\r\n      \"loc_data\": \"{3159,2980,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1923\",\r\n      \"loc_data\": \"{3183,2974,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1926\",\r\n      \"loc_data\": \"{3179,2967,0,1,3}-{3172,2966,0,1,1}-{3171,2980,0,1,3}-{3166,2972,0,1,0}-{3181,2979,0,1,3}-{3187,2976,0,1,7}-{3174,2984,0,1,3}-{3183,2982,0,1,4}-{3187,2985,0,1,1}-{3182,2988,0,1,5}-{3188,2990,0,1,2}-{3172,2992,0,1,4}-{3171,2987,0,1,4}-{3161,2982,0,1,2}-{3161,2986,0,1,3}-{3159,2987,0,1,3}-{3163,2976,0,1,4}-{3161,2977,0,1,4}-{3161,2979,0,1,6}-{3162,2982,0,1,6}-{3164,2985,0,1,2}-{3158,2970,0,1,3}-{3155,2979,0,1,4}-{3167,2972,0,1,6}-{3172,2973,0,1,5}-{3175,2973,0,1,4}-{3185,2967,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1927\",\r\n      \"loc_data\": \"{3160,2979,0,0,5}-{3162,2989,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1928\",\r\n      \"loc_data\": \"{3161,2977,0,0,4}-{3161,2987,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1929\",\r\n      \"loc_data\": \"{3158,2987,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1930\",\r\n      \"loc_data\": \"{3161,2985,0,0,6}-{3161,2983,0,0,6}-{3161,2982,0,0,6}-{3161,2981,0,0,6}-{3161,2984,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1951\",\r\n      \"loc_data\": \"{2886,3723,0,1,3}-{2887,3720,0,1,4}-{2890,3721,0,1,7}-{2890,3724,0,1,1}-{2909,3736,0,1,5}-{2910,3736,0,1,2}-{2891,3724,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1952\",\r\n      \"loc_data\": \"{2892,3726,0,1,0}-{2894,3726,0,1,6}-{2895,3728,0,1,0}-{2895,3730,0,1,5}-{2922,3755,0,1,3}-{2893,3725,0,1,2}-{2894,3727,0,1,6}-{2895,3725,0,1,3}-{2898,3735,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1953\",\r\n      \"loc_data\": \"{2897,3733,0,1,5}-{2897,3737,0,1,5}-{2913,3736,0,1,3}-{2897,3737,0,1,6}-{2915,3740,0,1,1}-{2894,3742,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1954\",\r\n      \"loc_data\": \"{2895,3751,0,1,1}-{2895,3755,0,1,6}-{2898,3751,0,1,3}-{2898,3755,0,1,6}-{2930,3765,0,1,5}-{2893,3748,0,1,5}-{2896,3749,0,1,1}-{2929,3762,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1955\",\r\n      \"loc_data\": \"{2895,3740,0,1,1}-{2895,3744,0,1,3}-{2898,3740,0,1,6}-{2898,3744,0,1,1}-{2908,3739,0,1,0}-{2928,3763,0,1,3}-{2899,3737,0,1,2}-{2897,3739,0,1,6}-{2912,3742,0,1,2}-{2898,3750,0,1,3}-{2895,3751,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1956\",\r\n      \"loc_data\": \"{2886,3758,0,1,6}-{2886,3762,0,1,3}-{2890,3756,0,1,4}-{2890,3762,0,1,1}-{2928,3753,0,1,2}-{2926,3753,0,1,6}-{2895,3754,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1958\",\r\n      \"loc_data\": \"{3240,9326,0,1,3}-{3209,9310,0,1,4}-{3245,9333,0,1,4}-{3213,9307,0,1,4}-{3221,9318,0,1,3}-{3229,9333,0,1,3}-{3216,9329,0,1,4}-{3208,9294,0,1,3}-{3201,9286,0,1,1}-{3212,9326,0,1,4}-{3217,9284,0,1,7}-{3226,9284,0,1,4}-{3232,9299,0,1,6}-{3242,9295,0,1,1}-{3220,9302,0,1,0}-{3238,9305,0,1,6}-{3220,9296,0,1,1}-{3246,9291,0,1,3}-{3240,9289,0,1,4}-{3237,9305,0,1,3}-{3257,9292,0,0,5}-{3246,9321,0,1,1}-{3261,9310,0,1,3}-{3258,9309,0,1,4}-{3251,9316,0,1,3}-{3247,9310,0,1,3}-{3147,5467,0,1,1}-{3144,5466,0,1,2}-{3147,5479,0,1,2}-{3144,5475,0,1,6}-{3161,5482,0,1,5}-{3147,5475,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1961\",\r\n      \"loc_data\": \"{3250,9326,0,1,4}-{3258,9327,0,1,6}-{3256,9333,0,1,1}-{3220,9309,0,1,4}-{3252,9333,0,1,3}-{3208,9318,0,1,3}-{3241,9331,0,1,6}-{3204,9328,0,1,3}-{3209,9328,0,1,3}-{3228,9323,0,1,4}-{3210,9282,0,1,7}-{3225,9329,0,1,6}-{3207,9299,0,1,4}-{3215,9295,0,1,3}-{3213,9322,0,1,3}-{3214,9315,0,1,0}-{3221,9291,0,1,0}-{3213,9303,0,1,4}-{3227,9304,0,1,6}-{3247,9301,0,1,1}-{3228,9284,0,1,3}-{3254,9286,0,1,4}-{3262,9291,0,1,6}-{3224,9302,0,1,3}-{3250,9298,0,1,3}-{3252,9293,0,1,6}-{3262,9299,0,1,1}-{3256,9297,0,1,7}-{3262,9285,0,1,1}-{3254,9322,0,1,0}-{3261,9318,0,1,4}-{3242,9316,0,1,6}-{3250,9306,0,1,3}-{3250,9327,0,1,3}-{3156,5477,0,1,5}-{3162,5479,0,1,4}-{3159,5477,0,1,6}-{3150,5474,0,1,3}-{3147,5480,0,1,1}-{3159,5484,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1962\",\r\n      \"loc_data\": \"{3168,5458,0,1,2}-{3242,9331,0,1,3}-{3238,9333,0,1,6}-{3261,9330,0,1,1}-{3232,9333,0,1,0}-{3222,9324,0,1,4}-{3205,9303,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1963\",\r\n      \"loc_data\": \"{3166,5465,0,1,7}-{3168,5462,0,1,0}-{3167,5467,0,1,1}-{3167,5467,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1972\",\r\n      \"loc_data\": \"{2536, 3426, 0, 1, 0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1976\",\r\n      \"loc_data\": \"{3315,5508,0,1,5}-{3308,5510,0,1,3}-{3304,5507,0,1,4}-{3299,5509,0,1,3}-{3317,5514,0,1,3}-{3319,5518,0,1,4}-{3320,5507,0,1,4}-{3324,5513,0,1,1}-{3283,5510,0,1,5}-{3320,5550,0,1,0}-{3313,5523,0,1,4}-{3310,5541,0,1,4}-{3308,5535,0,1,5}-{3301,5531,0,1,4}-{3315,5530,0,1,1}-{3322,5536,0,1,4}-{3320,5539,0,1,7}-{3311,5519,0,1,3}-{3289,5525,0,1,2}-{3300,5519,0,1,6}-{3289,5515,0,1,7}-{3287,5523,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1990\",\r\n      \"loc_data\": \"{3300,2797,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1993\",\r\n      \"loc_data\": \"{3360,2935,0,1,4}-{3359,2924,0,1,6}-{3352,2936,0,1,0}-{3349,2931,0,1,6}-{3341,2924,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"1994\",\r\n      \"loc_data\": \"{3344,2933,0,1,3}-{3350,2936,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2014\",\r\n      \"loc_data\": \"{3293,2788,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2020\",\r\n      \"loc_data\": \"{3503,3477,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2021\",\r\n      \"loc_data\": \"{3222,9525,2,1,3}-{3216,9522,2,1,3}-{3219,9518,2,1,3}-{3224,9521,2,1,3}-{3218,9523,2,1,3}-{3215,9521,2,1,3}-{3213,9522,2,1,3}-{3227,9517,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2031\",\r\n      \"loc_data\": \"{3290,5448,0,1,6}-{3291,5452,0,1,1}-{3293,5456,0,1,6}-{3551,9680,0,0,2}-{3553,9679,0,0,1}-{3551,9675,0,0,6}-{3554,9676,0,0,7}-{3548,9676,0,0,5}-{3552,9691,0,0,2}-{3569,9681,0,0,7}-{3577,9711,0,0,5}-{3567,9675,0,0,5}-{3567,9675,0,0,5}-{3570,9678,0,0,2}-{3568,9686,0,0,1}-{3545,9721,0,0,7}-{3560,9712,0,0,6}-{3552,9685,0,0,1}-{3525,9698,0,0,6}-{3538,9668,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2032\",\r\n      \"loc_data\": \"{3549,9678,0,0,0}-{3569,9676,0,0,5}-{3566,9678,0,0,1}-{3560,9678,0,0,2}-{3526,9678,0,0,2}-{3532,9693,0,0,5}-{3534,9690,0,0,7}-{3536,9695,0,0,2}-{3542,9694,0,0,7}-{3548,9695,0,0,7}-{3556,9695,0,0,5}-{3554,9709,0,0,2}-{3533,9708,0,0,5}-{3534,9703,0,0,5}-{3538,9721,0,0,7}-{3567,9720,0,0,6}-{3561,9711,0,0,7}-{3552,9703,0,0,1}-{3551,9698,0,0,1}-{3532,9678,0,0,5}-{3531,9675,0,0,5}-{3537,9677,0,0,2}-{3187,5513,0,1,3}-{3186,5510,0,1,6}-{3186,5516,0,1,6}-{3194,5511,0,1,1}-{3185,5514,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2033\",\r\n      \"loc_data\": \"{3300,5494,0,1,2}-{3285,5492,0,1,6}-{3285,5495,0,1,0}-{3288,5497,0,1,3}-{3268,5487,0,0,0}-{3533,9691,0,0,4}-{3537,9694,0,0,2}-{3533,9696,0,0,2}-{3533,9693,0,0,5}-{3188,5511,0,1,7}-{3190,5511,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2034\",\r\n      \"loc_data\": \"{3288,5484,0,1,4}-{3288,5467,0,1,0}-{3293,5468,0,1,2}-{3296,5475,0,1,7}-{3296,5473,0,1,2}-{3297,5480,0,1,4}-{3565,9695,0,0,1}-{3566,9692,0,0,5}-{3572,9695,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2035\",\r\n      \"loc_data\": \"{3569,9696,0,0,2}-{3569,9693,0,0,6}-{3566,9694,0,0,6}-{3567,9698,0,0,2}-{3572,9692,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2036\",\r\n      \"loc_data\": \"{3569,9674,0,0,0}-{3561,9677,0,0,6}-{3535,9686,0,0,6}-{3535,9698,0,0,1}-{3576,9677,0,0,3}-{3577,9679,0,0,1}-{3568,9691,0,0,2}-{3560,9694,0,0,6}-{3570,9682,0,0,1}-{3569,9687,0,0,2}-{3550,9711,0,0,5}-{3551,9708,0,0,6}-{3548,9713,0,0,6}-{3537,9711,0,0,4}-{3535,9702,0,0,7}-{3553,9722,0,0,4}-{3567,9712,0,0,5}-{3569,9704,0,0,6}-{3579,9693,0,0,7}-{3534,9675,0,0,2}-{3526,9711,0,0,1}-{3566,9668,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2037\",\r\n      \"loc_data\": \"{3543,9677,0,0,3}-{3572,9680,0,0,7}-{3559,9677,0,0,4}-{3535,9685,0,0,1}-{3537,9693,0,0,1}-{3570,9697,0,0,2}-{3552,9713,0,0,6}-{3553,9711,0,0,3}-{3567,9708,0,0,6}-{3535,9679,0,0,1}-{3525,9683,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2038\",\r\n      \"loc_data\": \"{2392,2984,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2039\",\r\n      \"loc_data\": \"{2392,2984,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2040\",\r\n      \"loc_data\": \"{2444,3047,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2041\",\r\n      \"loc_data\": \"{2447,3050,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2042\",\r\n      \"loc_data\": \"{2455,3048,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2043\",\r\n      \"loc_data\": \"{2451,3030,0,0,0}-{2446,3040,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2050\",\r\n      \"loc_data\": \"{2460,3046,0,0,0}-{2465,3052,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2051\",\r\n      \"loc_data\": \"{2463,3053,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2052\",\r\n      \"loc_data\": \"{2468,3045,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2053\",\r\n      \"loc_data\": \"{2467,3051,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2054\",\r\n      \"loc_data\": \"{2466,3046,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2055\",\r\n      \"loc_data\": \"{2471,3056,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2056\",\r\n      \"loc_data\": \"{2470,3040,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2059\",\r\n      \"loc_data\": \"{2588,3088,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2082\",\r\n      \"loc_data\": \"{3210,3220,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2180\",\r\n      \"loc_data\": \"{2997,9837,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2234\",\r\n      \"loc_data\": \"{3081,3251,0,1,6}-{2636,3365,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2235\",\r\n      \"loc_data\": \"{3241,3345,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2236\",\r\n      \"loc_data\": \"{3078,3250,0,1,1}-{3081,3250,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2237\",\r\n      \"loc_data\": \"{3249,3266,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2240\",\r\n      \"loc_data\": \"{3077,3259,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2241\",\r\n      \"loc_data\": \"{3078,3260,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2242\",\r\n      \"loc_data\": \"{3076,3260,0,1,1}-{3078,3260,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2243\",\r\n      \"loc_data\": \"{3078,3259,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2244\",\r\n      \"loc_data\": \"{3233,3228,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2245\",\r\n      \"loc_data\": \"{2505,3240,0,1,4}-{2512,3250,0,1,1}-{2506,3242,0,1,3}-{2510,3252,0,1,4}-{2516,3248,0,1,1}-{2518,3245,0,1,7}-{2518,3245,0,1,1}-{2517,3242,0,1,6}-{2523,3241,0,1,4}-{2525,3241,0,1,1}-{2515,3256,0,1,6}-{2519,3257,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2246\",\r\n      \"loc_data\": \"{2521,3239,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2247\",\r\n      \"loc_data\": \"{2543,3225,0,1,7}-{2553,3220,0,1,3}-{2545,3220,0,1,4}-{2525,3220,0,1,4}-{2518,3218,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2248\",\r\n      \"loc_data\": \"{2540,3218,0,1,1}-{2515,3216,0,1,1}-{2512,3215,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2249\",\r\n      \"loc_data\": \"{2530,3224,0,1,4}-{2524,3221,0,1,2}-{2543,3217,0,1,4}-{2530,3212,0,1,4}-{2557,3234,0,1,4}-{2540,3226,0,1,5}-{2532,3213,0,1,4}-{2527,3201,0,1,6}-{2544,3216,0,1,6}-{2519,3222,0,1,6}-{2526,3227,0,1,4}-{2550,3234,0,1,3}-{2553,3220,0,1,3}-{2521,3202,0,1,6}-{2525,3220,0,1,4}-{2544,3230,0,1,3}-{2547,3212,0,1,4}-{2545,3212,0,1,0}-{2540,3208,0,1,4}-{2533,3202,0,1,6}-{2536,3236,0,1,6}-{2525,3204,0,1,0}-{2539,3238,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2250\",\r\n      \"loc_data\": \"{2525,3209,0,1,4}-{2558,3228,0,1,4}-{2543,3212,0,1,3}-{2538,3223,0,1,0}-{2527,3201,0,1,7}-{2517,3222,0,1,3}-{2547,3231,0,1,6}-{2550,3220,0,1,4}-{2538,3224,0,1,3}-{2545,3213,0,1,0}-{2542,3208,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2251\",\r\n      \"loc_data\": \"{2520,3217,0,1,3}-{2524,3209,0,1,1}-{2529,3200,0,1,5}-{2530,3209,0,1,1}-{2519,3223,0,1,4}-{2518,3224,0,1,2}-{2527,3201,0,1,7}-{2521,3202,0,1,4}-{2542,3208,0,1,4}-{2539,3233,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2252\",\r\n      \"loc_data\": \"{3199,3302,0,1,3}-{3079,3257,0,1,1}-{3091,3250,0,1,6}-{3137,3254,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2256\",\r\n      \"loc_data\": \"{2571,3305,0,1,7}-{2572,3297,0,1,2}-{2572,3304,0,1,1}-{2577,3308,0,1,6}-{2582,3287,0,1,3}-{2582,3299,0,1,0}-{2583,3292,0,1,4}-{2572,3292,1,1,1}-{2577,3295,1,1,6}-{2576,3286,1,1,1}-{2585,3289,1,1,7}-{2585,3304,1,1,1}-{2582,3306,1,1,5}-{2582,3286,1,1,3}-{2653,3315,0,1,6}-{2658,3306,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2257\",\r\n      \"loc_data\": \"{3105,3554,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2259\",\r\n      \"loc_data\": \"{155,55,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2260\",\r\n      \"loc_data\": \"{3259,3385,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2262\",\r\n      \"loc_data\": \"{3039,4834,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2263\",\r\n      \"loc_data\": \"{3037,4906,0,1,2}-{3021,4812,0,1,5}-{3057,4875,0,0,6}-{3014,4838,0,1,6}-{3016,4892,0,1,6}-{3058,4877,0,0,6}-{3051,4874,0,1,0}-{3061,4836,0,1,4}-{3029,4890,0,1,6}-{3032,4901,0,1,2}-{3024,4916,0,1,3}-{3020,4903,0,1,4}-{3061,4883,0,0,3}-{3058,4889,0,0,3}-{3053,4896,0,0,3}-{3038,4871,0,1,6}-{3053,4900,0,0,7}-{3017,4812,0,1,6}-{3061,4842,0,1,3}-{3048,4808,0,1,3}-{3021,4847,0,1,6}-{3054,4849,0,1,6}-{3055,4915,0,0,5}-{3015,4833,0,1,0}-{3035,4854,0,1,6}-{3016,4829,0,1,4}-{3037,4906,0,0,5}-{3040,4810,0,1,3}-{3047,4886,0,1,4}-{3059,4815,0,1,1}-{3033,4884,0,1,4}-{3027,4851,0,1,6}-{3020,4819,0,1,4}-{3020,4845,0,1,2}-{3061,4829,0,1,0}-{3030,4877,0,1,2}-{3026,4879,0,1,3}-{3024,4879,0,1,3}-{3018,4842,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2264\",\r\n      \"loc_data\": \"{3020,4888,0,1,3}-{3039,4871,0,1,4}-{3049,4921,0,1,7}-{3019,4877,0,1,6}-{3017,4893,0,1,7}-{3017,4821,0,1,4}-{3019,4898,0,1,4}-{3059,4813,0,1,0}-{3020,4912,0,1,2}-{3032,4808,0,1,3}-{3059,4820,0,1,3}-{3062,4828,0,1,6}-{3036,4856,0,1,7}-{3062,4837,0,1,5}-{3025,4850,0,1,1}-{3052,4859,0,1,1}-{3024,4813,0,1,4}-{3054,4915,0,1,7}-{3048,4854,0,1,3}-{3034,4852,0,1,1}-{3052,4898,0,1,1}-{3028,4808,0,1,1}-{3034,4905,0,1,4}-{3018,4843,0,1,2}-{3028,4851,0,1,0}-{3016,4831,0,1,1}-{3052,4896,0,1,3}-{3046,4901,0,1,2}-{3043,4810,0,1,3}-{3062,4884,0,1,6}-{3049,4873,0,1,1}-{3041,4871,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2265\",\r\n      \"loc_data\": \"{3020,4914,0,1,2}-{3038,4809,0,1,6}-{3059,4890,0,1,3}-{3024,4850,0,1,3}-{3031,4901,0,1,7}-{3044,4915,0,1,6}-{3052,4808,0,1,5}-{3021,4847,0,1,3}-{3058,4811,0,1,4}-{3055,4848,0,1,0}-{3062,4822,0,1,6}-{3017,4837,0,1,3}-{3044,4883,0,1,4}-{3017,4817,0,1,7}-{3025,4812,0,1,1}-{3039,4885,0,1,1}-{3048,4917,0,1,5}-{3060,4825,0,1,3}-{3059,4888,0,1,5}-{3047,4874,0,1,2}-{3062,4838,0,1,3}-{3055,4908,0,1,5}-{3016,4876,0,1,1}-{3029,4890,0,1,5}-{3059,4906,0,1,1}-{3021,4875,0,1,3}-{3032,4903,0,1,3}-{3054,4850,0,1,6}-{3026,4914,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2266\",\r\n      \"loc_data\": \"{3053,4978,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2270\",\r\n      \"loc_data\": \"{3048,4975,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2271\",\r\n      \"loc_data\": \"{3045,4971,1,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2274\",\r\n      \"loc_data\": \"{3243,3245,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2275\",\r\n      \"loc_data\": \"{3244,3248,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2276\",\r\n      \"loc_data\": \"{3243,3247,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2277\",\r\n      \"loc_data\": \"{3248,3247,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2278\",\r\n      \"loc_data\": \"{3247,3244,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2279\",\r\n      \"loc_data\": \"{3244,3247,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2280\",\r\n      \"loc_data\": \"{3245,3244,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2281\",\r\n      \"loc_data\": \"{3246,3245,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2290\",\r\n      \"loc_data\": \"{2997,3373,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2291\",\r\n      \"loc_data\": \"{3311,3109,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2292\",\r\n      \"loc_data\": \"{3182,3043,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2293\",\r\n      \"loc_data\": \"{3469,3111,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2294\",\r\n      \"loc_data\": \"{3350,3004,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2296\",\r\n      \"loc_data\": \"{3399,2916,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2298\",\r\n      \"loc_data\": \"{3287,2813,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2301\",\r\n      \"loc_data\": \"{3310,3107,0,1,4}-{3181,3043,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2304\",\r\n      \"loc_data\": \"{3038,3292,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2305\",\r\n      \"loc_data\": \"{2821,3463,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2306\",\r\n      \"loc_data\": \"{2643,3363,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2307\",\r\n      \"loc_data\": \"{3627,3526,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2310\",\r\n      \"loc_data\": \"{3025,3312,0,1,4}-{3043,3308,0,1,6}-{3023,3297,0,1,5}-{2928,3282,0,1,1}-{2927,3269,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2312\",\r\n      \"loc_data\": \"{3014,3292,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2313\",\r\n      \"loc_data\": \"{3020,3297,0,1,6}-{3040,3296,0,1,3}-{3031,3283,0,1,4}-{3020,3288,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2314\",\r\n      \"loc_data\": \"{3018,3296,0,1,1}-{3016,3288,0,1,4}-{3030,3287,0,1,4}-{3017,3282,0,1,3}-{2549,3566,0,1,2}-{2553,3564,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2315\",\r\n      \"loc_data\": \"{3018,3282,0,1,5}-{3037,3289,0,1,1}-{2551,3562,0,1,1}-{2554,3561,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2316\",\r\n      \"loc_data\": \"{3015,3311,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2317\",\r\n      \"loc_data\": \"{3016,3309,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2318\",\r\n      \"loc_data\": \"{3017,3307,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2319\",\r\n      \"loc_data\": \"{3017,3309,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2323\",\r\n      \"loc_data\": \"{3056,3306,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2324\",\r\n      \"loc_data\": \"{2807,3464,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2325\",\r\n      \"loc_data\": \"{2664,3374,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2326\",\r\n      \"loc_data\": \"{3600,3527,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2327\",\r\n      \"loc_data\": \"{2814,3337,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2329\",\r\n      \"loc_data\": \"{1702,4823,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2330\",\r\n      \"loc_data\": \"{2766,3211,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2331\",\r\n      \"loc_data\": \"{2860,3430,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2332\",\r\n      \"loc_data\": \"{2573,3102,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2333\",\r\n      \"loc_data\": \"{3226,3311,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2334\",\r\n      \"loc_data\": \"{2662,3525,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2335\",\r\n      \"loc_data\": \"{3181,3359,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2336\",\r\n      \"loc_data\": \"{2938,3221,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2337\",\r\n      \"loc_data\": \"{2615,3855,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2338\",\r\n      \"loc_data\": \"{2615,3229,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2339\",\r\n      \"loc_data\": \"{2934,3438,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2340\",\r\n      \"loc_data\": \"{3007,3373,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2341\",\r\n      \"loc_data\": \"{3229,3456,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2342\",\r\n      \"loc_data\": \"{3196,3231,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2343\",\r\n      \"loc_data\": \"{2473,3446,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2344\",\r\n      \"loc_data\": \"{2490,3183,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2353\",\r\n      \"loc_data\": \"{2324,3179,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2355\",\r\n      \"loc_data\": \"{2353,3163,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2359\",\r\n      \"loc_data\": \"{2335,3169,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2360\",\r\n      \"loc_data\": \"{2335,3174,0,1,4}-{2322,3172,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2361\",\r\n      \"loc_data\": \"{2345,3172,0,1,2}-{2340,3178,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2362\",\r\n      \"loc_data\": \"{2330,3163,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2372\",\r\n      \"loc_data\": \"{2044,4632,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2374\",\r\n      \"loc_data\": \"{2041,4632,0,1,3}-{2037,4630,0,1,3}-{2041,4644,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2385\",\r\n      \"loc_data\": \"{3112,3159,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2386\",\r\n      \"loc_data\": \"{3051,3496,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2389\",\r\n      \"loc_data\": \"{3219,3677,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2392\",\r\n      \"loc_data\": \"{3043,3204,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2414\",\r\n      \"loc_data\": \"{3263,3400,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2435\",\r\n      \"loc_data\": \"{2621,3682,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2438\",\r\n      \"loc_data\": \"{2544,3761,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2439\",\r\n      \"loc_data\": \"{2659,3657,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2440\",\r\n      \"loc_data\": \"{2545,10141,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2443\",\r\n      \"loc_data\": \"{2543,10143,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2446\",\r\n      \"loc_data\": \"{2545,10145,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2449\",\r\n      \"loc_data\": \"{2546,10144,0,0,1}-{2546,10142,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2452\",\r\n      \"loc_data\": \"{2526,10166,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2453\",\r\n      \"loc_data\": \"{2521,10160,0,0,1}-{2535,10163,0,0,6}-{2520,10165,0,0,3}-{2533,10162,0,0,3}-{2545,10158,0,0,5}-{2547,10151,0,0,3}-{2543,10166,0,0,3}-{2538,10160,0,0,6}-{2506,10163,0,0,3}-{2516,10163,0,0,3}-{2498,10164,0,0,5}-{2544,10160,0,0,0}-{2525,10162,0,0,3}-{2530,10161,0,0,0}-{2537,10167,0,0,7}-{2519,10163,0,0,3}-{2511,10163,0,0,3}-{2530,10161,0,0,7}-{2524,10166,0,0,3}-{2508,10159,0,0,0}-{1846,4405,3,0,2}-{1839,4400,3,0,3}-{1835,4394,3,0,3}-{1834,4406,3,0,1}-{1843,4406,3,0,2}-{1899,4372,0,0,2}-{1888,4362,0,0,7}-{1896,4362,0,0,2}-{1897,4368,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2455\",\r\n      \"loc_data\": \"{2457,10139,0,1,2}-{2465,10133,0,1,4}-{2449,10148,0,1,1}-{2471,10133,0,1,6}-{2446,10145,0,1,4}-{2443,10148,0,1,1}-{2452,10161,0,1,3}-{2444,10145,0,1,1}-{2462,10163,0,1,3}-{2446,10141,0,1,3}-{2454,10149,0,1,0}-{2476,10155,0,1,4}-{2456,10153,0,1,0}-{2485,10142,0,1,3}-{2457,10152,0,1,4}-{2485,10126,0,1,4}-{2475,10148,0,1,3}-{2471,10160,0,1,1}-{2453,10145,0,1,3}-{2463,10158,0,1,4}-{2457,10163,0,1,2}-{2471,10154,0,1,6}-{2476,10151,0,1,7}-{2479,10154,0,1,1}-{2486,10158,0,1,4}-{2485,10165,0,1,5}-{2485,10153,0,1,4}-{2474,10140,0,1,7}-{2466,10130,0,1,6}-{2464,10138,0,1,6}-{2486,10150,0,1,6}-{2473,10127,0,1,4}-{2483,10126,0,1,3}-{2456,10133,0,1,6}-{2467,10163,0,1,6}-{2477,10143,0,1,3}-{2489,10139,0,1,4}-{2486,10127,0,1,1}-{2480,10141,0,1,7}-{2490,10155,0,1,3}-{2459,10133,0,1,3}-{2455,10163,0,1,0}-{2496,10166,0,1,1}-{2494,10162,0,1,1}-{2502,10167,0,1,1}-{2493,10132,0,1,3}-{2499,10162,0,1,0}-{2502,10159,0,1,1}-{2502,10166,0,1,4}-{2494,10129,0,1,5}-{2496,10130,0,1,3}-{2498,10128,0,1,1}-{2497,10126,0,1,4}-{2499,10128,0,1,5}-{2501,10126,0,1,3}-{2506,10125,0,1,4}-{2506,10127,0,1,4}-{2507,10128,0,1,3}-{2507,10126,0,1,6}-{2511,10126,0,1,0}-{2513,10126,0,1,4}-{2517,10129,0,1,3}-{2513,10127,0,1,3}-{2516,10124,0,1,4}-{2520,10122,0,1,5}-{2522,10126,0,1,3}-{2524,10129,0,1,4}-{2525,10125,0,1,4}-{2529,10122,0,1,4}-{2529,10124,0,1,2}-{2526,10126,0,1,3}-{2529,10130,0,1,6}-{2530,10127,0,1,5}-{2532,10121,0,1,0}-{2532,10123,0,1,3}-{2538,10126,0,1,0}-{2535,10125,0,1,7}-{2536,10127,0,1,1}-{2539,10130,0,1,6}-{2543,10130,0,1,6}-{2548,10131,0,1,1}-{2542,10128,0,1,3}-{1815,4405,2,1,6}-{1818,4403,2,1,3}-{1813,4404,2,1,7}-{1814,4407,2,1,7}-{1821,4393,2,1,1}-{1823,4389,2,1,1}-{1828,4387,2,1,3}-{1821,4392,2,1,0}-{1826,4391,2,1,0}-{1865,4377,2,1,1}-{1865,4397,1,1,6}-{1844,4360,1,1,4}-{1844,4361,1,1,5}-{1851,4360,1,1,3}-{1857,4360,1,1,1}-{1862,4362,1,1,1}-{1862,4362,1,1,7}-{1864,4366,1,1,1}-{1865,4383,2,1,4}-{1864,4390,1,1,1}-{1865,4408,1,1,4}-{1877,4410,1,1,1}-{1883,4411,1,1,4}-{1889,4410,1,1,4}-{1887,4374,0,1,6}-{1890,4372,0,1,4}-{1890,4366,0,1,4}-{1896,4371,0,1,3}-{1890,4364,0,1,7}-{1831,4378,3,1,2}-{1838,4379,3,1,2}-{1824,4376,3,1,1}-{1832,4380,3,1,6}-{1844,4373,2,1,4}-{1849,4381,2,1,4}-{1846,4374,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2456\",\r\n      \"loc_data\": \"{2452,10145,0,0,4}-{2445,10138,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2457\",\r\n      \"loc_data\": \"{2500,10148,0,1,3}-{2505,10150,0,1,2}-{2510,10148,0,1,1}-{2511,10147,0,1,6}-{2517,10151,0,1,3}-{2519,10143,0,1,7}-{2529,10148,0,1,3}-{2528,10144,0,1,0}-{2532,10145,0,1,1}-{2532,10140,0,1,7}-{2520,10144,0,1,2}-{1804,4369,2,1,2}-{1812,4363,2,1,5}-{1817,4368,2,1,6}-{1801,4404,3,1,6}-{1805,4405,3,1,1}-{1803,4404,3,1,7}-{1811,4394,1,1,7}-{1804,4391,1,1,2}-{1798,4391,1,1,4}-{1802,4389,1,1,4}-{1799,4386,2,1,1}-{1799,4381,2,1,6}-{1798,4375,1,1,4}-{1803,4376,1,1,6}-{1797,4380,1,1,6}-{1902,4367,0,1,6}-{1894,4367,0,1,1}-{1893,4361,0,1,3}-{1886,4369,0,1,1}-{1848,4394,1,1,3}-{1850,4389,1,1,1}-{1850,4391,1,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2458\",\r\n      \"loc_data\": \"{2599,4774,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2459\",\r\n      \"loc_data\": \"{2604,4772,0,1,4}-{2606,4771,0,1,6}-{2604,4769,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2460\",\r\n      \"loc_data\": \"{2600,4778,0,1,1}-{2607,4777,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2461\",\r\n      \"loc_data\": \"{2597,4776,0,1,1}-{2606,4771,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2462\",\r\n      \"loc_data\": \"{2596,4773,0,1,2}-{2602,4771,0,1,6}-{2596,4780,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2482\",\r\n      \"loc_data\": \"{3057,3902,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2483\",\r\n      \"loc_data\": \"{2914,3116,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2484\",\r\n      \"loc_data\": \"{2782,3058,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2486\",\r\n      \"loc_data\": \"{2789,3055,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2487\",\r\n      \"loc_data\": \"{2848,3042,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2488\",\r\n      \"loc_data\": \"{2799,3058,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2489\",\r\n      \"loc_data\": \"{3781,3031,0,1,5}-{3775,3033,0,1,4}-{3780,3022,0,1,1}-{3788,3011,0,1,2}-{3793,3019,0,1,5}-{3766,3010,0,1,4}-{3764,3020,0,1,1}-{3779,3045,0,1,1}-{3784,3040,0,1,3}-{3802,3037,0,1,2}-{3808,3026,0,1,3}-{3799,3024,0,1,4}-{3749,3000,0,1,6}-{3738,3010,0,1,3}-{3723,2998,0,1,2}-{3731,2991,0,1,1}-{3703,3040,0,1,3}-{3706,3051,0,1,1}-{3664,3013,0,1,7}-{3720,3040,0,1,6}-{3719,3045,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2490\",\r\n      \"loc_data\": \"{3782,3016,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2491\",\r\n      \"loc_data\": \"{2679,3080,0,1,6}-{2684,3084,0,1,4}-{2682,3093,0,1,4}-{2678,3095,0,1,3}-{2679,3102,0,1,1}-{2681,3110,0,1,4}-{2683,3115,0,1,6}-{2675,3108,0,1,3}-{2671,3109,0,1,3}-{2671,3113,0,1,4}-{2676,3090,0,1,4}-{2670,3088,0,1,6}-{2671,3086,0,1,6}-{2664,3088,0,1,7}-{2660,3086,0,1,6}-{2662,3088,0,1,6}-{2670,3082,0,1,7}-{2674,3081,0,1,3}-{2663,3086,0,1,6}-{2679,3082,0,1,1}-{2682,3093,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2504\",\r\n      \"loc_data\": \"{2796,3077,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2507\",\r\n      \"loc_data\": \"{2792,3077,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2510\",\r\n      \"loc_data\": \"{2784,3076,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2513\",\r\n      \"loc_data\": \"{2802,3088,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2516\",\r\n      \"loc_data\": \"{2792,3102,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2519\",\r\n      \"loc_data\": \"{2794,3064,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2520\",\r\n      \"loc_data\": \"{2800,3064,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2522\",\r\n      \"loc_data\": \"{2758,3099,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2525\",\r\n      \"loc_data\": \"{2800,3048,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2528\",\r\n      \"loc_data\": \"{2815,3084,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2529\",\r\n      \"loc_data\": \"{2816,3079,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2531\",\r\n      \"loc_data\": \"{2785,3094,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2547\",\r\n      \"loc_data\": \"{3109,9942,0,1,4}-{3111,9938,0,1,4}-{3116,9926,0,1,4}-{2615,9525,0,1,4}-{2615,9521,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2548\",\r\n      \"loc_data\": \"{3349,2970,0,0,4}-{3358,2987,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2549\",\r\n      \"loc_data\": \"{3364,3001,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2568\",\r\n      \"loc_data\": \"{2729,3495,0,0,6}-{2724,3495,0,0,6}-{2728,3495,0,0,6}-{2721,3495,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2569\",\r\n      \"loc_data\": \"{2727,3495,0,0,6}-{2722,3495,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2572\",\r\n      \"loc_data\": \"{3079,3250,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2574\",\r\n      \"loc_data\": \"{3087,3247,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2580\",\r\n      \"loc_data\": \"{2889,3436,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2591\",\r\n      \"loc_data\": \"{4786,5106,0,1,6}-{2474,5145,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2592\",\r\n      \"loc_data\": \"{4680,5117,0,1,6}-{2461,5142,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2594\",\r\n      \"loc_data\": \"{4703,5123,0,1,5}-{4680,5126,0,1,7}-{4730,5077,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2595\",\r\n      \"loc_data\": \"{4699,5100,0,1,6}-{4647,5132,0,1,7}-{4633,5069,0,1,4}-{4757,5100,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2596\",\r\n      \"loc_data\": \"{4628,5117,0,1,4}-{4787,5118,0,1,7}-{2483,5155,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2597\",\r\n      \"loc_data\": \"{4621,5094,0,1,5}-{2446,5144,0,1,1}-{2470,5141,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2598\",\r\n      \"loc_data\": \"{2485,5159,0,1,4}-{2489,5155,0,1,1}-{2471,5144,0,1,3}-{2476,5153,0,1,0}-{2477,5150,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2600\",\r\n      \"loc_data\": \"{4656,5125,0,1,5}-{4711,5072,0,1,4}-{4751,5087,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2601\",\r\n      \"loc_data\": \"{4676,5123,0,1,5}-{4693,5127,0,1,7}-{4724,5107,0,1,5}-{4788,5110,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2602\",\r\n      \"loc_data\": \"{4668,5133,0,1,7}-{4627,5122,0,1,5}-{4714,5113,0,1,6}-{4752,5074,0,1,7}-{4789,5122,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2603\",\r\n      \"loc_data\": \"{4711,5086,0,1,2}-{4760,5091,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2604\",\r\n      \"loc_data\": \"{2439,5170,0,1,3}-{2451,5170,0,1,3}-{2453,5161,0,1,6}-{2460,5160,0,1,7}-{2457,5155,0,1,3}-{2480,5168,0,1,6}-{2469,5166,0,1,1}-{2490,5173,0,1,3}-{2488,5171,0,1,4}-{2483,5156,0,1,3}-{2470,5147,0,1,4}-{2468,5139,0,1,7}-{2458,5141,0,1,3}-{2454,5141,0,1,1}-{2452,5124,0,1,3}-{2454,5122,0,1,2}-{2453,5143,0,1,3}-{2443,5144,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2605\",\r\n      \"loc_data\": \"{4633,5125,0,1,7}-{4631,5088,0,1,7}-{4760,5074,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2606\",\r\n      \"loc_data\": \"{4670,5081,0,1,6}-{4642,5115,0,1,7}-{4756,5086,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2607\",\r\n      \"loc_data\": \"{4638,5095,0,1,2}-{4647,5141,0,1,4}-{4699,5141,0,1,3}-{4774,5098,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2608\",\r\n      \"loc_data\": \"{4656,5091,0,1,5}-{4637,5093,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2609\",\r\n      \"loc_data\": \"{4691,5090,0,1,7}-{4617,5073,0,1,6}-{4711,5125,0,1,4}-{4727,5082,0,1,6}-{4748,5070,0,1,4}-{2440,5128,0,1,3}-{2436,5133,0,1,3}-{2450,5168,0,1,2}-{2443,5170,0,1,4}-{2445,5177,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2610\",\r\n      \"loc_data\": \"{2446,5169,0,1,4}-{2458,5159,0,1,3}-{2466,5166,0,1,7}-{2471,5166,0,1,3}-{2478,5164,0,1,4}-{2490,5174,0,1,4}-{2485,5159,0,1,5}-{2442,5173,0,1,0}-{2440,5171,0,1,7}-{2440,5170,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2611\",\r\n      \"loc_data\": \"{4646,5107,0,1,6}-{4683,5098,0,1,4}-{4690,5113,0,1,5}-{4720,5118,0,1,7}-{4716,5097,0,1,5}-{4762,5088,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2614\",\r\n      \"loc_data\": \"{4666,5082,0,1,0}-{4669,5103,0,1,2}-{4664,5121,0,1,4}-{4639,5074,0,1,3}-{4704,5077,0,1,5}-{4688,5016,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2615\",\r\n      \"loc_data\": \"{4695,5128,0,1,7}-{4625,5084,0,1,7}-{4628,5134,0,1,3}-{4725,5067,0,1,5}-{4748,5076,0,1,6}-{4790,5127,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2616\",\r\n      \"loc_data\": \"{4673,5114,0,1,1}-{4631,5106,0,1,0}-{2441,5130,0,1,1}-{2438,5135,0,1,6}-{2443,5138,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2617\",\r\n      \"loc_data\": \"{4611,5132,0,1,5}-{2440,5168,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2618\",\r\n      \"loc_data\": \"{4603,5065,0,1,1}-{2399,5178,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2619\",\r\n      \"loc_data\": \"{2446,5179,0,0,6}-{4644,5149,0,1,7}-{2418,5203,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2620\",\r\n      \"loc_data\": \"{4701,5153,0,1,0}-{2478,5146,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2622\",\r\n      \"loc_data\": \"{4689,5173,0,0,0}-{2464,5149,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2623\",\r\n      \"loc_data\": \"{4655,5172,0,1,0}-{2462,5125,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2624\",\r\n      \"loc_data\": \"{4718,5148,0,1,6}-{4708,5173,0,1,6}-{4716,5178,0,1,7}-{4726,5173,0,1,0}-{4730,5163,0,1,3}-{4726,5153,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2625\",\r\n      \"loc_data\": \"{4668,5177,0,1,4}-{4676,5177,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2634\",\r\n      \"loc_data\": \"{3095,3252,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2652\",\r\n      \"loc_data\": \"{2868,3579,0,0,0}-{2851,3582,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2660\",\r\n      \"loc_data\": \"{3208,3496,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2674\",\r\n      \"loc_data\": \"{3017,3231,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2676\",\r\n      \"loc_data\": \"{2914,3322,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2677\",\r\n      \"loc_data\": \"{2945,3307,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2678\",\r\n      \"loc_data\": \"{2988,3210,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2679\",\r\n      \"loc_data\": \"{3000,3222,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2680\",\r\n      \"loc_data\": \"{2985,3193,0,1,1}-{2582,9836,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2681\",\r\n      \"loc_data\": \"{2991,3199,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2682\",\r\n      \"loc_data\": \"{1866,4237,0,1,0}-{1866,4240,0,1,0}-{1867,4243,0,1,0}-{2950,3204,0,1,5}-{2971,3212,0,1,4}-{2960,3201,0,1,1}-{2959,3202,0,1,4}-{2904,3208,0,1,0}-{2956,3203,0,1,1}-{2969,3204,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2683\",\r\n      \"loc_data\": \"{2967,3212,1,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2684\",\r\n      \"loc_data\": \"{2965,3213,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2685\",\r\n      \"loc_data\": \"{3124,9873,0,1,3}-{2911,3285,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2686\",\r\n      \"loc_data\": \"{2907,3293,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2687\",\r\n      \"loc_data\": \"{2907,3293,0,1,6}-{2908,3290,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2688\",\r\n      \"loc_data\": \"{3127,9874,0,1,4}-{2906,3288,0,1,1}-{2910,3293,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2689\",\r\n      \"loc_data\": \"{2918,3319,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2690\",\r\n      \"loc_data\": \"{3048,3258,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2691\",\r\n      \"loc_data\": \"{3048,3256,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2692\",\r\n      \"loc_data\": \"{3049,3256,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2693\",\r\n      \"loc_data\": \"{3214,3313,0,1,0}-{3214,3320,0,1,0}-{3215,3303,0,1,0}-{3219,3285,0,1,0}-{3219,3288,0,1,0}-{3234,3267,0,1,0}-{3234,3268,0,1,0}-{3238,3238,0,1,0}-{3238,3246,0,1,0}-{3239,3235,0,1,0}-{2976,3359,0,1,0}-{2977,3357,0,1,0}-{2988,3383,0,1,1}-{2992,3385,0,1,3}-{3015,3285,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2695\",\r\n      \"loc_data\": \"{3013,3192,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2696\",\r\n      \"loc_data\": \"{3013,3196,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2697\",\r\n      \"loc_data\": \"{3018,3189,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2698\",\r\n      \"loc_data\": \"{3018,3181,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2699\",\r\n      \"loc_data\": \"{3037,2982,0,0,6}-{3036,2979,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2700\",\r\n      \"loc_data\": \"{3037,2982,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2704\",\r\n      \"loc_data\": \"{3019,3185,0,0,0}-{3034,2979,0,0,1}-{3033,2980,1,0,4}-{3032,2979,0,0,1}-{3034,2985,0,0,1}-{3035,2982,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2705\",\r\n      \"loc_data\": \"{3034,2985,1,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2706\",\r\n      \"loc_data\": \"{3725,3015,0,1,4}-{3745,3026,0,1,6}-{3741,3033,0,1,6}-{3734,3045,0,1,1}-{3019,3145,0,1,3}-{3015,3142,0,1,4}-{3022,3139,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2709\",\r\n      \"loc_data\": \"{3002,3266,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2710\",\r\n      \"loc_data\": \"{3001,3268,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2711\",\r\n      \"loc_data\": \"{3002,3268,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2712\",\r\n      \"loc_data\": \"{3001,3268,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2713\",\r\n      \"loc_data\": \"{3002,3267,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2725\",\r\n      \"loc_data\": \"{2500,3488,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2726\",\r\n      \"loc_data\": \"{2994,3138,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2727\",\r\n      \"loc_data\": \"{2969,3146,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2728\",\r\n      \"loc_data\": \"{3043,3235,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2729\",\r\n      \"loc_data\": \"{3047,3234,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2730\",\r\n      \"loc_data\": \"{2835,3335,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2731\",\r\n      \"loc_data\": \"{2833,3335,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2732\",\r\n      \"loc_data\": \"{2933,3281,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2733\",\r\n      \"loc_data\": \"{2932,3286,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2759\",\r\n      \"loc_data\": \"{3254,3418,0,0,0}-{3255,3418,0,0,0}-{3256,3418,0,0,0}-{3096,3493,0,0,0}-{3097,3494,0,0,0}-{3104,3368,0,0,0}-{3180,3438,0,0,0}-{3180,3442,0,0,0}-{3191,3441,0,0,0}-{3191,3437,0,0,0}-{3191,3445,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2782\",\r\n      \"loc_data\": \"{1925,4636,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2783\",\r\n      \"loc_data\": \"{1995,4660,0,1,7}-{1989,4660,0,1,0}-{1989,4664,0,1,7}-{1995,4660,0,1,2}-{1997,4664,0,1,3}-{1989,4658,0,1,0}-{2001,4646,0,1,4}-{2000,4645,0,1,3}-{1997,4644,0,1,1}-{2006,4639,0,1,6}-{1999,4636,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2792\",\r\n      \"loc_data\": \"{3228,3412,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2794\",\r\n      \"loc_data\": \"{2606,3100,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2796\",\r\n      \"loc_data\": \"{3089,3124,0,0,3}-{3096,3108,0,0,6}-{3075,3091,0,0,6}-{3121,3103,0,0,1}-{3105,3095,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2800\",\r\n      \"loc_data\": \"{2981,3190,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2803\",\r\n      \"loc_data\": \"{3391,3066,0,1,6}-{3397,3054,0,1,6}-{3398,3060,0,1,0}-{3412,3059,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2804\",\r\n      \"loc_data\": \"{3388,3067,0,1,0}-{3396,3064,0,1,6}-{3402,3063,0,1,1}-{3423,3019,0,1,3}-{3420,3015,0,1,6}-{3430,3014,0,1,2}-{3426,3020,0,0,0}-{3416,3013,0,1,4}-{3410,3016,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2805\",\r\n      \"loc_data\": \"{3391,3071,0,1,2}-{3397,3069,0,1,2}-{3398,3068,0,1,1}-{3385,3064,0,1,6}-{3406,3064,0,1,6}-{3413,3053,0,1,6}-{3424,3061,0,1,2}-{3423,3020,0,1,0}-{3429,3019,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2806\",\r\n      \"loc_data\": \"{3426,3052,0,1,4}-{3423,3044,0,1,3}-{3415,3018,0,1,5}-{3425,3009,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2807\",\r\n      \"loc_data\": \"{3414,3045,0,1,1}-{3403,3050,0,1,4}-{3407,3058,0,1,3}-{3420,3022,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2808\",\r\n      \"loc_data\": \"{3384,3072,0,1,2}-{3394,3076,0,1,1}-{3403,3069,0,1,1}-{3402,3061,0,1,1}-{3419,3006,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2809\",\r\n      \"loc_data\": \"{3274,3168,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2810\",\r\n      \"loc_data\": \"{3311,3208,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2811\",\r\n      \"loc_data\": \"{3289,3209,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2812\",\r\n      \"loc_data\": \"{3296,3227,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2813\",\r\n      \"loc_data\": \"{3285,3201,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2816\",\r\n      \"loc_data\": \"{3301,3190,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2817\",\r\n      \"loc_data\": \"{3306,3197,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2818\",\r\n      \"loc_data\": \"{3303,3204,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2819\",\r\n      \"loc_data\": \"{3295,3193,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2824\",\r\n      \"loc_data\": \"{3275,3193,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2860\",\r\n      \"loc_data\": \"{2345,3165,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2881\",\r\n      \"loc_data\": \"{2907,4440,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2882\",\r\n      \"loc_data\": \"{2910,4457,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2883\",\r\n      \"loc_data\": \"{2923,4443,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2890\",\r\n      \"loc_data\": \"{1889,4411,0,0,4}-{1895,4409,0,0,2}-{1903,4409,0,0,3}-{1906,4407,0,0,5}-{1903,4400,0,0,1}-{1899,4400,0,0,2}-{1893,4398,0,0,2}-{1888,4386,0,0,6}-{1884,4383,0,0,5}-{1879,4376,0,0,5}-{1883,4376,0,0,1}-{1921,4368,0,0,2}-{1927,4362,0,0,7}-{1935,4360,0,0,7}-{1942,4356,0,0,7}-{1948,4355,0,0,7}-{1951,4358,0,0,2}-{1957,4365,0,0,2}-{1958,4368,0,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2894\",\r\n      \"loc_data\": \"{2908,4435,0,0,1}-{2924,4436,0,0,5}-{2924,4460,0,0,6}-{2908,4463,0,0,3}-{2901,4458,0,0,3}-{2928,4441,0,0,3}-{2929,4449,0,0,6}-{2902,4437,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2935\",\r\n      \"loc_data\": \"{3671,3484,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2939\",\r\n      \"loc_data\": \"{2657,3701,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2940\",\r\n      \"loc_data\": \"{2675,3671,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2942\",\r\n      \"loc_data\": \"{3017,3234,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2943\",\r\n      \"loc_data\": \"{3265,3400,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2945\",\r\n      \"loc_data\": \"{2562,3319,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2946\",\r\n      \"loc_data\": \"{3246,9865,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2947\",\r\n      \"loc_data\": \"{3245,9868,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2948\",\r\n      \"loc_data\": \"{3265,3403,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2949\",\r\n      \"loc_data\": \"{2562,3320,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2950\",\r\n      \"loc_data\": \"{3020,3229,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2997\",\r\n      \"loc_data\": \"{3308,3511,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2998\",\r\n      \"loc_data\": \"{2657,9641,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"2999\",\r\n      \"loc_data\": \"{2658,9634,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3001\",\r\n      \"loc_data\": \"{2646,9639,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3002\",\r\n      \"loc_data\": \"{2666,9630,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3003\",\r\n      \"loc_data\": \"{2660,9624,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3020\",\r\n      \"loc_data\": \"{3348,2942,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3021\",\r\n      \"loc_data\": \"{2815,3466,0,0,3}-{2859,3431,0,0,0}-{2933,3434,0,1,4}-{3182,3354,0,0,0}-{3087,3352,0,0,0}-{3065,3255,0,0,0}-{3192,3229,0,0,0}-{3232,3459,0,0,3}-{3451,3475,0,0,6}-{2812,3333,0,1,4}-{3007,3371,0,1,2}-{3053,3304,0,0,1}-{2663,3374,0,0,4}-{3603,3529,0,0,6}-{2474,3446,0,1,4}-{2611,3859,0,0,6}-{2434,3415,0,1,3}-{2764,3210,0,1,1}-{2940,3225,0,0,6}-{2614,3226,0,0,4}-{3315,3205,0,0,6}-{2827,3692,0,1,5}-{2666,3521,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3029\",\r\n      \"loc_data\": \"{3422,2937,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3030\",\r\n      \"loc_data\": \"{3421,2912,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3031\",\r\n      \"loc_data\": \"{3439,2890,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3032\",\r\n      \"loc_data\": \"{3439,2927,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3034\",\r\n      \"loc_data\": \"{3409,2929,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3035\",\r\n      \"loc_data\": \"{3450,2895,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3036\",\r\n      \"loc_data\": \"{3424,2900,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3037\",\r\n      \"loc_data\": \"{3424,2906,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3038\",\r\n      \"loc_data\": \"{3406,2924,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3039\",\r\n      \"loc_data\": \"{3414,2907,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3040\",\r\n      \"loc_data\": \"{3443,2914,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3041\",\r\n      \"loc_data\": \"{3445,2910,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3042\",\r\n      \"loc_data\": \"{3441,2920,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3043\",\r\n      \"loc_data\": \"{3445,2917,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3044\",\r\n      \"loc_data\": \"{3428,2928,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3045\",\r\n      \"loc_data\": \"{3432,2912,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3046\",\r\n      \"loc_data\": \"{3425,2891,0,0,4}-{3425,2894,0,0,4}-{3425,2893,0,0,4}-{3425,2889,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3050\",\r\n      \"loc_data\": \"{3187,9758,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3068\",\r\n      \"loc_data\": \"{3062,9550,0,1,5}-{3050,9554,0,1,7}-{3048,9545,0,1,4}-{3061,9542,0,1,3}-{3065,9548,0,1,1}-{3034,9544,0,1,4}-{3033,9552,0,1,3}-{3029,9545,0,1,7}-{3027,9555,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3072\",\r\n      \"loc_data\": \"{3210,5562,0,1,3}-{3207,5448,0,1,3}-{3223,5446,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3073\",\r\n      \"loc_data\": \"{3217,5442,0,1,4}-{3231,5444,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3075\",\r\n      \"loc_data\": \"{3404,3492,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3076\",\r\n      \"loc_data\": \"{3403,3492,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3090\",\r\n      \"loc_data\": \"{3082,3442,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3094\",\r\n      \"loc_data\": \"{3361,3306,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3095\",\r\n      \"loc_data\": \"{3364,3309,0,1,3}-{3363,3317,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3097\",\r\n      \"loc_data\": \"{3364,3304,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3099\",\r\n      \"loc_data\": \"{3364,9626,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3100\",\r\n      \"loc_data\": \"{3363,9646,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3101\",\r\n      \"loc_data\": \"{3364,9644,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3103\",\r\n      \"loc_data\": \"{3362,3318,1,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3104\",\r\n      \"loc_data\": \"{3364,3310,0,1,1}-{3379,9627,0,1,0}-{3367,9647,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3105\",\r\n      \"loc_data\": \"{3367,3304,1,1,1}-{3376,9655,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3106\",\r\n      \"loc_data\": \"{3360,3305,1,1,3}-{3348,9654,0,1,4}-{3362,9648,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3107\",\r\n      \"loc_data\": \"{3361,3306,0,1,3}-{3348,9626,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3108\",\r\n      \"loc_data\": \"{2549,3100,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3109\",\r\n      \"loc_data\": \"{2551,3079,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3110\",\r\n      \"loc_data\": \"{2789,3175,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3111\",\r\n      \"loc_data\": \"{2788,3176,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3114\",\r\n      \"loc_data\": \"{2815,3344,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3123\",\r\n      \"loc_data\": \"{3344,2827,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3124\",\r\n      \"loc_data\": \"{3372,2847,1,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3125\",\r\n      \"loc_data\": \"{3366,2845,3,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3127\",\r\n      \"loc_data\": \"{3331,2948,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3153\",\r\n      \"loc_data\": \"{2871,3091,0,1,4}-{2862,3111,0,1,1}-{2861,3101,0,1,3}-{2870,3113,0,1,4}-{2870,3110,0,1,6}-{2865,3103,0,1,3}-{2873,3103,0,1,2}-{2863,3118,0,1,4}-{2886,3109,0,1,1}-{2892,3109,0,1,2}-{2883,3105,0,1,4}-{2889,3111,0,1,6}-{2883,3110,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3155\",\r\n      \"loc_data\": \"{3679,3494,0,1,3}-{3687,2953,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3162\",\r\n      \"loc_data\": \"{3691,2954,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3164\",\r\n      \"loc_data\": \"{3667,2990,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3166\",\r\n      \"loc_data\": \"{3693,2979,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3167\",\r\n      \"loc_data\": \"{3662,2978,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3168\",\r\n      \"loc_data\": \"{3663,2981,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3170\",\r\n      \"loc_data\": \"{3674,2970,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3188\",\r\n      \"loc_data\": \"{3664,2971,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3189\",\r\n      \"loc_data\": \"{3690,2976,0,1,1}-{3671,3006,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3191\",\r\n      \"loc_data\": \"{3659,2955,0,1,3}-{3683,2994,0,1,4}-{3662,3005,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3192\",\r\n      \"loc_data\": \"{3700,2994,0,1,4}-{3683,3005,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3193\",\r\n      \"loc_data\": \"{3696,2993,0,1,3}-{3693,3006,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3194\",\r\n      \"loc_data\": \"{3654,2992,0,1,4}-{3682,2962,0,1,3}-{3704,3006,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3195\",\r\n      \"loc_data\": \"{3696,2978,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3196\",\r\n      \"loc_data\": \"{3649,3004,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3200\",\r\n      \"loc_data\": \"{3263,3932,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3205\",\r\n      \"loc_data\": \"{3139,3448,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3216\",\r\n      \"loc_data\": \"{2534,3273,0,0,0}-{2539,3273,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3217\",\r\n      \"loc_data\": \"{2956,3370,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3219\",\r\n      \"loc_data\": \"{3027,3344,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3220\",\r\n      \"loc_data\": \"{3013,3338,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3221\",\r\n      \"loc_data\": \"{3016,3334,0,1,3}-{3016,3339,0,1,6}-{3019,3341,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3223\",\r\n      \"loc_data\": \"{2994,3365,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3224\",\r\n      \"loc_data\": \"{3047,3365,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3226\",\r\n      \"loc_data\": \"{2996,3375,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3227\",\r\n      \"loc_data\": \"{2756,3182,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3228\",\r\n      \"loc_data\": \"{2969,3373,0,1,3}-{2948,3353,0,1,3}-{3036,3357,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3229\",\r\n      \"loc_data\": \"{2912,3344,0,1,7}-{3040,3354,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3230\",\r\n      \"loc_data\": \"{2986,3370,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3234\",\r\n      \"loc_data\": \"{3011,3383,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3237\",\r\n      \"loc_data\": \"{2984,3435,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3238\",\r\n      \"loc_data\": \"{2981,3434,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3239\",\r\n      \"loc_data\": \"{2975,3436,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3240\",\r\n      \"loc_data\": \"{2977,3442,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3241\",\r\n      \"loc_data\": \"{2969,3451,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3242\",\r\n      \"loc_data\": \"{2910,3332,0,1,0}-{2910,3337,0,1,4}-{2904,3331,0,1,3}-{2979,3568,0,1,7}-{2983,3566,0,1,3}-{2979,3566,0,1,3}-{2981,3570,0,1,6}-{2984,3561,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3243\",\r\n      \"loc_data\": \"{2906,3331,0,1,6}-{2909,3333,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3244\",\r\n      \"loc_data\": \"{2909,3333,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3245\",\r\n      \"loc_data\": \"{2907,3336,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3246\",\r\n      \"loc_data\": \"{3071,3446,0,1,6}-{2548,3567,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3247\",\r\n      \"loc_data\": \"{2548,3567,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3248\",\r\n      \"loc_data\": \"{3073,3442,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3249\",\r\n      \"loc_data\": \"{3082,3441,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3250\",\r\n      \"loc_data\": \"{3088,3426,0,1,3}-{2547,3571,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3251\",\r\n      \"loc_data\": \"{3073,3422,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3252\",\r\n      \"loc_data\": \"{3077,3424,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3253\",\r\n      \"loc_data\": \"{2542,3578,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3255\",\r\n      \"loc_data\": \"{3073,3423,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3256\",\r\n      \"loc_data\": \"{3080,3415,0,1,3}-{3084,3415,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3257\",\r\n      \"loc_data\": \"{3096,3432,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3258\",\r\n      \"loc_data\": \"{3080,3444,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3259\",\r\n      \"loc_data\": \"{3075,3438,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3260\",\r\n      \"loc_data\": \"{3083,3425,0,1,3}-{2554,3564,0,1,6}-{2547,3558,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3261\",\r\n      \"loc_data\": \"{3086,3425,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3262\",\r\n      \"loc_data\": \"{3080,3423,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3263\",\r\n      \"loc_data\": \"{3084,3419,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3264\",\r\n      \"loc_data\": \"{3265,3331,0,1,7}-{3146,3460,0,1,6}-{3115,3414,0,1,3}-{3195,3240,0,1,6}-{2565,9843,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3265\",\r\n      \"loc_data\": \"{3121,3427,0,1,2}-{2582,9836,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3266\",\r\n      \"loc_data\": \"{3094,3406,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3267\",\r\n      \"loc_data\": \"{3134,3459,0,1,1}-{3194,3240,0,1,0}-{3178,3257,0,1,1}-{3170,3255,0,1,7}-{3192,3243,0,1,1}-{3175,3249,0,1,1}-{3170,3242,0,1,2}-{3193,3243,0,1,7}-{3189,3258,0,1,1}-{3172,3245,0,1,4}-{3172,3238,0,1,6}-{3187,3246,0,1,4}-{3186,3243,0,1,7}-{3222,3238,0,1,1}-{3144,3235,0,1,6}-{3147,3224,0,1,1}-{3131,3243,0,1,7}-{3142,3242,0,1,4}-{3157,3228,0,1,6}-{3151,3217,0,1,6}-{3152,3246,0,1,1}-{3145,3266,0,1,4}-{3148,3240,0,1,1}-{3135,3258,0,1,2}-{3140,3260,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3268\",\r\n      \"loc_data\": \"{3012,3454,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3269\",\r\n      \"loc_data\": \"{3022,3447,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3270\",\r\n      \"loc_data\": \"{3010,3452,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3272\",\r\n      \"loc_data\": \"{3042,3468,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3273\",\r\n      \"loc_data\": \"{3030,3465,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3276\",\r\n      \"loc_data\": \"{3039,3475,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3277\",\r\n      \"loc_data\": \"{3035,3471,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3278\",\r\n      \"loc_data\": \"{3045,3477,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3279\",\r\n      \"loc_data\": \"{3039,3471,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3280\",\r\n      \"loc_data\": \"{3015,3451,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3281\",\r\n      \"loc_data\": \"{3018,3450,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3282\",\r\n      \"loc_data\": \"{3008,3442,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3283\",\r\n      \"loc_data\": \"{3039,3424,0,1,5}-{3043,3429,0,1,4}-{3047,3427,0,1,1}-{2964,3455,0,0,0}-{3048,3441,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3284\",\r\n      \"loc_data\": \"{3058,3419,0,0,0}-{3048,3423,0,1,6}-{2969,3437,0,0,0}-{3054,3432,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3285\",\r\n      \"loc_data\": \"{3036,3430,0,1,3}-{3025,3442,0,0,0}-{2952,3376,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3286\",\r\n      \"loc_data\": \"{3034,3450,0,1,3}-{3057,3447,0,1,6}-{2968,3448,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3287\",\r\n      \"loc_data\": \"{3073,3443,0,1,0}-{3046,3453,0,1,6}-{2987,3444,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3288\",\r\n      \"loc_data\": \"{3034,3437,0,1,0}-{2987,3446,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3294\",\r\n      \"loc_data\": \"{3014,3339,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3295\",\r\n      \"loc_data\": \"{3020,3337,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3296\",\r\n      \"loc_data\": \"{2957,3359,0,1,0}-{2958,3358,0,1,0}-{2967,3360,0,1,0}-{2970,3361,0,1,0}-{2973,3359,0,1,0}-{2977,3357,0,1,0}-{2989,3384,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3298\",\r\n      \"loc_data\": \"{3366,9637,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3299\",\r\n      \"loc_data\": \"{3077,3257,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3302\",\r\n      \"loc_data\": \"{2453,4449,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3307\",\r\n      \"loc_data\": \"{2467,4438,0,1,4}-{2471,4439,0,1,7}-{2465,4436,0,1,3}-{2464,4432,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3310\",\r\n      \"loc_data\": \"{2415,4451,0,1,6}-{2416,4435,0,1,7}-{2423,4432,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3318\",\r\n      \"loc_data\": \"{2401,4378,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3324\",\r\n      \"loc_data\": \"{3159, 3433, 0, 1, 0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3325\",\r\n      \"loc_data\": \"{3161,3432,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3328\",\r\n      \"loc_data\": \"{3203,3344,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3329\",\r\n      \"loc_data\": \"{3112,3414,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3330\",\r\n      \"loc_data\": \"{3132,3508,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3331\",\r\n      \"loc_data\": \"{3242,3240,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3340\",\r\n      \"loc_data\": \"{1759,5182,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3341\",\r\n      \"loc_data\": \"{1759,5191,0,0,0}-{1754,5200,0,0,0}-{1748,5223,0,0,0}-{1784,5199,0,0,0}-{1739,5154,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3342\",\r\n      \"loc_data\": \"{1745,5208,0,0,0}-{1737,5215,0,0,0}-{1758,5210,0,0,0}-{1768,5175,0,0,0}-{1760,5152,0,0,0}-{1745,5169,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3343\",\r\n      \"loc_data\": \"{1764,5198,0,0,0}-{1774,5195,0,0,0}-{1773,5149,0,0,0}-{1742,5292,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3344\",\r\n      \"loc_data\": \"{2412,4470,0,0,0}-{2414,4467,0,0,0}-{2415,4475,0,0,0}-{2419,4467,0,0,0}-{2419,4474,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3345\",\r\n      \"loc_data\": \"{2412,4370,0,0,0}-{2416,4376,0,0,0}-{2419,4374,0,0,0}-{2420,4377,0,0,0}-{2421,4370,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3348\",\r\n      \"loc_data\": \"{2978,3343,0,1,4}-{2978,3337,0,1,1}-{2966,3337,1,1,6}-{2970,3330,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3349\",\r\n      \"loc_data\": \"{2961,3330,2,1,0}-{2966,3352,2,1,1}-{2974,3328,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3350\",\r\n      \"loc_data\": \"{2959,3340,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3376\",\r\n      \"loc_data\": \"{3313,5453,0,1,3}-{3312,5452,0,1,3}-{3310,5452,0,1,6}-{3311,5462,0,1,5}-{3313,5554,0,1,6}-{3297,5562,0,1,1}-{3305,5554,0,1,1}-{3300,5540,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3384\",\r\n      \"loc_data\": \"{3211,3225,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3402\",\r\n      \"loc_data\": \"{2560,2842,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3407\",\r\n      \"loc_data\": \"{3114,3515,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3408\",\r\n      \"loc_data\": \"{3113,3510,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3419\",\r\n      \"loc_data\": \"{2540,3020,0,0,0}-{2555,2953,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3450\",\r\n      \"loc_data\": \"{2901,2947,0,0,0}-{2925,2959,0,0,0}-{2920,3053,0,0,0}-{2924,3063,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3469\",\r\n      \"loc_data\": \"{2657,2966,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3470\",\r\n      \"loc_data\": \"{2755,3083,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3479\",\r\n      \"loc_data\": \"{2906,3514,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3541\",\r\n      \"loc_data\": \"{3517,3240,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3587\",\r\n      \"loc_data\": \"{2587,9741,0,1,4}-{2585,9739,0,1,7}-{2582,9736,0,1,3}-{2589,9734,0,1,4}-{2582,9743,0,1,3}-{2576,9746,0,1,7}-{2579,9741,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3671\",\r\n      \"loc_data\": \"{3084,3250,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3673\",\r\n      \"loc_data\": \"{2925,3321,0,1,4}-{2924,3319,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3675\",\r\n      \"loc_data\": \"{3321,2857,0,1,3}-{3322,2861,0,0,4}-{3319,2855,0,1,1}-{3319,2853,0,1,6}-{3331,2791,0,1,1}-{3333,2803,0,1,2}-{3338,2801,0,1,4}-{3338,2776,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3677\",\r\n      \"loc_data\": \"{2637,3440,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3679\",\r\n      \"loc_data\": \"{2875,3482,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3680\",\r\n      \"loc_data\": \"{3281,3331,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3695\",\r\n      \"loc_data\": \"{2661,3701,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3696\",\r\n      \"loc_data\": \"{2673,3658,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3707\",\r\n      \"loc_data\": \"{2713,10133,0,1,2}-{2708,10133,0,1,4}-{2706,10135,0,0,3}-{2708,10133,0,1,3}-{2703,10135,0,1,6}-{2702,10131,0,1,4}-{2717,10133,0,1,0}-{2708,10130,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3709\",\r\n      \"loc_data\": \"{2974,2906,0,0,0}-{2847,5075,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3711\",\r\n      \"loc_data\": \"{2575,9746,0,1,0}-{2581,9747,0,1,0}-{2577,9743,0,1,1}-{2579,9740,0,1,0}-{2588,9733,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3777\",\r\n      \"loc_data\": \"{3230,3231,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3778\",\r\n      \"loc_data\": \"{1867,4233,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3780\",\r\n      \"loc_data\": \"{1906,4281,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3781\",\r\n      \"loc_data\": \"{2659,2675,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3786\",\r\n      \"loc_data\": \"{2658,2666,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3787\",\r\n      \"loc_data\": \"{2754,3509,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3788\",\r\n      \"loc_data\": \"{2664,2653,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3789\",\r\n      \"loc_data\": \"{2660,2649,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3790\",\r\n      \"loc_data\": \"{3041,3203,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3791\",\r\n      \"loc_data\": \"{2653,2655,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3793\",\r\n      \"loc_data\": \"{2659,2660,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3796\",\r\n      \"loc_data\": \"{2667,2661,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3797\",\r\n      \"loc_data\": \"{2649,2659,0,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3798\",\r\n      \"loc_data\": \"{2658,2652,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3799\",\r\n      \"loc_data\": \"{2650,2663,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3802\",\r\n      \"loc_data\": \"{2657,2637,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3804\",\r\n      \"loc_data\": \"{3349,3793,0,0,0}-{3349,3793,0,0,4}-{3349,3793,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3806\",\r\n      \"loc_data\": \"{3166, 3304, 0, 1, 0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3807\",\r\n      \"loc_data\": \"{3254,3274,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3808\",\r\n      \"loc_data\": \"{2517,3205,0,1,3}-{2513,3204,0,1,3}-{2422,3526,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3809\",\r\n      \"loc_data\": \"{2465,3501,3,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3810\",\r\n      \"loc_data\": \"{2847,3499,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3811\",\r\n      \"loc_data\": \"{2918,3057,0,0,0}-{2894,2730,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3812\",\r\n      \"loc_data\": \"{2970,2973,0,0,0}-{3285,3213,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3813\",\r\n      \"loc_data\": \"{2541,2969,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3817\",\r\n      \"loc_data\": \"{2521,3208,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3819\",\r\n      \"loc_data\": \"{2416,3525,0,1,3}-{2412,3527,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3820\",\r\n      \"loc_data\": \"{3088,3255,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3823\",\r\n      \"loc_data\": \"{2343,3668,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3824\",\r\n      \"loc_data\": \"{2329,3689,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3831\",\r\n      \"loc_data\": \"{2357,3637,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3832\",\r\n      \"loc_data\": \"{2345,3651,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3848\",\r\n      \"loc_data\": \"{2337,3703,0,0,6}-{2340,3702,0,0,6}-{2343,3702,0,0,3}-{2349,3702,0,0,6}-{2353,3703,0,0,6}-{2310,3704,0,0,6}-{2311,3696,0,0,4}-{2343,3702,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3851\",\r\n      \"loc_data\": \"{2332,3669,0,0,0}-{2325,3671,0,0,4}-{2331,3670,0,0,1}-{2333,3671,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3915\",\r\n      \"loc_data\": \"{2945,3146,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3916\",\r\n      \"loc_data\": \"{2595,3890,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3917\",\r\n      \"loc_data\": \"{2581,3861,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"3937\",\r\n      \"loc_data\": \"{2508,3866,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4235\",\r\n      \"loc_data\": \"{2669,3332,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4237\",\r\n      \"loc_data\": \"{2669,3331,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4239\",\r\n      \"loc_data\": \"{2669,3331,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4241\",\r\n      \"loc_data\": \"{2669,3331,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4243\",\r\n      \"loc_data\": \"{2669,3331,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4246\",\r\n      \"loc_data\": \"{3480,3484,1,0,0}-{3479,3484,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4247\",\r\n      \"loc_data\": \"{2639,3291,0,0,0}-{2981,3370,0,0,0}-{3240,3474,0,0,0}-{2737,3500,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4250\",\r\n      \"loc_data\": \"{3302,3492,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4251\",\r\n      \"loc_data\": \"{3009,3380,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4261\",\r\n      \"loc_data\": \"{2569,9851,0,1,3}-{2579,9851,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4263\",\r\n      \"loc_data\": \"{2584,9838,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4264\",\r\n      \"loc_data\": \"{2588,9837,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4269\",\r\n      \"loc_data\": \"{2608,9817,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4270\",\r\n      \"loc_data\": \"{2593,9820,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4271\",\r\n      \"loc_data\": \"{2596,9822,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4273\",\r\n      \"loc_data\": \"{2564,9851,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4274\",\r\n      \"loc_data\": \"{2586,9826,0,1,7}-{2569,9849,0,1,4}-{2581,9847,0,1,0}-{2609,9826,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4275\",\r\n      \"loc_data\": \"{2594,9817,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4276\",\r\n      \"loc_data\": \"{2581,9851,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4285\",\r\n      \"loc_data\": \"{2880,3546,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4286\",\r\n      \"loc_data\": \"{2866,3543,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4287\",\r\n      \"loc_data\": \"{2840,3541,1,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4288\",\r\n      \"loc_data\": \"{2851,3554,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4289\",\r\n      \"loc_data\": \"{2792,3488,2,0,0}-{2845,3539,2,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4290\",\r\n      \"loc_data\": \"{2854,3542,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4291\",\r\n      \"loc_data\": \"{2863,3546,2,1,3}-{2870,3551,2,1,0}-{2850,3547,2,1,0}-{2844,3552,2,1,5}-{2843,3547,2,1,5}-{2872,3542,2,1,3}-{2861,3551,2,1,1}-{2865,3538,2,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4292\",\r\n      \"loc_data\": \"{2847,3541,2,1,3}-{2855,3554,2,1,5}-{2860,3542,2,1,0}-{2869,3554,2,1,3}-{2872,3537,2,1,4}-{2850,3534,2,1,3}-{2857,3546,2,1,0}-{2838,3554,2,1,6}-{2869,3552,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4293\",\r\n      \"loc_data\": \"{2840,3554,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4294\",\r\n      \"loc_data\": \"{2847,3553,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4295\",\r\n      \"loc_data\": \"{2856,3537,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4296\",\r\n      \"loc_data\": \"{2841,3543,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4297\",\r\n      \"loc_data\": \"{2856,3549,1,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4298\",\r\n      \"loc_data\": \"{2864,3541,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4299\",\r\n      \"loc_data\": \"{2866,3556,1,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4300\",\r\n      \"loc_data\": \"{2865,3544,1,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4312\",\r\n      \"loc_data\": \"{3218,9618,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4315\",\r\n      \"loc_data\": \"{3224,3286,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4317\",\r\n      \"loc_data\": \"{3230,3285,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4344\",\r\n      \"loc_data\": \"{3747,3013,0,1,4}-{3766,3034,0,1,6}-{3733,2972,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4346\",\r\n      \"loc_data\": \"{3786,9463,0,1,6}-{3714,2952,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4347\",\r\n      \"loc_data\": \"{3728,3043,0,1,4}-{3725,3015,0,1,0}-{3722,3021,0,1,6}-{3717,3017,0,1,7}-{3723,3019,0,1,5}-{3731,3018,0,1,1}-{3734,3028,0,1,7}-{3743,3038,0,1,4}-{3749,2978,0,1,7}-{3756,2966,0,1,2}-{3759,2962,0,1,2}-{3749,2968,0,1,2}-{3757,2980,0,0,5}-{3742,3036,0,1,1}-{3747,3040,0,1,4}-{3748,3030,0,1,6}-{3748,3019,0,1,1}-{3745,3016,0,1,4}-{3741,3020,0,1,3}-{3727,3039,0,1,3}-{3734,3046,0,1,1}-{3736,3050,0,1,6}-{3735,3053,0,1,3}-{3741,3053,0,1,6}-{3756,3030,0,1,3}-{3754,3024,0,1,4}-{3769,3039,0,1,6}-{3766,3045,0,1,7}-{3764,3042,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4348\",\r\n      \"loc_data\": \"{3676,3017,0,1,3}-{3687,3018,0,1,3}-{3707,3015,0,1,6}-{3729,3021,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4349\",\r\n      \"loc_data\": \"{3664,3018,0,1,6}-{3658,3012,0,1,4}-{3718,3030,0,1,4}-{3757,3009,0,1,3}-{3729,2984,0,1,4}-{3720,3000,0,1,4}-{3727,3051,0,1,4}-{3809,3028,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4350\",\r\n      \"loc_data\": \"{3680,3026,0,1,4}-{3675,3029,0,1,3}-{3711,3028,0,1,4}-{3733,3011,0,1,4}-{3793,3036,0,1,4}-{3698,3046,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4351\",\r\n      \"loc_data\": \"{3694,3019,0,1,4}-{3760,3015,0,1,1}-{3758,3034,0,1,2}-{3728,2965,0,1,7}-{3787,3026,0,1,6}-{3714,3049,0,1,7}-{3770,3008,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4352\",\r\n      \"loc_data\": \"{3683,3034,0,1,4}-{3719,3037,0,1,7}-{3770,3027,0,1,5}-{3747,3007,0,1,4}-{3735,2957,0,1,2}-{3719,3011,0,1,3}-{3727,3003,0,1,3}-{3787,3035,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4353\",\r\n      \"loc_data\": \"{3719,9358,0,1,6}-{3738,9378,0,1,0}-{3765,9422,0,1,1}-{3741,9436,0,1,6}-{3727,9455,0,1,2}-{3780,9456,0,1,2}-{3827,9430,0,1,2}-{3737,9413,0,1,0}-{3735,9444,0,1,3}-{3819,9422,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4354\",\r\n      \"loc_data\": \"{3739,9369,0,1,0}-{3737,9350,0,1,4}-{3721,9349,0,1,4}-{3733,9396,0,1,6}-{3813,9445,0,1,0}-{3749,9461,0,1,0}-{3786,9443,0,1,6}-{3783,9430,0,1,5}-{3821,9443,0,1,4}-{3746,9423,0,1,0}-{3764,9404,0,1,6}-{3790,9456,0,1,7}-{3760,9417,0,1,3}-{3760,9451,0,1,6}-{3732,9368,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4355\",\r\n      \"loc_data\": \"{3728,9349,0,1,3}-{3749,9413,0,1,4}-{3810,9448,0,1,4}-{3752,9398,0,1,4}-{3721,9419,0,1,3}-{3786,9412,0,1,3}-{3797,9452,0,1,4}-{3754,9408,0,1,4}-{3723,9377,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4356\",\r\n      \"loc_data\": \"{3755,9391,0,1,5}-{3723,9441,0,1,4}-{3766,9459,0,1,4}-{3800,9414,0,1,2}-{3821,9418,0,1,3}-{3810,9462,0,1,0}-{3809,9440,0,1,2}-{3748,9450,0,1,6}-{3765,9424,0,1,2}-{3787,9464,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4357\",\r\n      \"loc_data\": \"{3771,9450,0,1,4}-{3730,9443,0,1,4}-{3808,9423,0,1,7}-{3797,9427,0,1,4}-{3833,9438,0,1,6}-{3834,9458,0,1,6}-{3797,9440,0,1,1}-{3793,9441,0,1,4}-{3829,9425,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4358\",\r\n      \"loc_data\": \"{3751,2977,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4359\",\r\n      \"loc_data\": \"{3669,2977,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4375\",\r\n      \"loc_data\": \"{3012,3192,1,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4376\",\r\n      \"loc_data\": \"{3081,3421,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4381\",\r\n      \"loc_data\": \"{3024,10152,0,0,0}-{3020,10148,0,0,0}-{3023,10145,0,0,0}-{3018,10140,0,0,0}-{3033,10139,0,0,0}-{3028,10137,0,0,0}-{2361,5241,0,0,1}-{2358,5240,0,0,1}-{2362,5239,0,0,1}-{2364,5240,0,0,1}-{2364,5242,0,0,1}-{2372,9743,0,1,1}-{2373,9745,0,1,1}-{2374,9742,0,1,1}-{2377,9750,0,1,1}-{2378,9752,0,1,1}-{2377,9754,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4382\",\r\n      \"loc_data\": \"{3162,3716,0,0,0}-{3175,3717,0,0,0}-{3161,3727,0,0,0}-{2304,5160,0,0,2}-{2324,5210,0,0,2}-{2322,5201,0,0,7}-{2324,5210,0,0,2}-{2322,5201,0,0,7}-{2327,5205,0,0,7}-{2328,5200,0,0,7}-{2326,5198,0,0,7}-{2331,5198,0,0,4}-{2333,5201,0,0,4}-{2333,5199,0,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4383\",\r\n      \"loc_data\": \"{2321,5225,0,0,3}-{2321,5223,0,0,4}-{2317,5229,0,0,7}-{2322,5225,0,0,1}-{2325,5231,0,0,6}-{2321,5225,0,0,1}-{2314,5227,0,0,2}-{2312,5229,0,0,2}-{2330,5229,0,0,1}-{2324,5233,0,0,4}-{2320,5232,0,0,3}-{2324,5237,0,0,1}-{2329,5229,0,0,6}-{2315,5227,0,0,7}-{2318,5226,0,0,6}-{2322,5222,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4384\",\r\n      \"loc_data\": \"{2355,5204,0,1,3}-{2347,5195,0,1,0}-{2336,5202,0,1,4}-{2332,5201,0,1,3}-{2327,5201,0,1,1}-{2328,5199,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4385\",\r\n      \"loc_data\": \"{2350,5201,0,1,1}-{2353,5192,0,1,1}-{2324,5203,0,1,1}-{2333,5204,0,1,4}-{2264,5136,0,1,6}-{2326,5197,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4386\",\r\n      \"loc_data\": \"{2312,5188,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4387\",\r\n      \"loc_data\": \"{2350,5192,0,1,6}-{2350,5191,0,1,4}-{2347,5188,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4388\",\r\n      \"loc_data\": \"{2305,5231,0,0,2}-{2312,5225,0,0,2}-{2314,5240,0,0,2}-{2310,5241,0,0,2}-{2308,5246,0,0,2}-{2309,5245,0,0,2}-{2315,5237,0,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4389\",\r\n      \"loc_data\": \"{2013,5238,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4390\",\r\n      \"loc_data\": \"{1984,5160,0,1,2}-{2040,5190,0,1,3}-{2044,5187,0,1,2}-{2042,5191,0,1,1}-{2045,5190,0,1,7}-{2041,5187,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4391\",\r\n      \"loc_data\": \"{1952,5192,0,1,2}-{1993,5240,0,1,4}-{1991,5235,0,1,4}-{1990,5240,0,1,3}-{1989,5237,0,1,6}-{2009,5202,0,1,1}-{2005,5199,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4392\",\r\n      \"loc_data\": \"{2033,5233,0,1,4}-{2033,5233,0,1,7}-{2026,5236,0,1,1}-{1984,5160,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4393\",\r\n      \"loc_data\": \"{2045,5222,0,1,4}-{1944,5152,0,1,2}-{1993,5190,0,1,6}-{1993,5190,0,1,4}-{2044,5216,0,1,4}-{2008,5203,0,1,1}-{2006,5208,0,1,1}-{2037,5214,0,1,3}-{2037,5210,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4394\",\r\n      \"loc_data\": \"{1997,5244,0,1,3}-{1992,5238,0,1,5}-{1990,5234,0,1,1}-{2010,5191,0,1,7}-{2018,5188,0,1,4}-{1989,5231,0,1,4}-{2018,5187,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4395\",\r\n      \"loc_data\": \"{2016,5237,0,1,7}-{1988,5190,0,1,2}-{2039,5216,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4396\",\r\n      \"loc_data\": \"{2034,5243,0,1,5}-{2034,5239,0,1,5}-{2032,5243,0,1,4}-{2034,5232,0,1,1}-{2033,5240,0,1,1}-{2029,5230,0,1,6}-{2030,5234,0,1,4}-{2029,5230,0,1,1}-{2029,5233,0,1,2}-{2031,5244,0,1,1}-{2039,5208,0,1,4}-{2029,5235,0,1,6}-{2028,5234,0,1,6}-{2030,5237,0,1,4}-{2033,5238,0,1,4}-{2030,5238,0,1,4}-{2032,5238,0,1,3}-{2027,5238,0,1,6}-{2034,5239,0,1,0}-{2016,5235,0,1,5}-{2015,5237,0,1,3}-{2004,5244,0,1,4}-{2005,5241,0,1,4}-{2035,5245,0,1,5}-{2004,5240,0,1,1}-{2027,5235,0,1,5}-{2027,5235,0,1,4}-{2027,5236,0,1,6}-{1999,5244,0,1,4}-{1995,5234,0,1,6}-{1993,5242,0,1,1}-{1990,5239,0,1,1}-{1990,5243,0,1,7}-{1989,5230,0,1,6}-{1990,5224,0,1,5}-{1993,5222,0,1,7}-{1986,5221,0,1,3}-{1990,5221,0,1,3}-{1986,5222,0,1,6}-{2002,5215,0,1,1}-{1996,5215,0,1,1}-{1994,5215,0,1,2}-{2002,5215,0,1,6}-{1995,5208,0,1,1}-{1993,5206,0,1,4}-{1986,5204,0,1,3}-{1986,5201,0,1,6}-{2001,5201,0,1,6}-{1987,5200,0,1,3}-{1986,5199,0,1,6}-{2009,5198,0,1,6}-{1995,5197,0,1,3}-{2009,5194,0,1,3}-{1944,5152,0,1,2}-{2005,5191,0,1,3}-{2004,5190,0,1,4}-{1991,5190,0,1,1}-{2003,5185,0,1,4}-{2004,5190,0,1,4}-{2004,5188,0,1,1}-{2005,5188,0,1,6}-{2008,5192,0,1,6}-{2008,5193,0,1,3}-{2009,5200,0,1,7}-{2010,5192,0,1,4}-{2010,5194,0,1,4}-{2013,5190,0,1,6}-{2018,5189,0,1,6}-{2018,5192,0,1,6}-{2018,5187,0,1,4}-{1993,5205,0,1,4}-{1994,5206,0,1,3}-{1989,5206,0,1,0}-{1993,5210,0,1,3}-{1989,5200,0,1,4}-{2002,5215,0,1,1}-{2022,5193,0,1,3}-{1995,5220,0,1,1}-{1992,5222,0,1,6}-{1992,5222,0,1,6}-{1988,5201,0,1,4}-{1988,5224,0,1,4}-{1989,5206,0,1,4}-{1987,5225,0,1,4}-{1988,5225,0,1,4}-{1986,5204,0,1,3}-{1987,5226,0,1,4}-{1990,5227,0,1,3}-{1993,5200,0,1,7}-{1990,5228,0,1,4}-{2004,5200,0,1,6}-{1990,5227,0,1,4}-{1990,5224,0,1,6}-{1994,5223,0,1,4}-{2036,5201,0,1,6}-{2038,5215,0,1,4}-{2042,5208,0,1,1}-{2045,5204,0,1,1}-{2046,5205,0,1,3}-{2028,5195,0,1,3}-{2026,5195,0,1,0}-{2039,5193,0,1,3}-{2025,5193,0,1,1}-{2022,5193,0,1,6}-{2043,5192,0,1,2}-{2018,5192,0,1,1}-{2045,5192,0,1,1}-{2032,5190,0,1,1}-{2030,5189,0,1,4}-{2024,5187,0,1,3}-{2038,5186,0,1,4}-{2038,5185,0,1,3}-{2033,5185,0,1,3}-{2016,5186,0,1,1}-{2017,5194,0,1,1}-{2024,5193,0,1,4}-{2008,5201,0,1,4}-{2005,5220,0,1,1}-{2005,5204,0,1,4}-{2037,5203,0,1,3}-{2037,5206,0,1,4}-{2041,5208,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4397\",\r\n      \"loc_data\": \"{2072,5200,0,1,5}-{2145,5251,0,1,3}-{2153,5253,0,1,1}-{2149,5255,0,1,3}-{2146,5252,0,1,5}-{2146,5261,0,1,6}-{2147,5254,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4398\",\r\n      \"loc_data\": \"{2160,5282,0,1,3}-{2162,5284,0,1,1}-{2164,5281,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4399\",\r\n      \"loc_data\": \"{2122,5290,0,1,0}-{2131,5297,0,1,6}-{2119,5297,0,1,4}-{2120,5302,0,1,3}-{2080,5240,0,1,2}-{2129,5306,0,1,3}-{2123,5304,0,1,1}-{2130,5306,0,1,4}-{2163,5301,0,1,5}-{2166,5306,0,1,0}-{2169,5303,0,1,4}-{2122,5291,0,1,0}-{2119,5296,0,1,3}-{2131,5297,0,1,6}-{2125,5302,0,1,0}-{2127,5304,0,1,4}-{2165,5302,0,1,3}-{2163,5301,0,1,4}-{2168,5306,0,1,4}-{2132,5300,0,1,6}-{2132,5302,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4400\",\r\n      \"loc_data\": \"{3018,10313,0,1,4}-{3016,10315,0,1,4}-{3018,10322,0,1,4}-{3024,10326,0,1,3}-{3030,10332,0,1,4}-{3029,10337,0,1,6}-{3034,10342,0,1,3}-{2072,5200,0,1,7}-{2130,5267,0,1,7}-{2140,5252,0,1,5}-{2141,5252,0,1,1}-{2142,5252,0,1,0}-{2148,5255,0,1,3}-{2125,5270,0,1,1}-{2148,5257,0,1,1}-{2117,5274,0,1,4}-{2146,5307,0,1,2}-{2145,5305,0,1,5}-{2152,5307,0,1,4}-{2148,5252,0,1,0}-{2142,5262,0,1,3}-{2124,5275,0,1,4}-{2121,5276,0,1,3}-{2148,5304,0,1,0}-{2146,5305,0,1,5}-{2148,5304,0,1,1}-{2151,5304,0,1,6}-{2145,5306,0,1,3}-{2134,5272,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4401\",\r\n      \"loc_data\": \"{2124,5273,0,1,1}-{2072,5200,0,1,6}-{2128,5270,0,1,4}-{2117,5274,0,1,3}-{2154,5273,0,1,3}-{2167,5259,0,1,6}-{2170,5257,0,1,1}-{2170,5256,0,1,0}-{2171,5256,0,1,4}-{2167,5256,0,1,3}-{2153,5273,0,1,3}-{2153,5270,0,1,1}-{2171,5255,0,1,2}-{2168,5250,0,1,4}-{2168,5251,0,1,3}-{2131,5264,0,1,6}-{2096,5248,0,1,6}-{2157,5272,0,1,6}-{2150,5268,0,1,0}-{2133,5272,0,1,2}-{2157,5274,0,1,1}-{2156,5270,0,1,3}-{2154,5271,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4402\",\r\n      \"loc_data\": \"{2080,5240,0,1,5}-{2171,5283,0,1,6}-{2170,5287,0,1,6}-{2170,5281,0,1,6}-{2172,5272,0,1,4}-{2172,5272,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4403\",\r\n      \"loc_data\": \"{2096,5248,0,1,4}-{2172,5276,0,1,1}-{2172,5284,0,1,1}-{2172,5281,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4404\",\r\n      \"loc_data\": \"{1872,5242,0,1,3}-{1873,5230,0,1,2}-{1870,5235,0,1,3}-{1872,5217,0,1,6}-{1873,5212,0,1,4}-{1877,5218,0,1,2}-{1877,5216,0,1,3}-{1875,5218,0,1,6}-{1808,5152,0,1,2}-{1871,5191,0,1,4}-{1868,5188,0,1,4}-{1861,5189,0,1,3}-{1882,5216,0,1,6}-{1874,5215,0,1,5}-{1873,5238,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4406\",\r\n      \"loc_data\": \"{1898,5197,0,1,6}-{1898,5191,0,1,7}-{1890,5195,0,1,3}-{1893,5191,0,1,4}-{1903,5190,0,1,0}-{1889,5190,0,1,3}-{1889,5190,0,1,4}-{1885,5191,0,1,4}-{1900,5208,0,1,1}-{1900,5210,0,1,1}-{1903,5243,0,1,6}-{1848,5176,0,1,2}-{1901,5245,0,1,4}-{1894,5243,0,1,5}-{1890,5242,0,1,6}-{1889,5244,0,1,4}-{1897,5196,0,1,1}-{1902,5207,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4407\",\r\n      \"loc_data\": \"{1860,5226,0,1,0}-{1859,5200,0,1,0}-{1860,5222,0,1,4}-{1865,5205,0,1,4}-{1862,5205,0,1,7}-{1862,5205,0,1,7}-{1864,5206,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4408\",\r\n      \"loc_data\": \"{1860,5215,0,1,5}-{1864,5218,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4409\",\r\n      \"loc_data\": \"{1864,5226,0,1,1}-{1859,5220,0,1,4}-{1861,5224,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4410\",\r\n      \"loc_data\": \"{1890,5205,0,1,6}-{1897,5232,0,1,6}-{1906,5236,0,1,3}-{1848,5176,0,1,2}-{1904,5235,0,1,6}-{1895,5227,0,1,3}-{1863,5221,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4411\",\r\n      \"loc_data\": \"{1882,5201,0,1,0}-{1884,5207,0,1,3}-{1912,5239,0,1,4}-{1912,5244,0,1,5}-{1890,5204,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4412\",\r\n      \"loc_data\": \"{1880,5200,0,1,6}-{1911,5241,0,1,0}-{1893,5228,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4413\",\r\n      \"loc_data\": \"{1871,5228,0,1,6}-{1872,5233,0,1,1}-{2645,3580,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4414\",\r\n      \"loc_data\": \"{1808,5152,0,1,2}-{1890,5215,0,1,5}-{1892,5216,0,1,1}-{1889,5223,0,1,3}-{1892,5224,0,1,2}-{1893,5219,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4415\",\r\n      \"loc_data\": \"{1874,5230,0,1,3}-{1870,5232,0,1,4}-{1858,5235,0,1,3}-{1871,5241,0,1,7}-{1860,5223,0,1,4}-{1862,5222,0,1,4}-{1874,5234,0,1,5}-{1874,5230,0,1,5}-{1875,5219,0,1,5}-{1876,5215,0,1,3}-{1876,5220,0,1,6}-{1859,5206,0,1,5}-{1877,5216,0,1,4}-{1862,5201,0,1,5}-{1858,5201,0,1,6}-{1874,5201,0,1,2}-{1858,5202,0,1,0}-{1860,5200,0,1,7}-{1875,5197,0,1,6}-{1875,5201,0,1,2}-{1861,5194,0,1,3}-{1861,5224,0,1,6}-{1808,5152,0,1,2}-{1860,5192,0,1,2}-{1874,5188,0,1,7}-{1867,5188,0,1,4}-{1866,5189,0,1,4}-{1876,5189,0,1,1}-{1876,5196,0,1,3}-{1876,5188,0,1,4}-{1876,5191,0,1,4}-{1877,5191,0,1,4}-{1877,5197,0,1,6}-{1881,5198,0,1,4}-{1882,5197,0,1,5}-{1883,5203,0,1,3}-{1882,5198,0,1,4}-{1863,5205,0,1,4}-{1883,5205,0,1,5}-{1861,5205,0,1,5}-{1887,5204,0,1,3}-{1883,5205,0,1,3}-{1884,5206,0,1,1}-{1876,5215,0,1,6}-{1879,5215,0,1,2}-{1870,5217,0,1,6}-{1881,5221,0,1,1}-{1871,5218,0,1,1}-{1872,5191,0,1,3}-{1874,5219,0,1,5}-{1884,5228,0,1,4}-{1882,5231,0,1,7}-{1882,5234,0,1,5}-{1879,5234,0,1,6}-{1897,5234,0,1,6}-{1884,5234,0,1,4}-{1884,5235,0,1,3}-{1885,5236,0,1,6}-{1879,5239,0,1,4}-{1893,5243,0,1,7}-{1880,5243,0,1,7}-{1882,5241,0,1,1}-{1902,5242,0,1,4}-{1848,5176,0,1,2}-{1901,5244,0,1,3}-{1910,5243,0,1,5}-{1911,5235,0,1,3}-{1881,5243,0,1,2}-{1879,5234,0,1,3}-{1880,5234,0,1,4}-{1879,5239,0,1,1}-{1874,5230,0,1,4}-{1874,5236,0,1,4}-{1911,5235,0,1,5}-{1912,5243,0,1,4}-{1912,5238,0,1,3}-{1913,5244,0,1,4}-{1890,5244,0,1,4}-{1907,5204,0,1,1}-{1909,5204,0,1,1}-{1908,5204,0,1,3}-{1889,5206,0,1,3}-{1890,5207,0,1,1}-{1890,5207,0,1,2}-{1912,5237,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4422\",\r\n      \"loc_data\": \"{2377,4450,0,0,0}-{2381,4459,0,0,0}-{2388,4425,0,0,0}-{2394,4440,0,0,0}-{2418,4447,0,0,0}-{2427,4461,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4423\",\r\n      \"loc_data\": \"{2387,4456,0,0,0}-{2423,4461,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4424\",\r\n      \"loc_data\": \"{2396,4455,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4425\",\r\n      \"loc_data\": \"{2398,4453,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4431\",\r\n      \"loc_data\": \"{2388,4470,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4437\",\r\n      \"loc_data\": \"{2447,4429,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4438\",\r\n      \"loc_data\": \"{3028,4498,0,1,3}-{3046,4493,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4439\",\r\n      \"loc_data\": \"{3035,4507,0,1,6}-{3041,4493,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4443\",\r\n      \"loc_data\": \"{2451,4424,0,1,6}-{2452,4428,0,1,3}-{2443,4423,0,1,7}-{2446,4422,0,1,3}-{2443,4431,0,1,1}-{2441,4427,0,1,1}-{2463,4422,0,1,4}-{2478,4420,0,1,6}-{2489,4428,0,1,6}-{2478,4452,0,1,3}-{2474,4444,0,1,6}-{2493,4454,0,1,3}-{2486,4463,0,1,4}-{2486,4469,0,1,7}-{2479,4456,0,1,4}-{2477,4462,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4455\",\r\n      \"loc_data\": \"{2410,4434,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4472\",\r\n      \"loc_data\": \"{2524,3056,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4474\",\r\n      \"loc_data\": \"{3214,3252,0,0,0}-{3214,3253,0,0,0}-{3214,3254,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4478\",\r\n      \"loc_data\": \"{3291,2787,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4479\",\r\n      \"loc_data\": \"{2952,3477,0,1,0}-{2959,3501,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4481\",\r\n      \"loc_data\": \"{2943,3474,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4482\",\r\n      \"loc_data\": \"{2952,3505,0,1,7}-{2950,3501,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4483\",\r\n      \"loc_data\": \"{2944,3467,0,1,6}-{2961,3508,0,1,6}-{2953,3467,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4484\",\r\n      \"loc_data\": \"{2956,3496,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4485\",\r\n      \"loc_data\": \"{2951,3509,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4487\",\r\n      \"loc_data\": \"{2943,3478,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4488\",\r\n      \"loc_data\": \"{2946,3474,0,1,4}-{2956,3494,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4489\",\r\n      \"loc_data\": \"{2946,3469,0,1,5}-{2943,3487,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4491\",\r\n      \"loc_data\": \"{2963,3510,0,1,2}-{2949,3475,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4492\",\r\n      \"loc_data\": \"{2953,3509,0,1,4}-{2987,3426,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4493\",\r\n      \"loc_data\": \"{2957,3513,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4494\",\r\n      \"loc_data\": \"{2957,3512,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4495\",\r\n      \"loc_data\": \"{2957,3512,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4511\",\r\n      \"loc_data\": \"{2149,3866,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4512\",\r\n      \"loc_data\": \"{2092,3930,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4513\",\r\n      \"loc_data\": \"{2450,4647,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4514\",\r\n      \"loc_data\": \"{2079,3923,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4515\",\r\n      \"loc_data\": \"{2081,3899,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4516\",\r\n      \"loc_data\": \"{2096,3907,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4517\",\r\n      \"loc_data\": \"{2086,3915,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4518\",\r\n      \"loc_data\": \"{2106,3907,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4519\",\r\n      \"loc_data\": \"{2098,3921,0,0,6}-{2099,3921,0,0,6}-{2097,3921,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4524\",\r\n      \"loc_data\": \"{2083,3903,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4525\",\r\n      \"loc_data\": \"{2098,3894,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4526\",\r\n      \"loc_data\": \"{2103,3914,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4527\",\r\n      \"loc_data\": \"{2071,3877,0,1,2}-{2084,3868,0,1,1}-{2089,3864,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4528\",\r\n      \"loc_data\": \"{2115,3864,0,1,6}-{2105,3848,0,1,1}-{2122,3946,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4529\",\r\n      \"loc_data\": \"{2070,3879,0,1,7}-{2097,3862,0,1,3}-{2118,3852,0,1,4}-{2144,3853,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4530\",\r\n      \"loc_data\": \"{2076,3866,0,1,1}-{2133,3874,0,1,4}-{2107,3945,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4531\",\r\n      \"loc_data\": \"{2103,3866,0,1,3}-{2134,3851,0,1,4}-{2116,3950,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4534\",\r\n      \"loc_data\": \"{3206,5487,0,1,6}-{3200,5492,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4536\",\r\n      \"loc_data\": \"{2213,3794,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4537\",\r\n      \"loc_data\": \"{2621,3688,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4539\",\r\n      \"loc_data\": \"{2079,3925,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4540\",\r\n      \"loc_data\": \"{2221,3797,2,1,3}-{2137,3899,2,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4560\",\r\n      \"loc_data\": \"{3062,3260,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4563\",\r\n      \"loc_data\": \"{3003,9798,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4568\",\r\n      \"loc_data\": \"{3364,3338,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4570\",\r\n      \"loc_data\": \"{3201,3301,0,1,3}-{3115,3276,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4571\",\r\n      \"loc_data\": \"{3205,3298,0,1,3}-{3095,3286,0,1,4}-{3098,3225,0,1,4}-{3056,3248,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4572\",\r\n      \"loc_data\": \"{2448,3510,1,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4573\",\r\n      \"loc_data\": \"{2441,3501,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4575\",\r\n      \"loc_data\": \"{2441,3503,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4578\",\r\n      \"loc_data\": \"{2933,2972,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4580\",\r\n      \"loc_data\": \"{2572,3299,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4585\",\r\n      \"loc_data\": \"{3115,3160,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4586\",\r\n      \"loc_data\": \"{2593,3087,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4587\",\r\n      \"loc_data\": \"{2449,3503,1,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4588\",\r\n      \"loc_data\": \"{2448,3500,1,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4597\",\r\n      \"loc_data\": \"{2375,3433,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4599\",\r\n      \"loc_data\": \"{2417,3513,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4603\",\r\n      \"loc_data\": \"{3008,3514,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4604\",\r\n      \"loc_data\": \"{3017,3513,0,1,0}-{3018,3515,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4605\",\r\n      \"loc_data\": \"{3018,3512,0,1,7}-{3019,3514,0,1,1}-{3019,3516,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4606\",\r\n      \"loc_data\": \"{3017,3514,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4607\",\r\n      \"loc_data\": \"{3030,3505,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4611\",\r\n      \"loc_data\": \"{3076,3259,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4649\",\r\n      \"loc_data\": \"{2142,3122,0,1,4}-{2147,3122,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4650\",\r\n      \"loc_data\": \"{3041,3194,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4651\",\r\n      \"loc_data\": \"{2760,3239,0,1,3}-{2143,3121,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4652\",\r\n      \"loc_data\": \"{2674,3144,0,1,3}-{3701,3501,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4653\",\r\n      \"loc_data\": \"{2794,3414,0,1,6}-{3040,3192,0,1,3}-{2954,3154,0,1,6}-{3671,2930,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4654\",\r\n      \"loc_data\": \"{3001,3033,0,1,6}-{2674,3146,0,1,6}-{2145,3122,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4655\",\r\n      \"loc_data\": \"{2954,3157,0,1,3}-{3701,3503,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4656\",\r\n      \"loc_data\": \"{2795,3414,0,1,6}-{3038,3192,0,1,3}-{2760,3238,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4670\",\r\n      \"loc_data\": \"{3192,3832,0,1,6}-{3211,3813,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4671\",\r\n      \"loc_data\": \"{3189,3836,0,1,6}-{3181,3815,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4672\",\r\n      \"loc_data\": \"{3212,3847,0,1,6}-{3221,3827,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4675\",\r\n      \"loc_data\": \"{3048,10266,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4676\",\r\n      \"loc_data\": \"{3054,10269,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4677\",\r\n      \"loc_data\": \"{3335,3687,0,1,4}-{3338,3700,0,1,2}-{3316,5448,0,1,2}-{3107,10065,0,1,0}-{3299,5545,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4678\",\r\n      \"loc_data\": \"{3335,3701,0,1,6}-{3350,3687,0,1,5}-{3305,5454,0,1,6}-{3110,10076,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4679\",\r\n      \"loc_data\": \"{3333,3694,0,1,6}-{3341,3685,0,1,4}-{3118,10068,0,1,0}-{3312,5558,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4680\",\r\n      \"loc_data\": \"{3349,3696,0,1,5}-{3120,10080,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4685\",\r\n      \"loc_data\": \"{2957,3895,0,1,4}-{3209,5552,0,1,1}-{3223,5555,0,1,4}-{3220,5548,0,1,6}-{3220,5557,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4686\",\r\n      \"loc_data\": \"{2827,3512,0,1,5}-{2957,3898,0,1,6}-{2946,3898,0,1,7}-{3213,5548,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4688\",\r\n      \"loc_data\": \"{2700,3212,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4690\",\r\n      \"loc_data\": \"{3256,3624,0,1,5}-{3105,3876,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4694\",\r\n      \"loc_data\": \"{3098,3870,0,1,1}-{3020,3854,0,1,7}-{2843,9558,0,1,1}-{2840,9605,0,1,4}-{3053,10124,0,1,0}-{3056,10140,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4695\",\r\n      \"loc_data\": \"{3097,3696,0,1,4}-{3017,3851,0,1,2}-{2839,9565,0,1,3}-{2837,9601,0,1,4}-{2840,3279,0,1,6}-{3048,10134,0,1,0}-{3061,10138,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4696\",\r\n      \"loc_data\": \"{3118,3695,0,1,6}-{3010,3851,0,1,1}-{2839,9560,0,1,4}-{2846,9613,0,1,6}-{3062,10131,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4697\",\r\n      \"loc_data\": \"{3125,3706,0,1,5}-{3331,3853,0,1,2}-{3016,3841,0,1,4}-{2845,9557,0,1,2}-{2839,9624,0,1,6}-{2825,3277,0,1,3}-{3065,10125,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4698\",\r\n      \"loc_data\": \"{3139,3712,0,1,5}-{3306,3890,0,1,6}-{3085,10093,0,1,0}-{3090,10084,0,1,0}-{2861,9752,0,1,4}-{2363,9776,0,1,1}-{2361,9755,0,1,1}-{2365,9754,0,1,1}-{2362,9751,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4699\",\r\n      \"loc_data\": \"{3035,10245,0,1,4}-{3159,3707,0,1,3}-{3301,3871,0,1,5}-{3097,10092,0,1,0}-{3082,10083,0,1,0}-{2629,9477,2,0,0}-{2640,9502,2,0,1}-{2359,9741,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4700\",\r\n      \"loc_data\": \"{3030,10259,0,1,3}-{3144,3701,0,1,4}-{3279,3876,0,1,4}-{3094,10092,0,1,0}-{3089,10081,0,1,0}-{2633,9488,2,0,6}-{2862,9750,0,1,7}-{2358,9737,0,1,1}-{2366,9763,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4701\",\r\n      \"loc_data\": \"{3028,10250,0,1,4}-{3149,3690,0,1,4}-{3286,3901,0,1,3}-{3089,10089,0,1,0}-{3085,10081,0,1,0}-{2628,9489,2,0,0}-{2631,9504,2,0,5}-{2361,9755,0,1,1}-{2363,9743,0,1,1}-{2363,9772,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4702\",\r\n      \"loc_data\": \"{3084,9957,0,1,6}-{2712,9480,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4703\",\r\n      \"loc_data\": \"{3092,9958,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4704\",\r\n      \"loc_data\": \"{3160,5521,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4705\",\r\n      \"loc_data\": \"{3088,9961,0,1,1}-{3169,5528,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4706\",\r\n      \"loc_data\": \"{3242,5555,0,1,3}-{3206,5493,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4707\",\r\n      \"loc_data\": \"{3213,3253,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4710\",\r\n      \"loc_data\": \"{3222,3475,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4732\",\r\n      \"loc_data\": \"{3429,3701,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4898\",\r\n      \"loc_data\": \"{3124,9874,0,1,3}-{3128,9875,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4899\",\r\n      \"loc_data\": \"{3231,3197,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4900\",\r\n      \"loc_data\": \"{3210,3213,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4901\",\r\n      \"loc_data\": \"{3245,3157,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4902\",\r\n      \"loc_data\": \"{3227,3147,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4903\",\r\n      \"loc_data\": \"{3244,3214,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4904\",\r\n      \"loc_data\": \"{3228,3254,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4906\",\r\n      \"loc_data\": \"{3230,3244,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4907\",\r\n      \"loc_data\": \"{3208,3222,2,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4909\",\r\n      \"loc_data\": \"{2831,3352,0,0,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4920\",\r\n      \"loc_data\": \"{3289,5496,0,0,5}-{3272,5490,0,0,0}-{3188,5510,0,1,6}-{3194,5510,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4921\",\r\n      \"loc_data\": \"{3304,5493,0,1,3}-{3303,5496,0,1,0}-{3271,5490,0,0,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4926\",\r\n      \"loc_data\": \"{3225,3551,0,1,1}-{3248,3524,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4927\",\r\n      \"loc_data\": \"{3227,3529,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4930\",\r\n      \"loc_data\": \"{3412,2889,0,1,3}-{3414,2892,0,1,1}-{3414,2890,0,1,1}-{3416,2886,0,1,4}-{3416,2893,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4932\",\r\n      \"loc_data\": \"{3414,2891,0,1,1}-{3410,2888,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4944\",\r\n      \"loc_data\": \"{2042,5213,0,1,5}-{2020,5236,0,1,2}-{1944,5152,0,1,2}-{2041,5216,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4945\",\r\n      \"loc_data\": \"{1994,5192,0,1,4}-{1997,5190,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4946\",\r\n      \"loc_data\": \"{2721,3432,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4947\",\r\n      \"loc_data\": \"{2825,3696,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4950\",\r\n      \"loc_data\": \"{2855,10051,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4953\",\r\n      \"loc_data\": \"{2684,3274,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4955\",\r\n      \"loc_data\": \"{2772,3223,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4956\",\r\n      \"loc_data\": \"{2783,3119,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4961\",\r\n      \"loc_data\": \"{2683,3275,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4975\",\r\n      \"loc_data\": \"{3303,3024,0,0,7}-{3299,3016,0,0,2}-{3280,9438,0,0,6}-{3275,9460,0,0,3}-{3267,9458,0,0,3}-{3270,9415,0,0,6}-{3272,9429,0,0,4}-{3272,9421,0,0,4}-{3271,9450,0,0,1}-{3288,9413,0,0,6}-{3297,9414,0,0,6}-{3300,9414,0,0,6}-{3304,9424,0,0,1}-{3292,9426,0,0,4}-{3295,9421,0,0,3}-{3297,9412,0,0,1}-{3292,9413,0,0,3}-{3324,9429,0,0,3}-{3311,9440,0,0,6}-{3294,9459,0,0,1}-{3291,9463,0,0,6}-{3296,9468,0,0,1}-{3288,9468,0,0,1}-{3313,9449,0,0,1}-{3034,2971,0,0,5}-{3030,2971,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4976\",\r\n      \"loc_data\": \"{3301,3017,0,0,7}-{3281,9446,0,0,1}-{3270,9451,0,0,4}-{3269,9418,0,0,1}-{3267,9441,0,0,1}-{3280,9436,0,0,1}-{3291,9414,0,0,6}-{3305,9413,0,0,6}-{3308,9415,0,0,1}-{3309,9420,0,0,1}-{3296,9425,0,0,1}-{3294,9420,0,0,1}-{3295,9412,0,0,3}-{3323,9439,0,0,6}-{3295,9460,0,0,3}-{3294,9464,0,0,6}-{3294,9467,0,0,1}-{3311,9454,0,0,6}-{3036,2972,0,0,1}-{3039,2968,0,0,1}-{3046,2982,0,0,6}-{3045,2974,0,0,6}-{3042,2972,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4977\",\r\n      \"loc_data\": \"{3294,3016,0,0,6}-{3287,3016,0,0,3}-{3277,9452,0,0,1}-{3267,9443,0,0,6}-{3267,9431,0,0,6}-{3269,9420,0,0,6}-{3273,9460,0,0,4}-{3277,9454,0,0,6}-{3281,9448,0,0,6}-{3294,9413,0,0,6}-{3306,9423,0,0,1}-{3298,9436,0,0,6}-{3292,9466,0,0,6}-{3296,9462,0,0,3}-{3290,9467,0,0,1}-{3315,9451,0,0,1}-{3316,9454,0,0,3}-{3038,2973,0,0,1}-{3027,2974,0,0,1}-{3023,2977,0,0,1}-{3035,2989,0,0,4}-{3039,2985,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4978\",\r\n      \"loc_data\": \"{3291,3017,0,0,5}-{3275,9463,0,0,1}-{3273,9430,0,0,6}-{3273,9422,0,0,6}-{3267,9428,0,0,1}-{3294,9411,0,0,6}-{3300,9424,0,0,1}-{3289,9412,0,0,3}-{3042,2969,0,0,1}-{3038,2976,0,0,6}-{3041,2983,0,0,6}-{3043,2983,0,0,6}-{3044,2981,0,0,6}-{3043,2979,0,0,1}-{3038,2989,0,0,1}-{3025,2984,0,0,1}-{3026,2988,0,0,1}-{3030,2990,0,0,1}-{3024,2979,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4985\",\r\n      \"loc_data\": \"{3304,3027,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4986\",\r\n      \"loc_data\": \"{3308,3112,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4989\",\r\n      \"loc_data\": \"{3272,3029,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4990\",\r\n      \"loc_data\": \"{3269,3029,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4991\",\r\n      \"loc_data\": \"{3270,3030,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4992\",\r\n      \"loc_data\": \"{3267,3029,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4993\",\r\n      \"loc_data\": \"{3277,3028,0,1,1}-{3279,9441,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4994\",\r\n      \"loc_data\": \"{3285,3027,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4995\",\r\n      \"loc_data\": \"{3279,3024,0,1,3}-{3286,3036,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4996\",\r\n      \"loc_data\": \"{3284,3022,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4997\",\r\n      \"loc_data\": \"{3289,3026,0,1,3}-{3317,9438,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4998\",\r\n      \"loc_data\": \"{3293,3027,0,1,5}-{3286,9419,0,1,3}-{3296,9433,0,1,7}-{3310,9457,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"4999\",\r\n      \"loc_data\": \"{3280,3020,0,1,6}-{3319,9439,0,1,0}-{3299,9467,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5000\",\r\n      \"loc_data\": \"{3285,3022,0,1,6}-{3295,9434,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5001\",\r\n      \"loc_data\": \"{3297,3020,0,1,6}-{3280,9414,0,1,1}-{3279,9416,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5002\",\r\n      \"loc_data\": \"{3295,3028,0,1,3}-{3291,9423,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5020\",\r\n      \"loc_data\": \"{2905,3180,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5021\",\r\n      \"loc_data\": \"{2906,3173,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5022\",\r\n      \"loc_data\": \"{2907,3169,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5029\",\r\n      \"loc_data\": \"{2534,3575,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5030\",\r\n      \"loc_data\": \"{2533,3570,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5031\",\r\n      \"loc_data\": \"{2525,3575,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5032\",\r\n      \"loc_data\": \"{2525,3566,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5033\",\r\n      \"loc_data\": \"{2520,3569,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5049\",\r\n      \"loc_data\": \"{2808,3355,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5062\",\r\n      \"loc_data\": \"{2927,3410,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5065\",\r\n      \"loc_data\": \"{2925,3303,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5070\",\r\n      \"loc_data\": \"{2912,3480,0,0,0}-{2911,3480,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5071\",\r\n      \"loc_data\": \"{2609,2922,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5072\",\r\n      \"loc_data\": \"{2526,2928,0,1,6}-{2510,2876,0,1,3}-{2517,2878,0,1,6}-{2527,2877,0,1,2}-{2532,2938,0,1,4}-{2527,2933,0,1,4}-{2521,2938,0,1,6}-{2507,2914,0,1,0}-{2512,2910,0,1,4}-{2517,2912,0,1,1}-{2517,2921,0,1,6}-{2511,2911,0,1,3}-{2521,2917,0,1,7}-{2522,2929,0,1,4}-{2510,2888,0,1,1}-{2502,2890,0,1,3}-{2520,2882,0,1,7}-{2507,2877,0,1,1}-{2464,2832,0,1,2}-{2500,2893,0,1,4}-{2548,2887,0,1,1}-{2544,2889,0,1,7}-{2536,2877,0,1,3}-{2530,2872,0,1,3}-{2520,2885,0,1,0}-{2517,2870,0,1,4}-{2498,2883,0,1,6}-{2501,2886,0,1,7}-{2508,2916,0,1,4}-{2502,2888,0,1,7}-{2514,2915,0,1,4}-{2520,2908,0,1,6}-{2515,2944,0,1,4}-{2526,2943,0,1,4}-{2525,2893,0,1,4}-{2521,2896,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5073\",\r\n      \"loc_data\": \"{2907,3481,0,1,1}-{2907,3484,0,1,2}-{2908,3491,0,1,4}-{2910,3497,0,1,5}-{2905,3491,0,1,3}-{2904,3491,0,1,6}-{2901,3502,0,1,2}-{2578,2885,0,1,3}-{2582,2892,0,1,2}-{2603,2892,0,1,1}-{2604,2892,0,1,6}-{2611,2917,0,1,6}-{2611,2916,0,1,3}-{2613,2894,0,1,1}-{2614,2892,0,1,6}-{2608,2927,0,1,2}-{2612,2934,0,1,4}-{2609,2930,0,1,0}-{2594,2929,0,1,2}-{2616,2922,0,1,4}-{2593,2911,0,1,1}-{2617,2911,0,1,1}-{2602,2900,0,1,3}-{2601,2886,0,1,6}-{2587,2897,0,1,4}-{2612,2936,0,1,3}-{2606,2929,0,1,5}-{2615,2930,0,1,3}-{2576,2896,0,1,1}-{2588,2879,0,1,6}-{2593,2880,0,1,7}-{2583,2886,0,1,5}-{2609,2897,0,1,3}-{2608,2905,0,1,2}-{2606,2917,0,1,4}-{2604,2918,0,1,4}-{2613,2890,0,1,5}-{2608,2921,0,1,6}-{2604,2886,0,1,6}-{2602,2920,0,1,1}-{2607,2932,0,1,6}-{2578,2885,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5076\",\r\n      \"loc_data\": \"{2310,3581,0,1,2}-{2314,3580,0,1,2}-{2311,3583,0,1,2}-{2304,3588,0,1,6}-{2305,3601,0,1,7}-{2341,3610,0,1,7}-{2344,3606,0,1,3}-{2340,3603,0,1,4}-{2348,3591,0,1,1}-{2356,3595,0,1,6}-{2361,3595,0,1,1}-{2359,3589,0,1,4}-{2346,3585,0,1,6}-{2360,3584,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5077\",\r\n      \"loc_data\": \"{2558,2911,0,0,0}-{2558,2913,0,0,0}-{2556,2913,0,0,0}-{2557,2912,0,0,0}-{2560,2911,0,0,0}-{2559,2910,0,0,0}-{2559,2909,0,0,0}-{2559,2917,0,0,0}-{2558,2914,0,0,0}-{2559,2915,0,0,0}-{2558,2916,0,0,0}-{2559,2932,0,0,0}-{2559,2928,0,0,0}-{2558,2928,0,0,0}-{2558,2931,0,0,0}-{2558,2929,0,0,0}-{2556,2911,0,0,0}-{2557,2911,0,0,0}-{2556,2910,0,0,0}-{2556,2912,0,0,0}-{2557,2919,0,0,0}-{2556,2914,0,0,0}-{2556,2913,0,0,0}-{2556,2918,0,0,0}-{2556,2929,0,0,0}-{2557,2933,0,0,0}-{2556,2932,0,0,0}-{2557,2932,0,0,0}-{2557,2928,0,0,0}-{2559,2934,0,0,0}-{2554,2911,0,0,0}-{2555,2911,0,0,0}-{2554,2912,0,0,0}-{2555,2915,0,0,0}-{2555,2919,0,0,0}-{2554,2919,0,0,0}-{2554,2913,0,0,0}-{2556,2915,0,0,0}-{2555,2931,0,0,0}-{2554,2933,0,0,0}-{2555,2934,0,0,0}-{2555,2933,0,0,0}-{2555,2932,0,0,0}-{2554,2935,0,0,0}-{2554,2934,0,0,0}-{2556,2936,0,0,0}-{2558,2936,0,0,0}-{2554,2936,0,0,0}-{2553,2935,0,0,0}-{2556,2933,0,0,0}-{2558,2938,0,0,0}-{2556,2938,0,0,0}-{2557,2937,0,0,0}-{2557,2917,0,0,0}-{2555,2917,0,0,0}-{2555,2912,0,0,0}-{2555,2935,0,0,0}-{2547,2940,0,0,0}-{2546,2939,0,0,0}-{2548,2939,0,0,0}-{2557,2930,0,0,0}-{2556,2929,0,0,0}-{2546,2941,0,0,0}-{2548,2941,0,0,0}-{2557,2931,0,0,0}-{2556,2935,0,0,0}-{2555,2936,0,0,0}-{2553,2935,0,0,0}-{2559,2930,0,0,0}-{2547,2940,0,0,0}-{2509,2910,0,0,0}-{2507,2910,0,0,0}-{2509,2908,0,0,0}-{2508,2908,0,0,0}-{2508,2909,0,0,0}-{2510,2908,0,0,0}-{2506,2906,0,0,0}-{2508,2906,0,0,0}-{2507,2906,0,0,0}-{2507,2905,0,0,0}-{2509,2905,0,0,0}-{2505,2907,0,0,0}-{2504,2908,0,0,0}-{2467,2879,0,0,0}-{2484,2877,0,0,0}-{2485,2876,0,0,0}-{2511,2908,0,0,0}-{2504,2906,0,0,0}-{2508,2907,0,0,0}-{2509,2906,0,0,0}-{2508,2909,0,0,0}-{2506,2906,0,0,0}-{2510,2907,0,0,0}-{2503,2907,0,0,0}-{2509,2908,0,0,0}-{2507,2908,0,0,0}-{2508,2906,0,0,0}-{2505,2907,0,0,0}-{2507,2905,0,0,0}-{2506,2904,0,0,0}-{2505,2903,0,0,0}-{2508,2902,0,0,0}-{2504,2901,0,0,0}-{2506,2907,0,0,0}-{2507,2906,0,0,0}-{2524,2898,0,0,0}-{2524,2896,0,0,0}-{2525,2897,0,0,0}-{2521,2895,0,0,0}-{2525,2895,0,0,0}-{2507,2903,0,0,0}-{2526,2898,0,0,0}-{2507,2889,0,0,0}-{2506,2903,0,0,0}-{2503,2905,0,0,0}-{2507,2905,0,0,0}-{2511,2908,0,0,0}-{2507,2887,0,0,0}-{2554,2937,0,0,0}-{2558,2938,0,0,0}-{2557,2937,0,0,0}-{2556,2938,0,0,0}-{2553,2937,0,0,0}-{2556,2937,0,0,0}-{2553,2935,0,0,0}-{2556,2935,0,0,0}-{2558,2936,0,0,0}-{2555,2936,0,0,0}-{2552,2936,0,0,0}-{2554,2936,0,0,0}-{2552,2934,0,0,0}-{2553,2934,0,0,0}-{2557,2931,0,0,0}-{2559,2932,0,0,0}-{2558,2932,0,0,0}-{2556,2936,0,0,0}-{2553,2936,0,0,0}-{2554,2935,0,0,0}-{2559,2917,0,0,0}-{2556,2916,0,0,0}-{2555,2917,0,0,0}-{2559,2914,0,0,0}-{2557,2915,0,0,0}-{2561,2914,0,0,0}-{2557,2912,0,0,0}-{2559,2912,0,0,0}-{2558,2913,0,0,0}-{2555,2911,0,0,0}-{2554,2910,0,0,0}-{2559,2916,0,0,0}-{2557,2932,0,0,0}-{2557,2909,0,0,0}-{2559,2913,0,0,0}-{2552,2935,0,0,0}-{2512,2864,0,0,0}-{2560,2909,0,0,0}-{2561,2916,0,0,0}-{2559,2909,0,0,0}-{2557,2914,0,0,0}-{2555,2915,0,0,0}-{2527,2896,0,0,0}-{2524,2895,0,0,0}-{2524,2894,0,0,0}-{2525,2896,0,0,0}-{2524,2896,0,0,0}-{2523,2893,0,0,0}-{2523,2896,0,0,0}-{2523,2897,0,0,0}-{2521,2895,0,0,0}-{2521,2893,0,0,0}-{2526,2895,0,0,0}-{2507,2887,0,0,0}-{2507,2890,0,0,0}-{2506,2886,0,0,0}-{2505,2887,0,0,0}-{2505,2888,0,0,0}-{2503,2889,0,0,0}-{2504,2889,0,0,0}-{2504,2903,0,0,0}-{2505,2907,0,0,0}-{2504,2906,0,0,0}-{2505,2905,0,0,0}-{2506,2907,0,0,0}-{2506,2905,0,0,0}-{2506,2906,0,0,0}-{2507,2903,0,0,0}-{2507,2906,0,0,0}-{2507,2907,0,0,0}-{2505,2893,0,0,0}-{2504,2892,0,0,0}-{2508,2909,0,0,0}-{2502,2891,0,0,0}-{2503,2890,0,0,0}-{2503,2891,0,0,0}-{2508,2891,0,0,0}-{2507,2891,0,0,0}-{2507,2890,0,0,0}-{2503,2889,0,0,0}-{2504,2889,0,0,0}-{2505,2888,0,0,0}-{2506,2909,0,0,0}-{2507,2887,0,0,0}-{2505,2887,0,0,0}-{2506,2887,0,0,0}-{2508,2890,0,0,0}-{2504,2894,0,0,0}-{2502,2891,0,0,0}-{2524,2899,0,0,0}-{2524,2898,0,0,0}-{2526,2899,0,0,0}-{2526,2895,0,0,0}-{2526,2900,0,0,0}-{2524,2900,0,0,0}-{2525,2900,0,0,0}-{2525,2899,0,0,0}-{2524,2893,0,0,0}-{2522,2894,0,0,0}-{2521,2895,0,0,0}-{2523,2895,0,0,0}-{2524,2895,0,0,0}-{2506,2886,0,0,0}-{2521,2893,0,0,0}-{2526,2898,0,0,0}-{2524,2899,0,0,0}-{2456,2832,0,0,0}-{2523,2896,0,0,0}-{2522,2894,0,0,0}-{2524,2901,0,0,0}-{2524,2900,0,0,0}-{2523,2895,0,0,0}-{2526,2901,0,0,0}-{2525,2896,0,0,0}-{2526,2900,0,0,0}-{2523,2893,0,0,0}-{2525,2900,0,0,0}-{2524,2898,0,0,0}-{2525,2894,0,0,0}-{2527,2894,0,0,0}-{2524,2899,0,0,0}-{2508,2904,0,0,0}-{2507,2907,0,0,0}-{2506,2902,0,0,0}-{2506,2907,0,0,0}-{2506,2906,0,0,0}-{2503,2907,0,0,0}-{2503,2905,0,0,0}-{2505,2893,0,0,0}-{2503,2891,0,0,0}-{2506,2891,0,0,0}-{2508,2891,0,0,0}-{2506,2892,0,0,0}-{2506,2909,0,0,0}-{2503,2890,0,0,0}-{2503,2889,0,0,0}-{2504,2889,0,0,0}-{2507,2890,0,0,0}-{2505,2887,0,0,0}-{2505,2888,0,0,0}-{2508,2890,0,0,0}-{2507,2905,0,0,0}-{2456,2832,0,0,0}-{2503,2890,0,0,0}-{2503,2891,0,0,0}-{2504,2892,0,0,0}-{2504,2894,0,0,0}-{2506,2887,0,0,0}-{2507,2887,0,0,0}-{2507,2891,0,0,0}-{2504,2889,0,0,0}-{2508,2891,0,0,0}-{2505,2888,0,0,0}-{2506,2894,0,0,0}-{2506,2902,0,0,0}-{2506,2904,0,0,0}-{2506,2886,0,0,0}-{2507,2903,0,0,0}-{2505,2893,0,0,0}-{2506,2891,0,0,0}-{2503,2889,0,0,0}-{2506,2887,0,0,0}-{2506,2892,0,0,0}-{2507,2891,0,0,0}-{2456,2832,0,0,0}-{2456,2832,0,0,0}-{2507,2887,0,0,0}-{2507,2890,0,0,0}-{2503,2905,0,0,0}-{2505,2906,0,0,0}-{2506,2905,0,0,0}-{2506,2906,0,0,0}-{2507,2905,0,0,0}-{2505,2905,0,0,0}-{2504,2906,0,0,0}-{2503,2907,0,0,0}-{2506,2894,0,0,0}-{2507,2908,0,0,0}-{2507,2907,0,0,0}-{2508,2909,0,0,0}-{2505,2888,0,0,0}-{2505,2907,0,0,0}-{2494,2940,0,0,0}-{2495,2940,0,0,0}-{2496,2939,0,0,0}-{2497,2938,0,0,0}-{2498,2942,0,0,0}-{2499,2943,0,0,0}-{2498,2944,0,0,0}-{2500,2942,0,0,0}-{2503,2940,0,0,0}-{2496,2939,0,0,0}-{2502,2939,0,0,0}-{2500,2944,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5078\",\r\n      \"loc_data\": \"{2556,2911,0,0,0}-{2560,2909,0,0,0}-{2560,2933,0,0,0}-{2558,2910,0,0,0}-{2558,2909,0,0,0}-{2558,2918,0,0,0}-{2559,2930,0,0,0}-{2557,2915,0,0,0}-{2557,2931,0,0,0}-{2558,2935,0,0,0}-{2555,2936,0,0,0}-{2553,2936,0,0,0}-{2553,2933,0,0,0}-{2553,2934,0,0,0}-{2506,2908,0,0,0}-{2507,2908,0,0,0}-{2510,2906,0,0,0}-{2509,2907,0,0,0}-{2508,2907,0,0,0}-{2506,2904,0,0,0}-{2508,2904,0,0,0}-{2504,2906,0,0,0}-{2467,2878,0,0,0}-{2486,2877,0,0,0}-{2506,2909,0,0,0}-{2508,2904,0,0,0}-{2506,2902,0,0,0}-{2504,2903,0,0,0}-{2504,2902,0,0,0}-{2525,2899,0,0,0}-{2523,2897,0,0,0}-{2522,2897,0,0,0}-{2523,2895,0,0,0}-{2521,2893,0,0,0}-{2523,2893,0,0,0}-{2506,2888,0,0,0}-{2509,2889,0,0,0}-{2505,2889,0,0,0}-{2508,2888,0,0,0}-{2506,2887,0,0,0}-{2505,2887,0,0,0}-{2554,2935,0,0,0}-{2552,2935,0,0,0}-{2557,2934,0,0,0}-{2554,2934,0,0,0}-{2558,2933,0,0,0}-{2559,2931,0,0,0}-{2560,2918,0,0,0}-{2558,2916,0,0,0}-{2557,2917,0,0,0}-{2561,2916,0,0,0}-{2555,2915,0,0,0}-{2557,2914,0,0,0}-{2560,2915,0,0,0}-{2554,2912,0,0,0}-{2556,2912,0,0,0}-{2559,2909,0,0,0}-{2558,2909,0,0,0}-{2527,2894,0,0,0}-{2525,2894,0,0,0}-{2523,2895,0,0,0}-{2522,2894,0,0,0}-{2508,2890,0,0,0}-{2508,2891,0,0,0}-{2503,2905,0,0,0}-{2503,2907,0,0,0}-{2506,2902,0,0,0}-{2506,2904,0,0,0}-{2504,2894,0,0,0}-{2506,2894,0,0,0}-{2506,2892,0,0,0}-{2508,2904,0,0,0}-{2506,2891,0,0,0}-{2524,2901,0,0,0}-{2526,2901,0,0,0}-{2524,2894,0,0,0}-{2525,2894,0,0,0}-{2527,2894,0,0,0}-{2523,2896,0,0,0}-{2525,2896,0,0,0}-{2507,2903,0,0,0}-{2507,2905,0,0,0}-{2505,2902,0,0,0}-{2506,2904,0,0,0}-{2505,2907,0,0,0}-{2506,2905,0,0,0}-{2505,2905,0,0,0}-{2504,2906,0,0,0}-{2506,2894,0,0,0}-{2504,2894,0,0,0}-{2507,2891,0,0,0}-{2507,2887,0,0,0}-{2506,2891,0,0,0}-{2506,2907,0,0,0}-{2495,2938,0,0,0}-{2501,2938,0,0,0}-{2501,2940,0,0,0}-{2503,2938,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5079\",\r\n      \"loc_data\": \"{2323,3538,0,1,6}-{2319,3539,0,1,6}-{2321,3545,0,1,5}-{2324,3556,0,1,1}-{2322,3594,0,1,5}-{2323,3594,0,1,1}-{2323,3602,0,1,1}-{2326,3602,0,1,4}-{2324,3622,0,1,1}-{2326,3630,0,1,6}-{2347,3617,0,1,7}-{2341,3615,0,1,3}-{2339,3596,0,1,3}-{2329,3584,0,1,6}-{2337,3589,0,1,5}-{2358,3573,0,1,3}-{2360,3571,0,1,4}-{2371,3560,0,1,3}-{2342,3549,0,1,0}-{2357,3539,0,1,1}-{2357,3537,0,1,4}-{2357,3549,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5080\",\r\n      \"loc_data\": \"{2562,2927,0,1,4}-{2557,2915,0,1,3}-{2557,2921,0,1,1}-{2556,2938,0,1,7}-{2551,2930,0,1,6}-{2558,2912,0,1,4}-{2558,2909,0,1,3}-{2557,2932,0,1,6}-{2556,2935,0,1,1}-{2555,2915,0,1,2}-{2553,2935,0,1,4}-{2559,2918,0,1,4}-{2508,2909,0,1,3}-{2466,2878,0,1,6}-{2467,2881,0,1,7}-{2501,2912,0,1,6}-{2507,2907,0,1,1}-{2505,2902,0,1,2}-{2504,2896,0,1,2}-{2522,2895,0,1,3}-{2526,2897,0,1,1}-{2527,2904,0,1,0}-{2507,2889,0,1,4}-{2464,2832,0,1,2}-{2545,2948,0,1,2}-{2553,2935,0,1,1}-{2556,2931,0,1,5}-{2555,2915,0,1,6}-{2559,2911,0,1,4}-{2559,2918,0,1,3}-{2527,2896,0,1,4}-{2533,2896,0,1,5}-{2508,2890,0,1,4}-{2522,2895,0,1,2}-{2490,2877,0,1,1}-{2496,2897,0,1,1}-{2506,2906,0,1,0}-{2506,2894,0,1,3}-{2506,2902,0,1,6}-{2499,2942,0,1,7}-{2496,2936,0,1,4}-{2498,2939,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5081\",\r\n      \"loc_data\": \"{2318,3501,0,1,5}-{2316,3502,0,1,6}-{2317,3512,0,1,6}-{2315,3512,0,1,5}-{2312,3504,0,1,1}-{2307,3513,0,1,6}-{2311,3517,0,1,0}-{2320,3517,0,1,1}-{2309,3520,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5082\",\r\n      \"loc_data\": \"{2554,2894,0,1,4}-{2538,2897,0,1,6}-{2545,2899,0,1,3}-{2561,2913,0,1,1}-{2559,2908,0,1,6}-{2557,2920,0,1,4}-{2553,2913,0,1,4}-{2544,2910,0,1,2}-{2547,2909,0,1,4}-{2537,2906,0,1,5}-{2525,2914,0,1,3}-{2561,2918,0,1,7}-{2560,2915,0,1,1}-{2555,2920,0,1,6}-{2557,2908,0,1,6}-{2539,2920,0,1,1}-{2528,2915,0,1,4}-{2527,2904,0,1,0}-{2487,2878,0,1,4}-{2518,2901,0,1,5}-{2528,2902,0,1,1}-{2529,2918,0,1,6}-{2566,2881,0,1,7}-{2568,2917,0,1,6}-{2568,2918,0,1,4}-{2557,2915,0,1,7}-{2546,2912,0,1,3}-{2542,2911,0,1,5}-{2548,2910,0,1,6}-{2554,2907,0,1,1}-{2568,2885,0,1,4}-{2548,2896,0,1,5}-{2545,2895,0,1,6}-{2544,2910,0,1,7}-{2536,2895,0,1,3}-{2538,2902,0,1,6}-{2523,2910,0,1,3}-{2533,2910,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5085\",\r\n      \"loc_data\": \"{2328,3526,0,0,0}-{2313,3528,0,0,0}-{2312,3542,0,0,0}-{2312,3544,0,0,0}-{2323,3543,0,0,0}-{2325,3544,0,0,0}-{2328,3539,0,0,0}-{2311,3564,0,0,0}-{2332,3548,0,0,0}-{2335,3545,0,0,0}-{2320,3580,0,0,0}-{2325,3582,0,0,0}-{2330,3583,0,0,0}-{2310,3585,0,0,0}-{2324,3584,0,0,0}-{2312,3587,0,0,0}-{2316,3599,0,0,0}-{2324,3599,0,0,0}-{2323,3600,0,0,0}-{2315,3602,0,0,0}-{2309,3605,0,0,0}-{2316,3608,0,0,0}-{2315,3608,0,0,0}-{2325,3614,0,0,0}-{2313,3620,0,0,0}-{2333,3612,0,0,0}-{2331,3608,0,0,0}-{2331,3604,0,0,0}-{2346,3591,0,0,0}-{2355,3573,0,0,0}-{2369,3573,0,0,0}-{2359,3571,0,0,0}-{2352,3567,0,0,0}-{2372,3561,0,0,0}-{2361,3554,0,0,0}-{2329,3561,0,0,0}-{2341,3560,0,0,0}-{2344,3543,0,0,0}-{2342,3539,0,0,0}-{2349,3547,0,0,0}-{2352,3545,0,0,0}-{2334,3522,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5086\",\r\n      \"loc_data\": \"{2321,3593,0,1,1}-{2322,3597,0,1,0}-{2309,3603,0,1,5}-{2306,3607,0,1,0}-{2305,3619,0,1,1}-{2309,3618,0,1,6}-{2322,3627,0,1,3}-{2324,3614,0,1,1}-{2323,3614,0,1,1}-{2323,3629,0,1,6}-{2329,3633,0,1,4}-{2328,3634,0,1,3}-{2311,3642,0,1,1}-{2307,3644,0,1,6}-{2318,3645,0,1,1}-{2323,3645,0,1,3}-{2333,3629,0,1,3}-{2340,3641,0,1,7}-{2343,3640,0,1,6}-{2335,3633,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5088\",\r\n      \"loc_data\": \"{2586,2883,0,1,6}-{2589,2909,0,1,1}-{2574,2915,0,1,3}-{2572,2928,0,1,3}-{2567,2932,0,1,6}-{2568,2933,0,1,0}-{2538,2889,0,1,3}-{2538,2902,0,1,4}-{2536,2872,0,1,4}-{2536,2872,0,1,6}-{2536,2872,0,1,4}-{2536,2872,0,1,6}-{2536,2872,0,1,3}-{2585,2884,0,1,5}-{2577,2890,0,1,0}-{2578,2918,0,1,1}-{2536,2864,0,1,7}-{2568,2934,0,1,1}-{2574,2930,0,1,1}-{2576,2928,0,1,4}-{2512,2864,0,1,6}-{2512,2864,0,1,1}-{2580,2889,0,1,1}-{2580,2886,0,1,1}-{2580,2886,0,1,0}-{2572,2900,0,1,4}-{2572,2896,0,1,3}-{2568,2905,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5089\",\r\n      \"loc_data\": \"{2315,3523,0,1,1}-{2315,3530,0,1,6}-{2308,3536,0,1,4}-{2307,3538,0,1,1}-{2325,3551,0,1,3}-{2316,3559,0,1,1}-{2312,3559,0,1,1}-{2310,3572,0,1,3}-{2334,3552,0,1,4}-{2308,3582,0,1,2}-{2363,3579,0,1,1}-{2363,3577,0,1,1}-{2350,3568,0,1,1}-{2352,3561,0,1,1}-{2346,3547,0,1,7}-{2347,3546,0,1,3}-{2363,3541,0,1,1}-{2362,3536,0,1,2}-{2350,3526,0,1,7}-{2350,3521,0,1,4}-{2351,3562,0,1,0}-{2310,3574,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5093\",\r\n      \"loc_data\": \"{2375,3607,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5098\",\r\n      \"loc_data\": \"{2372,3592,0,1,5}-{2370,3587,0,1,3}-{2371,3586,0,1,6}-{2376,3582,0,1,6}-{2378,3582,0,1,1}-{2383,3582,0,1,5}-{2393,3590,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5099\",\r\n      \"loc_data\": \"{2365,3597,0,1,5}-{2369,3588,0,1,4}-{2366,3577,0,1,4}-{2372,3573,0,1,1}-{2377,3584,0,1,1}-{2385,3590,0,1,3}-{2388,3598,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5100\",\r\n      \"loc_data\": \"{2369,3579,0,1,5}-{2373,3575,0,1,1}-{2390,3588,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5103\",\r\n      \"loc_data\": \"{2733,3777,0,1,6}-{2731,3784,0,1,4}-{2735,3790,0,1,6}-{2741,3783,0,1,2}-{2738,3790,0,1,1}-{2731,3783,0,1,1}-{2724,3791,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5104\",\r\n      \"loc_data\": \"{2551,2890,0,0,1}-{2541,2899,0,0,0}-{2564,2896,0,0,4}-{2571,2882,0,1,1}-{2552,2910,0,0,0}-{2573,2900,0,1,3}-{2558,2881,0,0,0}-{2543,2899,0,0,0}-{2545,2925,0,0,0}-{2549,2905,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5105\",\r\n      \"loc_data\": \"{2780,3017,0,0,0}-{2766,3013,0,0,0}-{2785,3006,0,0,0}-{2775,2996,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5109\",\r\n      \"loc_data\": \"{3443,2902,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5110\",\r\n      \"loc_data\": \"{2566,3084,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5111\",\r\n      \"loc_data\": \"{2569,3083,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5113\",\r\n      \"loc_data\": \"{2525,2916,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5114\",\r\n      \"loc_data\": \"{3411,3076,0,1,6}-{3415,3075,0,1,1}-{3406,3093,0,1,3}-{3413,3078,0,1,1}-{3403,3093,0,1,1}-{3412,3081,0,1,3}-{3405,3099,0,1,3}-{3405,3102,0,1,0}-{3406,3098,0,1,4}-{3401,3099,0,1,7}-{3405,3093,0,1,4}-{3404,3085,0,1,5}-{3402,3094,0,1,6}-{3399,3096,0,1,1}-{3405,3088,0,1,3}-{3411,3088,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5115\",\r\n      \"loc_data\": \"{2451,3219,0,1,3}-{2448,3221,0,1,3}-{2476,3236,0,1,3}-{2450,3226,0,1,6}-{2474,3239,0,1,0}-{2470,3240,0,1,2}-{2468,3243,0,1,0}-{2455,3219,0,1,6}-{2449,3225,0,1,7}-{2445,3226,0,1,2}-{2467,3241,0,1,1}-{2452,3221,0,1,3}-{2473,3235,0,1,7}-{2472,3241,0,1,4}-{2475,3237,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5116\",\r\n      \"loc_data\": \"{3291,3675,0,1,6}-{3293,3678,0,1,1}-{3302,3671,0,1,0}-{3299,3666,0,1,5}-{3319,3662,0,1,2}-{3309,3661,0,1,5}-{3321,3661,0,1,1}-{3298,3672,0,1,0}-{3316,3657,0,1,4}-{3302,3667,0,1,1}-{3302,3666,0,1,3}-{3315,3663,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5117\",\r\n      \"loc_data\": \"{3537,3449,0,1,2}-{3535,3447,0,1,6}-{3539,3447,0,1,2}-{3533,3446,0,1,1}-{3549,3439,0,1,4}-{3547,3439,0,1,7}-{3549,3439,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5120\",\r\n      \"loc_data\": \"{2326,3488,0,1,0}-{2325,3483,0,1,0}-{2315,3482,0,1,0}-{2336,3491,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5125\",\r\n      \"loc_data\": \"{2316,3501,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5138\",\r\n      \"loc_data\": \"{2607,3264,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5139\",\r\n      \"loc_data\": \"{2607,3260,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5146\",\r\n      \"loc_data\": \"{3205,3263,0,0,0}-{2925,3324,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5147\",\r\n      \"loc_data\": \"{3207, 3270, 0, 1, 0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5148\",\r\n      \"loc_data\": \"{3229,3347,0,1,1}-{3238,3347,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5149\",\r\n      \"loc_data\": \"{3233,3350,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5156\",\r\n      \"loc_data\": \"{3203,3262,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5157\",\r\n      \"loc_data\": \"{3205,3262,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5160\",\r\n      \"loc_data\": \"{3205,3270,0,1,4}-{3249,3345,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5161\",\r\n      \"loc_data\": \"{3210,3273,0,1,6}-{3233,3340,0,1,5}-{3241,3344,0,1,3}-{2926,3326,0,1,6}-{2924,3324,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5164\",\r\n      \"loc_data\": \"{2410,4456,0,1,1}-{2415,4429,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5168\",\r\n      \"loc_data\": \"{3207,3260,0,1,3}-{3197,3268,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5171\",\r\n      \"loc_data\": \"{2860,10054,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5173\",\r\n      \"loc_data\": \"{2769,3611,0,1,7}-{2768,3607,0,1,6}-{2764,3612,0,1,2}-{2763,3608,0,1,6}-{2762,3611,0,1,4}-{2765,3606,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5199\",\r\n      \"loc_data\": \"{3093,3357,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5200\",\r\n      \"loc_data\": \"{3099,3369,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5202\",\r\n      \"loc_data\": \"{3621,3528,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5291\",\r\n      \"loc_data\": \"{3300,2792,0,0,6}-{3282,2807,0,0,6}-{3285,2811,0,0,1}-{3283,2772,0,1,5}-{3281,2771,0,1,7}-{3283,2776,0,1,6}-{3278,2770,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5298\",\r\n      \"loc_data\": \"{2499,3286,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5300\",\r\n      \"loc_data\": \"{2500,3283,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5303\",\r\n      \"loc_data\": \"{2506,3284,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5310\",\r\n      \"loc_data\": \"{3212,3682,0,1,0}-{3228,3680,0,1,6}-{3230,3683,0,1,1}-{3234,3692,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5311\",\r\n      \"loc_data\": \"{3231,3673,0,1,0}-{3225,3677,0,1,3}-{3229,3689,0,1,4}-{3239,3681,0,1,4}-{3236,3694,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5312\",\r\n      \"loc_data\": \"{3210,3667,0,1,4}-{3217,3688,0,1,4}-{3241,3694,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5313\",\r\n      \"loc_data\": \"{3224,3686,0,1,5}-{3243,3688,0,1,1}-{3242,3687,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5314\",\r\n      \"loc_data\": \"{2588,9491,0,1,3}-{2585,9492,0,1,3}-{2586,9491,0,1,5}-{2591,9492,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5316\",\r\n      \"loc_data\": \"{2497,3292,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5318\",\r\n      \"loc_data\": \"{2511,3287,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5323\",\r\n      \"loc_data\": \"{3221,3693,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5324\",\r\n      \"loc_data\": \"{3221,3682,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5325\",\r\n      \"loc_data\": \"{3125,3627,0,1,6}-{3232,3698,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5326\",\r\n      \"loc_data\": \"{3229,3683,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5327\",\r\n      \"loc_data\": \"{3224,3671,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5332\",\r\n      \"loc_data\": \"{3102,3571,0,1,3}-{2855,9571,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5333\",\r\n      \"loc_data\": \"{3100,3560,0,1,4}-{3108,3545,0,1,2}-{2860,9571,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5334\",\r\n      \"loc_data\": \"{3108,3533,0,1,1}-{2860,9569,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5337\",\r\n      \"loc_data\": \"{3100,3563,0,1,1}-{2832,9656,0,1,6}-{2846,3250,0,1,7}-{2834,3233,0,1,5}-{3003,10347,0,1,7}-{3003,10350,0,1,6}-{3003,10357,0,1,4}-{2996,10343,0,1,3}-{2993,10346,0,1,4}-{2995,3938,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5338\",\r\n      \"loc_data\": \"{3119,3565,0,1,1}-{2838,9648,0,1,5}-{2831,9654,0,1,1}-{2843,3248,0,1,1}-{2840,3240,0,1,3}-{2994,10349,0,1,5}-{2998,10350,0,1,0}-{3003,10350,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5339\",\r\n      \"loc_data\": \"{3095,3554,0,1,4}-{2831,9655,0,1,7}-{2844,3239,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5340\",\r\n      \"loc_data\": \"{3112,3573,0,1,6}-{2833,9655,0,1,6}-{2848,3246,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5341\",\r\n      \"loc_data\": \"{2840,9633,0,1,1}-{2844,9634,0,1,6}-{2842,9637,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5345\",\r\n      \"loc_data\": \"{2501,3294,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5349\",\r\n      \"loc_data\": \"{3099,3354,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5350\",\r\n      \"loc_data\": \"{3116,3367,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5351\",\r\n      \"loc_data\": \"{3110,3358,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5352\",\r\n      \"loc_data\": \"{3121,3359,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5355\",\r\n      \"loc_data\": \"{2873,2950,0,0,0}-{2876,2951,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5356\",\r\n      \"loc_data\": \"{2877,2958,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5357\",\r\n      \"loc_data\": \"{2876,2958,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5358\",\r\n      \"loc_data\": \"{2874,2954,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5361\",\r\n      \"loc_data\": \"{3176,5543,0,1,3}-{3191,5542,0,1,4}-{1757,5358,0,1,5}-{1760,5357,0,1,5}-{1755,5352,0,1,5}-{1751,5342,0,1,3}-{1745,5342,0,1,6}-{1739,5342,0,1,3}-{1737,5344,0,1,7}-{1739,5347,0,1,6}-{1740,5350,0,1,5}-{1739,5355,0,1,3}-{1747,5363,0,1,4}-{1749,5363,0,1,4}-{1743,5360,0,1,3}-{1739,5356,0,1,0}-{3175,5543,0,1,2}-{3178,5541,0,1,2}-{3187,5542,0,1,3}-{3192,5545,0,1,2}-{3192,5542,0,1,3}-{3179,5549,0,1,6}-{2386,9745,0,1,1}-{2385,9748,0,1,1}-{2389,9746,0,1,1}-{2390,9751,0,1,1}-{2306,9760,0,1,1}-{2395,9757,0,1,1}-{2397,9756,0,1,1}-{2399,9758,0,1,1}-{2385,9762,0,1,1}-{2382,9759,0,1,1}-{2385,9757,0,1,1}-{2388,9759,0,1,1}-{2393,9768,0,1,1}-{2394,9741,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5362\",\r\n      \"loc_data\": \"{1774,5361,0,1,3}-{1776,5350,0,1,3}-{1772,5342,0,1,1}-{1772,5336,0,1,4}-{1778,5328,0,1,7}-{1761,5334,0,1,4}-{1754,5337,0,1,7}-{1749,5331,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5363\",\r\n      \"loc_data\": \"{1781,5340,1,1,5}-{1782,5356,1,1,1}-{1767,5343,1,1,6}-{1761,5338,1,1,3}-{1767,5332,1,1,6}-{1757,5326,1,1,7}-{1784,5329,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5364\",\r\n      \"loc_data\": \"{1765,5344,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5365\",\r\n      \"loc_data\": \"{2354,5191,0,1,4}-{2351,5191,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5366\",\r\n      \"loc_data\": \"{2357,5196,0,1,2}-{2356,5188,0,1,4}-{2343,5195,0,1,6}-{2335,5202,0,1,3}-{2323,5211,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5367\",\r\n      \"loc_data\": \"{2312,5189,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5369\",\r\n      \"loc_data\": \"{2345,5195,0,1,3}-{2264,5136,0,1,1}-{2323,5227,0,1,5}-{2319,5223,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5370\",\r\n      \"loc_data\": \"{2347,5195,0,1,3}-{2323,5225,0,1,3}-{2319,5227,0,1,0}-{2323,5227,0,1,3}-{2318,5227,0,1,0}-{2326,5227,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5371\",\r\n      \"loc_data\": \"{2356,5204,0,1,1}-{2324,5223,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5375\",\r\n      \"loc_data\": \"{2029,5236,0,1,6}-{2031,5235,0,1,1}-{2029,5230,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5376\",\r\n      \"loc_data\": \"{2031,5233,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5377\",\r\n      \"loc_data\": \"{2004,5189,0,1,3}-{2002,5207,0,1,3}-{2009,5199,0,1,5}-{2004,5203,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5378\",\r\n      \"loc_data\": \"{1993,5192,0,1,5}-{1999,5190,0,1,6}-{1989,5187,0,1,4}-{2008,5205,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5379\",\r\n      \"loc_data\": \"{1952,5192,0,1,5}-{1995,5240,0,1,5}-{1944,5152,0,1,2}-{2010,5186,0,1,4}-{2023,5190,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5380\",\r\n      \"loc_data\": \"{1952,5192,0,1,2}-{2028,5192,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5383\",\r\n      \"loc_data\": \"{3194,4569,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5384\",\r\n      \"loc_data\": \"{3165,4598,0,0,0}-{3167,4577,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5385\",\r\n      \"loc_data\": \"{3191,4595,1,1,1}-{3191,4601,1,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5386\",\r\n      \"loc_data\": \"{3143,4595,0,1,1}-{3145,4598,0,1,3}-{3182,4577,0,1,1}-{3187,4578,0,1,0}-{3158,4589,1,1,7}-{3194,4599,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5387\",\r\n      \"loc_data\": \"{3158,4584,0,1,4}-{3159,4577,0,1,6}-{3169,4587,0,1,1}-{3152,4569,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5388\",\r\n      \"loc_data\": \"{3156,4567,2,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5389\",\r\n      \"loc_data\": \"{3157,4568,0,1,6}-{3185,4562,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5390\",\r\n      \"loc_data\": \"{3182,4562,0,1,3}-{3185,4560,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5391\",\r\n      \"loc_data\": \"{3158,4552,0,1,4}-{3163,4569,0,1,1}-{3177,4549,0,1,3}-{3184,4550,0,1,3}-{3158,4560,1,1,4}-{3174,4566,1,1,1}-{3195,4577,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5393\",\r\n      \"loc_data\": \"{3146,4596,0,1,1}-{3163,4598,0,1,3}-{3155,4591,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5394\",\r\n      \"loc_data\": \"{3167,4589,0,1,6}-{3172,4598,0,1,1}-{2677,9688,0,1,1}-{2676,9679,0,1,4}-{2669,9681,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5395\",\r\n      \"loc_data\": \"{3141,4598,0,1,3}-{3170,4592,0,1,6}-{3144,4589,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5396\",\r\n      \"loc_data\": \"{3145,4583,1,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5397\",\r\n      \"loc_data\": \"{3155,4583,0,1,3}-{3176,4576,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5398\",\r\n      \"loc_data\": \"{3145,4574,1,1,3}-{3182,4586,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5399\",\r\n      \"loc_data\": \"{3140,4557,2,1,4}-{3188,4578,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5400\",\r\n      \"loc_data\": \"{3175,4579,1,1,6}-{3142,4560,2,1,3}-{3159,4569,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5401\",\r\n      \"loc_data\": \"{3151,4573,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5402\",\r\n      \"loc_data\": \"{3154,4559,0,1,6}-{3171,4571,1,1,6}-{3179,4586,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5403\",\r\n      \"loc_data\": \"{3141,4557,0,1,4}-{3182,4577,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5404\",\r\n      \"loc_data\": \"{3143,4555,0,1,4}-{3144,4549,1,1,4}-{3190,4587,1,1,1}-{3186,4576,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5405\",\r\n      \"loc_data\": \"{3163,4559,0,1,4}-{3146,4565,1,1,3}-{3195,4582,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5406\",\r\n      \"loc_data\": \"{3159,4603,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5407\",\r\n      \"loc_data\": \"{3141,4547,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5408\",\r\n      \"loc_data\": \"{3170,4559,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5409\",\r\n      \"loc_data\": \"{3173,4550,0,1,6}-{3190,4551,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5410\",\r\n      \"loc_data\": \"{3190,4561,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5413\",\r\n      \"loc_data\": \"{3187,5450,0,1,6}-{3177,5453,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5414\",\r\n      \"loc_data\": \"{3176,5454,0,1,3}-{3182,5447,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5423\",\r\n      \"loc_data\": \"{3212,3263,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5439\",\r\n      \"loc_data\": \"{3017,3277,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5445\",\r\n      \"loc_data\": \"{2596,3269,0,1,4}-{2571,3907,0,1,7}-{2571,3907,0,1,3}-{2569,3908,0,1,3}-{2571,3908,0,1,3}-{2572,3906,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5478\",\r\n      \"loc_data\": \"{2407,3803,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5479\",\r\n      \"loc_data\": \"{2407,3803,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5480\",\r\n      \"loc_data\": \"{2406,3803,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5483\",\r\n      \"loc_data\": \"{2395,3796,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5484\",\r\n      \"loc_data\": \"{2418,3816,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5485\",\r\n      \"loc_data\": \"{2393,3796,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5486\",\r\n      \"loc_data\": \"{2396,3805,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5487\",\r\n      \"loc_data\": \"{2417,3815,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5488\",\r\n      \"loc_data\": \"{2416,3800,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5489\",\r\n      \"loc_data\": \"{2372,3801,2,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5490\",\r\n      \"loc_data\": \"{2364,3800,2,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5493\",\r\n      \"loc_data\": \"{2391,3800,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5494\",\r\n      \"loc_data\": \"{2416,3808,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5495\",\r\n      \"loc_data\": \"{2406,3813,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5496\",\r\n      \"loc_data\": \"{2402,3800,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5499\",\r\n      \"loc_data\": \"{2403,3807,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5500\",\r\n      \"loc_data\": \"{2395,3812,0,2,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5501\",\r\n      \"loc_data\": \"{2408,3816,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5502\",\r\n      \"loc_data\": \"{2409,3814,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5504\",\r\n      \"loc_data\": \"{2336,3799,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5505\",\r\n      \"loc_data\": \"{2334,3800,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5506\",\r\n      \"loc_data\": \"{2334,3798,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5507\",\r\n      \"loc_data\": \"{2311,3781,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5508\",\r\n      \"loc_data\": \"{2646,3710,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5509\",\r\n      \"loc_data\": \"{2336,3808,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5510\",\r\n      \"loc_data\": \"{2333,3804,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5511\",\r\n      \"loc_data\": \"{2327,3794,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5512\",\r\n      \"loc_data\": \"{2319,3795,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5513\",\r\n      \"loc_data\": \"{2352,3797,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5514\",\r\n      \"loc_data\": \"{2333,3795,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5515\",\r\n      \"loc_data\": \"{2330,3799,1,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5516\",\r\n      \"loc_data\": \"{2329,3808,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5518\",\r\n      \"loc_data\": \"{2338,3798,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5519\",\r\n      \"loc_data\": \"{2338,3800,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5520\",\r\n      \"loc_data\": \"{2338,3810,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5529\",\r\n      \"loc_data\": \"{2323,3790,0,1,1}-{2323,3795,0,1,0}-{2322,3795,0,1,0}-{2317,3794,0,1,6}-{2317,3790,0,1,3}-{2321,3792,0,1,6}-{2327,3796,0,1,7}-{2319,3791,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5531\",\r\n      \"loc_data\": \"{3323,3138,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5532\",\r\n      \"loc_data\": \"{3320,3138,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5533\",\r\n      \"loc_data\": \"{2904,5460,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5534\",\r\n      \"loc_data\": \"{2900,5455,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5535\",\r\n      \"loc_data\": \"{2903,5449,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5536\",\r\n      \"loc_data\": \"{2905,5451,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5537\",\r\n      \"loc_data\": \"{2905,5457,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5538\",\r\n      \"loc_data\": \"{2912,5455,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5539\",\r\n      \"loc_data\": \"{2922,5464,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5540\",\r\n      \"loc_data\": \"{2924,5462,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5541\",\r\n      \"loc_data\": \"{2924,5458,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5542\",\r\n      \"loc_data\": \"{2930,5458,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5544\",\r\n      \"loc_data\": \"{2931,5469,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5545\",\r\n      \"loc_data\": \"{2925,5471,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5546\",\r\n      \"loc_data\": \"{2931,5475,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5547\",\r\n      \"loc_data\": \"{2907,5486,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5548\",\r\n      \"loc_data\": \"{2907,5492,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5549\",\r\n      \"loc_data\": \"{2910,5491,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5550\",\r\n      \"loc_data\": \"{2915,5483,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5551\",\r\n      \"loc_data\": \"{2922,5486,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5552\",\r\n      \"loc_data\": \"{2921,5493,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5553\",\r\n      \"loc_data\": \"{2899,5468,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5554\",\r\n      \"loc_data\": \"{2894,5470,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5555\",\r\n      \"loc_data\": \"{2898,5478,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5556\",\r\n      \"loc_data\": \"{2896,5482,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5557\",\r\n      \"loc_data\": \"{2894,5483,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5558\",\r\n      \"loc_data\": \"{2894,5485,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5562\",\r\n      \"loc_data\": \"{2913,5462,0,0,0}-{2900,5458,0,0,0}-{2908,5455,0,0,0}-{2910,5455,0,0,0}-{2913,5452,0,0,0}-{2914,5453,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5563\",\r\n      \"loc_data\": \"{2911,5474,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5574\",\r\n      \"loc_data\": \"{2836,3066,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5576\",\r\n      \"loc_data\": \"{3072,3336,0,0,0}-{3063,3348,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5608\",\r\n      \"loc_data\": \"{3786,2827,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5609\",\r\n      \"loc_data\": \"{3786,2824,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5610\",\r\n      \"loc_data\": \"{3785,2827,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5611\",\r\n      \"loc_data\": \"{3784,2824,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5614\",\r\n      \"loc_data\": \"{3779,2826,0,0,0}-{3789,2817,0,0,0}-{3794,2821,0,0,0}-{3808,2823,0,0,0}-{3812,2861,0,0,0}-{3813,2822,0,0,0}-{3818,2862,0,0,0}-{3819,2870,0,0,0}-{3821,2824,0,0,0}-{3831,2828,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5627\",\r\n      \"loc_data\": \"{3808,2845,0,0,0}-{3812,2846,0,0,0}-{3815,2844,0,0,3}-{3819,2839,0,0,0}-{3819,2851,0,0,0}-{3819,2838,1,0,0}-{3823,2836,1,0,0}-{3823,2846,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5628\",\r\n      \"loc_data\": \"{3810,2843,0,0,0}-{3813,2844,0,0,0}-{3821,2837,0,0,0}-{3820,2840,1,0,0}-{3820,2851,1,0,0}-{3823,2839,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5629\",\r\n      \"loc_data\": \"{3811,2826,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5631\",\r\n      \"loc_data\": \"{3827,2833,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5633\",\r\n      \"loc_data\": \"{3815,2859,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5634\",\r\n      \"loc_data\": \"{3793,2851,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5635\",\r\n      \"loc_data\": \"{3784,2843,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5637\",\r\n      \"loc_data\": \"{3803,2843,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5638\",\r\n      \"loc_data\": \"{3810,2833,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5639\",\r\n      \"loc_data\": \"{3824,2857,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5640\",\r\n      \"loc_data\": \"{3817,2824,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5641\",\r\n      \"loc_data\": \"{3799,2855,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5642\",\r\n      \"loc_data\": \"{3796,2858,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5644\",\r\n      \"loc_data\": \"{3795,2845,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5646\",\r\n      \"loc_data\": \"{3792,2830,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5647\",\r\n      \"loc_data\": \"{3803,2872,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5650\",\r\n      \"loc_data\": \"{3800,2835,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5656\",\r\n      \"loc_data\": \"{3794,2873,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5658\",\r\n      \"loc_data\": \"{3804,2873,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5659\",\r\n      \"loc_data\": \"{3805,2874,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5661\",\r\n      \"loc_data\": \"{3794,2874,3,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5665\",\r\n      \"loc_data\": \"{3803,2848,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5668\",\r\n      \"loc_data\": \"{3787,2824,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5669\",\r\n      \"loc_data\": \"{3787,2827,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5670\",\r\n      \"loc_data\": \"{3786,2827,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5671\",\r\n      \"loc_data\": \"{3788,2826,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5672\",\r\n      \"loc_data\": \"{3788,2825,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5750\",\r\n      \"loc_data\": \"{3290,5544,0,1,4}-{3270,5552,0,1,1}-{3274,5547,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5752\",\r\n      \"loc_data\": \"{2711,5331,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5753\",\r\n      \"loc_data\": \"{2697,5332,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5755\",\r\n      \"loc_data\": \"{2723,5336,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5756\",\r\n      \"loc_data\": \"{2702,5352,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5757\",\r\n      \"loc_data\": \"{2743,5358,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5758\",\r\n      \"loc_data\": \"{2693,5332,0,0,0}-{2729,5329,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5761\",\r\n      \"loc_data\": \"{2725,5349,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5764\",\r\n      \"loc_data\": \"{2712,5342,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5765\",\r\n      \"loc_data\": \"{2694,5333,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5766\",\r\n      \"loc_data\": \"{2701,5352,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5767\",\r\n      \"loc_data\": \"{2695,5331,0,0,0}-{2719,5331,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5770\",\r\n      \"loc_data\": \"{2717,5359,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5771\",\r\n      \"loc_data\": \"{2722,5333,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5772\",\r\n      \"loc_data\": \"{2716,5359,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5776\",\r\n      \"loc_data\": \"{2699,5349,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5777\",\r\n      \"loc_data\": \"{2699,5348,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5780\",\r\n      \"loc_data\": \"{2722,5313,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5781\",\r\n      \"loc_data\": \"{2723,5321,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5782\",\r\n      \"loc_data\": \"{2742,5339,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5783\",\r\n      \"loc_data\": \"{2701,5348,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5785\",\r\n      \"loc_data\": \"{2726,5372,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5786\",\r\n      \"loc_data\": \"{2712,5369,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5787\",\r\n      \"loc_data\": \"{2704,5366,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5789\",\r\n      \"loc_data\": \"{2718,5313,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5790\",\r\n      \"loc_data\": \"{2715,5313,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5794\",\r\n      \"loc_data\": \"{2712,5321,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5796\",\r\n      \"loc_data\": \"{2711,5314,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5798\",\r\n      \"loc_data\": \"{2717,5315,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5799\",\r\n      \"loc_data\": \"{2730,5365,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5800\",\r\n      \"loc_data\": \"{2719,5335,0,1,1}-{2747,5373,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5801\",\r\n      \"loc_data\": \"{2730,5333,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5802\",\r\n      \"loc_data\": \"{2744,5353,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5803\",\r\n      \"loc_data\": \"{2741,5344,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5804\",\r\n      \"loc_data\": \"{2744,5333,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5805\",\r\n      \"loc_data\": \"{2743,5345,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5806\",\r\n      \"loc_data\": \"{2746,5333,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5807\",\r\n      \"loc_data\": \"{2741,5334,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5809\",\r\n      \"loc_data\": \"{2741,5341,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5811\",\r\n      \"loc_data\": \"{2744,5342,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5813\",\r\n      \"loc_data\": \"{2742,5338,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5815\",\r\n      \"loc_data\": \"{2743,5341,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5817\",\r\n      \"loc_data\": \"{2744,5338,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5819\",\r\n      \"loc_data\": \"{2744,5336,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5821\",\r\n      \"loc_data\": \"{2740,5334,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5827\",\r\n      \"loc_data\": \"{2699,5329,0,0,0}-{2699,5335,0,0,0}-{2747,5342,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5828\",\r\n      \"loc_data\": \"{2697,5316,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5832\",\r\n      \"loc_data\": \"{2730,5366,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5833\",\r\n      \"loc_data\": \"{3267,3334,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5834\",\r\n      \"loc_data\": \"{3208,3496,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5837\",\r\n      \"loc_data\": \"{3285,3468,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5839\",\r\n      \"loc_data\": \"{3183,5205,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5840\",\r\n      \"loc_data\": \"{3159,5211,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5841\",\r\n      \"loc_data\": \"{3176,5215,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5842\",\r\n      \"loc_data\": \"{3115,3475,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5843\",\r\n      \"loc_data\": \"{3117,3474,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5844\",\r\n      \"loc_data\": \"{3113,3473,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5845\",\r\n      \"loc_data\": \"{3115,3475,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5846\",\r\n      \"loc_data\": \"{3110,3471,0,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5847\",\r\n      \"loc_data\": \"{3115,3476,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5848\",\r\n      \"loc_data\": \"{3116,3475,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5849\",\r\n      \"loc_data\": \"{3112,3473,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5850\",\r\n      \"loc_data\": \"{3115,3476,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5851\",\r\n      \"loc_data\": \"{3119,3474,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5869\",\r\n      \"loc_data\": \"{2744,5344,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5887\",\r\n      \"loc_data\": \"{2737,5351,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5909\",\r\n      \"loc_data\": \"{3224,3402,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5910\",\r\n      \"loc_data\": \"{3230,3401,0,0,0}-{3284,3491,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5916\",\r\n      \"loc_data\": \"{3250,3429,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5917\",\r\n      \"loc_data\": \"{3200,3399,0,1,4}-{3262,3410,0,1,3}-{3176,3431,0,1,5}-{3261,3424,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5918\",\r\n      \"loc_data\": \"{3233,3394,0,0,7}-{3271,3399,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5919\",\r\n      \"loc_data\": \"{3205,3379,0,1,6}-{3211,3381,0,1,3}-{3172,3430,0,1,2}-{3175,3416,1,1,6}-{3175,3404,1,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5920\",\r\n      \"loc_data\": \"{3211,3378,0,1,0}-{3272,3429,0,1,1}-{3274,3427,0,1,3}-{3220,3461,0,1,3}-{3221,3464,0,1,4}-{3213,3466,0,1,1}-{3214,3461,0,1,5}-{3215,3464,0,1,0}-{3208,3467,0,1,6}-{3209,3460,0,1,4}-{3205,3463,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5923\",\r\n      \"loc_data\": \"{3224,3394,1,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5924\",\r\n      \"loc_data\": \"{3227,3396,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5925\",\r\n      \"loc_data\": \"{3220,3433,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5926\",\r\n      \"loc_data\": \"{3229,3392,0,1,6}-{3184,3386,0,1,4}-{3247,9775,0,1,3}-{3185,3391,0,1,5}-{3240,9770,0,1,4}-{3235,9766,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5927\",\r\n      \"loc_data\": \"{3250,9776,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5928\",\r\n      \"loc_data\": \"{3249,9772,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5929\",\r\n      \"loc_data\": \"{3245,9772,0,1,7}-{3239,9766,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5930\",\r\n      \"loc_data\": \"{3257,3454,2,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5932\",\r\n      \"loc_data\": \"{3255,3442,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5933\",\r\n      \"loc_data\": \"{3254,3443,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5934\",\r\n      \"loc_data\": \"{3259,3443,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5935\",\r\n      \"loc_data\": \"{3260,3442,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5938\",\r\n      \"loc_data\": \"{3253,3454,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5939\",\r\n      \"loc_data\": \"{3253,3453,1,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5940\",\r\n      \"loc_data\": \"{3262,3442,1,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5941\",\r\n      \"loc_data\": \"{3260,3447,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5943\",\r\n      \"loc_data\": \"{3263,3441,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5944\",\r\n      \"loc_data\": \"{3263,3450,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5946\",\r\n      \"loc_data\": \"{3261,3455,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5947\",\r\n      \"loc_data\": \"{3260,3452,0,1,0}-{3261,3451,2,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5956\",\r\n      \"loc_data\": \"{2659,2664,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5984\",\r\n      \"loc_data\": \"{3263,3452,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5987\",\r\n      \"loc_data\": \"{2891,3455,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5991\",\r\n      \"loc_data\": \"{2966,3466,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5997\",\r\n      \"loc_data\": \"{2862,3511,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"5998\",\r\n      \"loc_data\": \"{2971,3473,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6026\",\r\n      \"loc_data\": \"{3489,3490,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6027\",\r\n      \"loc_data\": \"{3493,3472,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6028\",\r\n      \"loc_data\": \"{3497,3497,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6030\",\r\n      \"loc_data\": \"{3496,3476,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6031\",\r\n      \"loc_data\": \"{3511,3482,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6032\",\r\n      \"loc_data\": \"{3502,3487,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6033\",\r\n      \"loc_data\": \"{3484,3478,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6034\",\r\n      \"loc_data\": \"{3502,3493,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6035\",\r\n      \"loc_data\": \"{3486,3488,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6036\",\r\n      \"loc_data\": \"{3499,3474,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6037\",\r\n      \"loc_data\": \"{3499,3477,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6038\",\r\n      \"loc_data\": \"{3490,3472,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6039\",\r\n      \"loc_data\": \"{3483,3495,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6040\",\r\n      \"loc_data\": \"{3498,3472,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6041\",\r\n      \"loc_data\": \"{3479,3492,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6042\",\r\n      \"loc_data\": \"{3479,3498,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6044\",\r\n      \"loc_data\": \"{3505,3491,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6045\",\r\n      \"loc_data\": \"{3479,3498,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6046\",\r\n      \"loc_data\": \"{2835,3509,0,0,1}-{3306,5510,0,1,5}-{3309,5543,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6047\",\r\n      \"loc_data\": \"{2839,3497,0,1,6}-{2840,3504,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6050\",\r\n      \"loc_data\": \"{3291,3081,0,1,7}-{3298,3075,0,1,1}-{3284,3076,0,1,3}-{3266,3072,0,1,1}-{3259,3080,0,1,2}-{3246,3080,0,1,3}-{3252,3069,0,1,1}-{3244,3082,0,1,1}-{3235,3072,0,1,4}-{3242,3059,0,1,7}-{3235,3051,0,1,5}-{3248,3051,0,1,4}-{3257,3055,0,1,3}-{3263,3063,0,1,3}-{3267,3048,0,1,0}-{3253,3040,0,1,6}-{3243,3039,0,1,6}-{3254,3031,0,1,1}-{3243,3035,0,1,5}-{3232,3039,0,1,2}-{3230,3046,0,1,6}-{3219,3033,0,1,3}-{3219,3022,0,1,1}-{3227,3017,0,1,5}-{3235,3012,0,1,4}-{3243,3019,0,1,2}-{3251,3028,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6051\",\r\n      \"loc_data\": \"{3292,3069,0,1,1}-{3285,3071,0,1,1}-{3279,3078,0,1,4}-{3273,3065,0,1,3}-{3288,3066,0,1,6}-{3281,3057,0,1,5}-{3294,3056,0,1,5}-{3305,3064,0,1,3}-{3312,3075,0,1,6}-{3306,3086,0,1,4}-{3272,3082,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6070\",\r\n      \"loc_data\": \"{2589,4313,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6072\",\r\n      \"loc_data\": \"{2426,4442,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6073\",\r\n      \"loc_data\": \"{2424,4436,0,0,0}-{2594,4319,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6074\",\r\n      \"loc_data\": \"{2603,4306,0,1,4}-{2607,4312,0,1,7}-{2610,4319,0,1,6}-{2613,4326,0,1,5}-{2616,4333,0,1,0}-{2619,4340,0,1,6}-{2614,4344,0,1,3}-{2609,4347,0,1,4}-{2605,4347,0,1,4}-{2599,4345,0,1,3}-{2598,4342,0,1,3}-{2597,4339,0,1,3}-{2596,4336,0,1,3}-{2595,4333,0,1,3}-{2594,4330,0,1,4}-{2587,4330,0,1,3}-{2583,4332,0,1,4}-{2579,4335,0,1,3}-{2576,4339,0,1,4}-{2571,4342,0,1,1}-{2569,4332,0,1,4}-{2572,4326,0,1,6}-{2572,4297,0,1,1}-{2585,4291,0,1,3}-{2599,4297,0,1,4}-{2607,4300,0,1,1}-{2614,4301,0,1,6}-{2619,4305,0,1,0}-{2616,4320,0,1,6}-{2613,4327,0,1,0}-{2611,4335,0,1,6}-{2607,4336,0,1,6}-{2581,4322,0,1,1}-{2578,4315,0,1,6}-{2575,4308,0,1,6}-{2572,4301,0,1,4}-{2567,4295,0,1,3}-{2577,4291,0,1,3}-{2587,4298,0,1,3}-{2595,4307,0,1,3}-{2603,4314,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6085\",\r\n      \"loc_data\": \"{3046,3207,1,0,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6088\",\r\n      \"loc_data\": \"{2932,3253,0,1,4}-{2936,3249,0,1,2}-{2933,3244,0,1,4}-{2927,3247,0,1,5}-{2925,3256,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6089\",\r\n      \"loc_data\": \"{2932,3249,0,1,0}-{2929,3253,0,1,3}-{2938,3248,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6090\",\r\n      \"loc_data\": \"{2932,3245,0,1,0}-{2934,3246,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6102\",\r\n      \"loc_data\": \"{1762,5329,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6104\",\r\n      \"loc_data\": \"{1751,5326,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6105\",\r\n      \"loc_data\": \"{1767,5355,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6108\",\r\n      \"loc_data\": \"{2854,3385,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6109\",\r\n      \"loc_data\": \"{2526,3215,0,1,6}-{2545,3231,0,1,4}-{2537,3236,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6110\",\r\n      \"loc_data\": \"{2532,3222,0,1,3}-{2533,3209,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6112\",\r\n      \"loc_data\": \"{3238,3247,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6113\",\r\n      \"loc_data\": \"{3232,3280,0,1,4}-{3222,3289,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6114\",\r\n      \"loc_data\": \"{3232,3283,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6115\",\r\n      \"loc_data\": \"{3033,3236,0,1,3}-{3041,3237,0,1,6}-{3035,3234,0,1,7}-{3028,3205,0,1,4}-{3019,3202,0,1,6}-{3026,3203,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6116\",\r\n      \"loc_data\": \"{3030,3244,0,1,0}-{3025,3203,0,1,3}-{3034,3204,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6135\",\r\n      \"loc_data\": \"{3254,3427,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6136\",\r\n      \"loc_data\": \"{3077,3250,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6137\",\r\n      \"loc_data\": \"{2952,3381,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6138\",\r\n      \"loc_data\": \"{2665,3311,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6139\",\r\n      \"loc_data\": \"{2734,3484,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6140\",\r\n      \"loc_data\": \"{2644,2641,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6141\",\r\n      \"loc_data\": \"{2638,2656,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6166\",\r\n      \"loc_data\": \"{1904,4279,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6167\",\r\n      \"loc_data\": \"{1906,4277,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6168\",\r\n      \"loc_data\": \"{1904,4274,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6188\",\r\n      \"loc_data\": \"{1901,4271,0,0,0}-{1909,4271,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6189\",\r\n      \"loc_data\": \"{3016,3516,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6190\",\r\n      \"loc_data\": \"{1906,4270,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6200\",\r\n      \"loc_data\": \"{2947,3366,0,0,1}-{2949,3366,0,0,1}-{2946,3366,0,0,1}-{2948,3366,0,0,1}-{3010,3353,0,0,1}-{3011,3353,0,0,1}-{3012,3353,0,0,1}-{3013,3353,0,0,1}-{3014,3353,0,0,1}-{3015, 3353, 0, 0, 1}-{2945, 3366, 0, 0, 1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6202\",\r\n      \"loc_data\": \"{2912,3749,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6203\",\r\n      \"loc_data\": \"{2924,5322,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6205\",\r\n      \"loc_data\": \"{2933,5329,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6210\",\r\n      \"loc_data\": \"{2927,5340,2,1,3}-{2884,5325,2,1,3}-{2837,5336,2,1,4}-{2876,5326,2,1,4}-{2898,5306,2,1,5}-{2886,5325,2,1,1}-{2838,5336,2,1,4}-{2919,5345,2,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6211\",\r\n      \"loc_data\": \"{2920,5353,2,1,4}-{2902,5357,2,1,4}-{2885,5315,2,1,4}-{2898,5313,2,1,2}-{2908,5354,2,1,2}-{2924,5354,2,1,6}-{2925,5352,2,1,3}-{2928,5355,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6212\",\r\n      \"loc_data\": \"{2920,5339,2,1,1}-{2836,5289,2,1,0}-{2869,5287,2,1,1}-{2867,5333,2,1,0}-{2921,5293,1,1,6}-{2877,5321,2,1,1}-{2888,5326,2,1,3}-{2872,5318,2,1,2}-{2894,5286,2,1,7}-{2896,5312,2,1,4}-{2894,5322,2,1,3}-{2836,5349,2,1,2}-{2858,5267,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6213\",\r\n      \"loc_data\": \"{2894,5353,2,1,0}-{2838,5347,2,1,6}-{2872,5318,2,1,4}-{2875,5313,2,1,4}-{2865,5327,2,1,4}-{2886,5293,2,1,5}-{2909,5297,2,1,0}-{2919,5293,3,1,4}-{2843,5352,2,1,4}-{2908,5346,2,1,6}-{2913,5355,2,1,3}-{2916,5345,2,1,1}-{2919,5349,2,1,2}-{2922,5356,2,1,1}-{2927,5354,2,1,6}-{2928,5350,2,1,4}-{2931,5357,2,1,3}-{2911,5338,2,1,6}-{2925,5295,3,1,0}-{2862,5290,2,1,1}-{2919,5293,1,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6214\",\r\n      \"loc_data\": \"{2919,5284,1,1,0}-{2862,5292,2,1,7}-{2864,5319,2,1,7}-{2828,5337,2,1,6}-{2878,5327,2,1,4}-{2884,5312,2,1,2}-{2883,5320,2,1,0}-{2895,5309,2,1,6}-{2853,5327,2,1,4}-{2854,5345,2,1,2}-{2861,5292,2,1,4}-{2881,5291,2,1,1}-{2892,5328,2,1,1}-{2828,5331,2,1,1}-{2924,5292,3,1,6}-{2918,5281,1,1,1}-{2918,5280,1,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6215\",\r\n      \"loc_data\": \"{2926,5345,2,1,7}-{2888,5361,2,1,5}-{2856,5349,2,1,1}-{2839,5275,2,1,5}-{2880,5293,2,1,4}-{2886,5313,2,1,3}-{2862,5334,2,1,0}-{2881,5320,2,1,3}-{2886,5325,2,1,2}-{2862,5337,2,1,4}-{2845,5286,2,1,0}-{2889,5322,2,1,4}-{2919,5359,2,1,0}-{2855,5352,2,1,1}-{2923,5357,2,1,6}-{2891,5353,2,1,1}-{2832,5288,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6216\",\r\n      \"loc_data\": \"{2888,5290,2,1,1}-{2865,5306,2,1,3}-{2871,5312,2,1,3}-{2867,5304,2,1,6}-{2871,5281,2,1,1}-{2864,5279,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6217\",\r\n      \"loc_data\": \"{2884,5307,2,1,0}-{2899,5304,2,1,3}-{2915,5270,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6218\",\r\n      \"loc_data\": \"{2906,5347,2,1,6}-{2913,5358,2,1,6}-{2856,5267,2,1,7}-{2911,5268,0,1,4}-{2887,5318,2,1,4}-{2888,5314,2,1,6}-{2859,5328,2,1,6}-{2861,5294,2,1,0}-{2931,5345,2,1,2}-{2903,5353,2,1,4}-{2836,5290,2,1,6}-{2907,5346,2,1,6}-{2921,5351,2,1,2}-{2858,5266,2,1,1}-{2916,5269,0,1,1}-{3044,5347,0,1,2}-{3041,5347,0,1,0}-{3031,5346,0,1,2}-{3023,5346,0,1,6}-{3038,5333,0,1,3}-{3048,5333,0,1,1}-{3054,5345,0,1,3}-{3043,5360,0,1,3}-{3030,5362,0,1,3}-{3040,5341,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6219\",\r\n      \"loc_data\": \"{2915,5340,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6220\",\r\n      \"loc_data\": \"{2931,5356,2,1,3}-{2846,5286,2,1,5}-{2937,5351,2,1,3}-{2848,5268,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6221\",\r\n      \"loc_data\": \"{2906,5354,2,1,7}-{2886,5354,2,1,5}-{2885,5352,2,1,2}-{2901,5362,2,1,1}-{2914,5344,2,1,3}-{2918,5343,2,1,2}-{2918,5361,2,1,0}-{2923,5345,2,1,3}-{2924,5352,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6222\",\r\n      \"loc_data\": \"{2831,5301,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6229\",\r\n      \"loc_data\": \"{2841,5285,2,1,3}-{2841,5289,2,1,1}-{2856,5264,2,1,5}-{2842,5282,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6230\",\r\n      \"loc_data\": \"{2843,5265,2,1,4}-{2851,5273,2,1,3}-{2846,5262,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6231\",\r\n      \"loc_data\": \"{2870,5265,2,1,0}-{2869,5266,2,1,7}-{2855,5273,2,1,2}-{2840,5263,2,1,3}-{2831,5285,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6232\",\r\n      \"loc_data\": \"{2872,5261,2,1,4}-{2863,5308,2,1,1}-{2872,5288,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6233\",\r\n      \"loc_data\": \"{2861,5261,2,1,0}-{2852,5264,2,1,0}-{2865,5263,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6234\",\r\n      \"loc_data\": \"{2862,5313,2,1,3}-{2839,5293,2,1,0}-{2842,5264,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6235\",\r\n      \"loc_data\": \"{2864,5270,2,1,3}-{2869,5314,2,1,3}-{2859,5303,2,1,4}-{2863,5293,2,1,7}-{2862,5286,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6236\",\r\n      \"loc_data\": \"{2854,5271,2,1,6}-{2872,5267,2,1,0}-{2858,5269,2,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6237\",\r\n      \"loc_data\": \"{2840,5290,2,1,6}-{2841,5269,2,1,7}-{2833,5292,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6238\",\r\n      \"loc_data\": \"{2874,5308,2,1,3}-{2851,5276,2,1,2}-{2864,5268,2,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6239\",\r\n      \"loc_data\": \"{2875,5298,2,1,4}-{2846,5288,2,1,0}-{2845,5281,2,1,1}-{2824,5216,2,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6240\",\r\n      \"loc_data\": \"{2837,5269,2,1,2}-{2860,5300,2,1,1}-{2852,5311,2,1,4}-{2879,5286,2,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6241\",\r\n      \"loc_data\": \"{2863,5272,2,1,6}-{2850,5269,2,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6242\",\r\n      \"loc_data\": \"{2836,5272,2,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6243\",\r\n      \"loc_data\": \"{2848,5275,2,1,0}-{2869,5304,2,1,4}-{2850,5292,2,1,1}-{2857,5300,2,1,3}-{2874,5287,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6244\",\r\n      \"loc_data\": \"{2847,5299,2,1,6}-{2844,5283,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6245\",\r\n      \"loc_data\": \"{2861,5299,2,1,4}-{2833,5290,2,1,1}-{2851,5262,2,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6246\",\r\n      \"loc_data\": \"{2855,5311,2,1,1}-{2872,5299,2,1,0}-{2872,5315,2,1,1}-{2856,5284,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6247\",\r\n      \"loc_data\": \"{2894,5265,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6254\",\r\n      \"loc_data\": \"{2917,5272,0,1,7}-{2898,5295,2,1,4}-{2881,5283,2,1,1}-{2883,5311,2,1,2}-{2894,5301,2,1,3}-{2882,5284,2,1,5}-{2890,5292,2,1,4}-{2896,5296,2,1,2}-{2905,5299,2,1,3}-{2905,5301,2,1,5}-{2921,5283,3,1,1}-{2925,5292,3,1,7}-{2906,5299,0,1,6}-{2910,5297,0,1,6}-{2915,5270,0,1,2}-{2910,5269,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6255\",\r\n      \"loc_data\": \"{2922,5290,1,1,5}-{2880,5304,2,1,1}-{2884,5311,2,1,2}-{2885,5311,2,1,2}-{2887,5312,2,1,1}-{2886,5313,2,1,0}-{2895,5310,2,1,1}-{2884,5280,2,1,3}-{2885,5293,2,1,6}-{2886,5291,2,1,6}-{2894,5285,2,1,3}-{2893,5286,2,1,7}-{2905,5292,2,1,4}-{2908,5297,2,1,4}-{2910,5297,2,1,6}-{2897,5308,2,1,4}-{2919,5299,3,1,1}-{2921,5292,3,1,5}-{2924,5288,3,1,0}-{2925,5287,3,1,1}-{2908,5300,0,1,6}-{2907,5294,0,1,6}-{2923,5293,1,1,5}-{2919,5298,1,1,1}-{2922,5291,1,1,6}-{2917,5285,1,1,0}-{2905,5295,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6256\",\r\n      \"loc_data\": \"{2922,5285,1,1,0}-{2886,5295,2,1,1}-{2891,5300,2,1,1}-{2889,5310,2,1,2}-{2887,5299,2,1,6}-{2891,5297,2,1,3}-{2884,5283,2,1,3}-{2885,5286,2,1,3}-{2886,5294,2,1,1}-{2896,5286,2,1,4}-{2908,5302,2,1,1}-{2919,5290,3,1,1}-{2923,5298,3,1,4}-{2924,5298,3,1,4}-{2911,5298,0,1,6}-{2919,5293,1,1,1}-{2917,5294,1,1,2}-{2923,5284,1,1,1}-{2916,5267,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6257\",\r\n      \"loc_data\": \"{2913,5267,0,1,6}-{2892,5291,2,1,4}-{2895,5313,2,1,6}-{2879,5329,2,1,5}-{2886,5311,2,1,0}-{2888,5305,2,1,3}-{2877,5293,2,1,5}-{2894,5284,2,1,0}-{2900,5287,2,1,0}-{2905,5302,2,1,1}-{2898,5307,2,1,6}-{2918,5292,3,1,3}-{2924,5286,3,1,0}-{2924,5292,3,1,1}-{2924,5297,3,1,3}-{2926,5285,3,1,1}-{2921,5289,1,1,6}-{2923,5294,1,1,0}-{2922,5285,1,1,3}-{2915,5273,0,1,7}-{2915,5271,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6258\",\r\n      \"loc_data\": \"{2918,5289,1,1,6}-{2884,5287,2,1,0}-{2895,5294,2,1,4}-{2897,5307,2,1,7}-{2918,5298,3,1,5}-{2917,5291,1,1,4}-{2916,5269,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6259\",\r\n      \"loc_data\": \"{2890,5304,2,1,7}-{2886,5299,2,1,3}-{2891,5297,2,1,5}-{2890,5291,2,1,3}-{2900,5286,2,1,7}-{2905,5303,2,1,1}-{2918,5282,3,1,6}-{2924,5295,3,1,2}-{2905,5297,0,1,6}-{2920,5291,1,1,5}-{2930,5290,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6260\",\r\n      \"loc_data\": \"{2870,5359,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6262\",\r\n      \"loc_data\": \"{2873,5356,0,1,1}-{2866,5358,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6264\",\r\n      \"loc_data\": \"{2870,5354,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6266\",\r\n      \"loc_data\": \"{2868,5362,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6267\",\r\n      \"loc_data\": \"{2851,5310,2,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6268\",\r\n      \"loc_data\": \"{2856,5355,2,1,7}-{2838,5358,2,1,2}-{2841,5319,2,1,7}-{2856,5331,2,1,2}-{2854,5325,2,1,2}-{2873,5323,2,1,6}-{2860,5321,2,1,7}-{2868,5334,2,1,0}-{2856,5328,2,1,6}-{2855,5332,2,1,1}-{2845,5339,2,1,5}-{2831,5320,2,1,3}-{2847,5334,2,1,1}-{2858,5349,2,1,2}-{2829,5339,2,1,6}-{2856,5361,2,1,5}-{2839,5360,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6269\",\r\n      \"loc_data\": \"{2846,5351,2,1,3}-{2846,5339,2,1,2}-{2840,5327,2,1,1}-{2836,5345,2,1,7}-{2834,5328,2,1,2}-{2857,5359,2,1,4}-{2846,5357,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6270\",\r\n      \"loc_data\": \"{2845,5336,2,1,2}-{2848,5344,2,1,6}-{2842,5328,2,1,6}-{2844,5349,2,1,2}-{2836,5323,2,1,4}-{2832,5353,2,1,6}-{2848,5358,2,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6271\",\r\n      \"loc_data\": \"{2840,5330,2,1,0}-{2859,5328,2,1,6}-{2873,5317,2,1,3}-{2862,5332,2,1,2}-{2869,5332,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6272\",\r\n      \"loc_data\": \"{2838,5326,2,1,4}-{2870,5313,2,1,1}-{2865,5332,2,1,0}-{2838,5334,2,1,6}-{2837,5353,2,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6273\",\r\n      \"loc_data\": \"{2832,5324,2,1,7}-{2864,5325,2,1,2}-{2873,5325,2,1,7}-{2873,5324,2,1,7}-{2865,5336,2,1,6}-{2840,5333,2,1,6}-{2836,5336,2,1,4}-{2838,5354,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6274\",\r\n      \"loc_data\": \"{2858,5325,2,1,4}-{2873,5319,2,1,6}-{2872,5307,2,1,5}-{2867,5333,2,1,6}-{2866,5333,2,1,0}-{2839,5331,2,1,5}-{2837,5355,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6275\",\r\n      \"loc_data\": \"{2865,5340,2,1,1}-{2869,5326,2,1,7}-{2875,5318,2,1,1}-{2875,5314,2,1,1}-{2878,5313,2,1,3}-{2879,5322,2,1,3}-{2859,5317,2,1,6}-{2858,5319,2,1,4}-{2878,5320,2,1,0}-{2863,5337,2,1,7}-{2862,5338,2,1,7}-{2867,5341,2,1,6}-{2852,5312,2,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6276\",\r\n      \"loc_data\": \"{2856,5360,2,1,7}-{2854,5346,2,1,3}-{2845,5332,2,1,0}-{2845,5344,2,1,3}-{2848,5349,2,1,6}-{2837,5347,2,1,3}-{2835,5324,2,1,2}-{2835,5321,2,1,5}-{2858,5349,2,1,4}-{2830,5339,2,1,3}-{2828,5332,2,1,3}-{2846,5358,2,1,4}-{2855,5356,2,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6277\",\r\n      \"loc_data\": \"{2843,5341,2,1,3}-{2843,5331,2,1,3}-{2847,5341,2,1,5}-{2852,5350,2,1,1}-{2844,5341,2,1,6}-{2843,5347,2,1,1}-{2836,5325,2,1,6}-{2826,5335,2,1,2}-{2837,5351,2,1,4}-{2845,5353,2,1,3}-{2840,5361,2,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6278\",\r\n      \"loc_data\": \"{2845,5359,2,1,4}-{2830,5318,2,1,3}-{2848,5342,2,1,0}-{2846,5332,2,1,1}-{2843,5320,2,1,3}-{2838,5329,2,1,1}-{2855,5349,2,1,0}-{2837,5342,2,1,1}-{2792,5280,2,1,6}-{2827,5331,2,1,6}-{2830,5315,2,1,6}-{2845,5352,2,1,6}-{2839,5360,2,1,6}-{2851,5359,2,1,7}-{2860,5353,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6279\",\r\n      \"loc_data\": \"{2857,5315,2,1,6}-{2859,5318,2,1,5}-{2858,5329,2,1,3}-{2879,5326,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6280\",\r\n      \"loc_data\": \"{2869,5332,2,1,6}-{2871,5313,2,1,2}-{2879,5330,2,1,2}-{2877,5327,2,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6281\",\r\n      \"loc_data\": \"{2865,5316,2,1,2}-{2861,5333,2,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6282\",\r\n      \"loc_data\": \"{2874,5318,2,1,0}-{2859,5316,2,1,3}-{2878,5329,2,1,2}-{2858,5330,2,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6283\",\r\n      \"loc_data\": \"{2877,5326,2,1,2}-{2857,5328,2,1,3}-{2861,5315,2,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6339\",\r\n      \"loc_data\": \"{2547,3277,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6345\",\r\n      \"loc_data\": \"{2518,3275,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6346\",\r\n      \"loc_data\": \"{2799,3186,0,1,7}-{2797,3169,0,0,0}-{2793,3161,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6347\",\r\n      \"loc_data\": \"{2799,3167,0,0,0}-{2787,3188,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6348\",\r\n      \"loc_data\": \"{2793,3158,0,1,3}-{2798,3154,0,1,4}-{2796,3189,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6349\",\r\n      \"loc_data\": \"{2797,3186,0,1,6}-{2793,3161,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6350\",\r\n      \"loc_data\": \"{2798,3182,0,1,7}-{2793,3161,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6357\",\r\n      \"loc_data\": \"{3359,2969,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6362\",\r\n      \"loc_data\": \"{3270,4856,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6363\",\r\n      \"loc_data\": \"{3251,5455,0,1,4}-{3258,5456,0,1,6}-{3257,5451,0,1,6}-{3257,5464,0,1,2}-{3256,5473,0,1,2}-{3244,5469,0,1,1}-{3269,4829,0,1,3}-{3271,4823,0,1,2}-{3283,4809,0,1,3}-{3190,5523,0,1,3}-{3225,5485,0,1,5}-{3219,5528,0,1,2}-{3223,5520,0,1,3}-{3225,5511,0,1,0}-{3236,5511,0,1,6}-{3232,5523,0,1,0}-{3239,5530,0,1,4}-{3233,5546,0,1,3}-{3222,5539,0,1,5}-{3218,5482,0,1,7}-{3219,5486,0,1,4}-{3207,5461,0,1,6}-{3208,5458,0,1,3}-{3194,5530,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6364\",\r\n      \"loc_data\": \"{3271,4809,0,1,3}-{3188,5529,0,1,3}-{3194,5531,0,1,1}-{3222,5486,0,1,3}-{3221,5482,0,1,4}-{3212,5459,0,1,6}-{3210,5462,0,1,2}-{3188,5527,0,1,3}-{3234,5510,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6365\",\r\n      \"loc_data\": \"{3267,4817,0,1,4}-{3290,4803,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6367\",\r\n      \"loc_data\": \"{3276,4808,0,1,3}-{3291,4812,0,1,6}-{3207,5466,0,1,6}-{3223,5462,0,1,1}-{3237,5524,0,1,6}-{3229,5510,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6368\",\r\n      \"loc_data\": \"{3226,5458,0,1,3}-{3222,5470,0,1,6}-{3238,5541,0,1,1}-{3226,5540,0,1,7}-{3222,5522,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6369\",\r\n      \"loc_data\": \"{3268,4825,0,1,6}-{3268,4809,0,1,4}-{3288,4803,0,1,6}-{3298,4810,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6376\",\r\n      \"loc_data\": \"{2925,2976,0,1,1}-{2909,2978,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6377\",\r\n      \"loc_data\": \"{2920,2973,0,1,6}-{2919,2976,0,1,6}-{2910,2978,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6379\",\r\n      \"loc_data\": \"{2894,2995,0,0,0}-{2909,2970,0,0,0}-{3303,5485,0,1,1}-{3320,5494,0,1,4}-{3313,5490,0,1,4}-{3315,5484,0,1,3}-{3323,5471,0,1,6}-{3319,5471,0,1,4}-{3323,5477,0,1,0}-{3310,5484,0,1,4}-{3313,5488,0,1,6}-{3309,5481,0,1,1}-{3320,5495,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6380\",\r\n      \"loc_data\": \"{2883,2994,0,0,0}-{2882,2994,0,0,0}-{3319,5490,0,1,5}-{3298,5486,0,1,3}-{3312,5480,0,1,4}-{3315,5480,0,1,1}-{3308,5482,0,1,2}-{3321,5477,0,1,0}-{3317,5470,0,1,6}-{3324,5472,0,1,6}-{3311,5482,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6383\",\r\n      \"loc_data\": \"{2888,3001,0,0,0}-{2891,3002,0,0,0}-{2890,2998,0,0,0}-{2887,2994,0,0,0}-{2901,2991,0,0,0}-{2905,2990,0,0,0}-{2886,2989,0,0,0}-{2927,2979,0,0,0}-{2926,2973,0,0,0}-{2919,2973,0,0,0}-{2919,2976,0,0,0}-{2920,2979,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6386\",\r\n      \"loc_data\": \"{2683,3326,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6387\",\r\n      \"loc_data\": \"{3275,4808,0,1,3}-{3276,4808,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6388\",\r\n      \"loc_data\": \"{3369,2999,0,1,7}-{3368,2995,0,1,6}-{3362,2997,0,1,3}-{3361,2988,0,1,2}-{3367,2988,0,1,7}-{3379,2983,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6390\",\r\n      \"loc_data\": \"{1707,4814,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6394\",\r\n      \"loc_data\": \"{2703,5366,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6396\",\r\n      \"loc_data\": \"{2791,4279,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6405\",\r\n      \"loc_data\": \"{2799,4260,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6406\",\r\n      \"loc_data\": \"{2765,4267,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6407\",\r\n      \"loc_data\": \"{2802,4246,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6408\",\r\n      \"loc_data\": \"{2770,4238,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6409\",\r\n      \"loc_data\": \"{2787,4262,0,1,0}-{2792,4275,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6410\",\r\n      \"loc_data\": \"{2766,4257,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6416\",\r\n      \"loc_data\": \"{2801,4258,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6417\",\r\n      \"loc_data\": \"{2765,4264,0,1,0}-{2777,4260,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6418\",\r\n      \"loc_data\": \"{2799,4243,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6419\",\r\n      \"loc_data\": \"{2771,4237,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6420\",\r\n      \"loc_data\": \"{2796,4277,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6421\",\r\n      \"loc_data\": \"{2768,4254,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6427\",\r\n      \"loc_data\": \"{2802,4259,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6428\",\r\n      \"loc_data\": \"{2768,4268,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6429\",\r\n      \"loc_data\": \"{2776,4252,0,1,0}-{2805,4242,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6430\",\r\n      \"loc_data\": \"{2769,4236,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6431\",\r\n      \"loc_data\": \"{2792,4260,0,1,0}-{2796,4275,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6432\",\r\n      \"loc_data\": \"{2766,4255,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6438\",\r\n      \"loc_data\": \"{2790,4254,0,1,0}-{2800,4256,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6439\",\r\n      \"loc_data\": \"{2766,4265,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6440\",\r\n      \"loc_data\": \"{2789,4248,0,1,0}-{2802,4244,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6441\",\r\n      \"loc_data\": \"{2771,4241,0,1,0}-{2777,4252,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6442\",\r\n      \"loc_data\": \"{2795,4273,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6443\",\r\n      \"loc_data\": \"{2767,4252,0,1,0}-{2776,4250,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6449\",\r\n      \"loc_data\": \"{2792,4252,0,1,0}-{2800,4254,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6450\",\r\n      \"loc_data\": \"{2764,4266,0,1,0}-{2781,4261,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6451\",\r\n      \"loc_data\": \"{2802,4243,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6452\",\r\n      \"loc_data\": \"{2772,4235,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6453\",\r\n      \"loc_data\": \"{2797,4272,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6454\",\r\n      \"loc_data\": \"{2765,4253,0,1,0}-{2779,4256,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6458\",\r\n      \"loc_data\": \"{2784,4249,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6459\",\r\n      \"loc_data\": \"{2778,4264,0,1,0}-{2784,4252,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6460\",\r\n      \"loc_data\": \"{2783,4251,0,1,0}-{2789,4264,0,1,0}-{2801,4252,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6461\",\r\n      \"loc_data\": \"{2787,4250,0,1,0}-{2791,4249,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6462\",\r\n      \"loc_data\": \"{2785,4248,0,1,0}-{2786,4251,0,1,0}-{2801,4242,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6463\",\r\n      \"loc_data\": \"{2773,4238,0,1,0}-{2779,4248,0,1,0}-{2785,4250,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6464\",\r\n      \"loc_data\": \"{2796,4267,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6465\",\r\n      \"loc_data\": \"{2764,4251,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6482\",\r\n      \"loc_data\": \"{2801,4260,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6483\",\r\n      \"loc_data\": \"{2804,4246,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6484\",\r\n      \"loc_data\": \"{2795,4276,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6485\",\r\n      \"loc_data\": \"{2766,4250,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6486\",\r\n      \"loc_data\": \"{2774,4236,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6487\",\r\n      \"loc_data\": \"{2765,4268,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6488\",\r\n      \"loc_data\": \"{2784,4255,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6489\",\r\n      \"loc_data\": \"{2787,4266,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6498\",\r\n      \"loc_data\": \"{2796,4256,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6499\",\r\n      \"loc_data\": \"{2793,4247,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6500\",\r\n      \"loc_data\": \"{2793,4265,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6501\",\r\n      \"loc_data\": \"{2772,4256,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6502\",\r\n      \"loc_data\": \"{2775,4247,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6503\",\r\n      \"loc_data\": \"{2775,4265,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6521\",\r\n      \"loc_data\": \"{3161,3475,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6522\",\r\n      \"loc_data\": \"{3168,3475,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6523\",\r\n      \"loc_data\": \"{3173,3498,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6524\",\r\n      \"loc_data\": \"{3156,3481,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6525\",\r\n      \"loc_data\": \"{3175,3481,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6526\",\r\n      \"loc_data\": \"{3152,3490,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6527\",\r\n      \"loc_data\": \"{3154,3498,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6528\",\r\n      \"loc_data\": \"{3165,3491,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6529\",\r\n      \"loc_data\": \"{3164,3488,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6530\",\r\n      \"loc_data\": \"{3164,3491,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6531\",\r\n      \"loc_data\": \"{3165,3488,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6532\",\r\n      \"loc_data\": \"{3163,3489,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6533\",\r\n      \"loc_data\": \"{3166,3489,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6534\",\r\n      \"loc_data\": \"{3166,3490,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6535\",\r\n      \"loc_data\": \"{3163,3490,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6538\",\r\n      \"loc_data\": \"{3189,3690,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6731\",\r\n      \"loc_data\": \"{2655,5615,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6750\",\r\n      \"loc_data\": \"{2577,3078,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6773\",\r\n      \"loc_data\": \"{3439,2808,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6774\",\r\n      \"loc_data\": \"{3435,2808,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6776\",\r\n      \"loc_data\": \"{3441,2810,0,0,0}-{3445,2813,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6777\",\r\n      \"loc_data\": \"{3432,2810,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6778\",\r\n      \"loc_data\": \"{3440,2806,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6779\",\r\n      \"loc_data\": \"{3392,2759,0,1,2}-{3408,2763,0,1,7}-{3410,2786,0,1,2}-{3420,2778,0,1,6}-{3427,2792,0,1,6}-{3429,2802,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6786\",\r\n      \"loc_data\": \"{3409,2812,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6787\",\r\n      \"loc_data\": \"{3408,2813,1,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6891\",\r\n      \"loc_data\": \"{2598,3272,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6893\",\r\n      \"loc_data\": \"{2926,3435,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6917\",\r\n      \"loc_data\": \"{2916,3082,0,0,0}-{2917,3089,0,0,0}-{2912,3090,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6918\",\r\n      \"loc_data\": \"{2917,3088,0,1,4}-{2917,3092,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6921\",\r\n      \"loc_data\": \"{2974,3448,0,1,4}-{2971,3442,0,1,6}-{2968,3451,0,1,1}-{2967,3439,0,1,4}-{2965,3451,0,1,5}-{2954,3273,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6942\",\r\n      \"loc_data\": \"{2890,3100,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6944\",\r\n      \"loc_data\": \"{2855,3028,0,0,0}-{2841,3039,0,0,0}-{2838,3031,0,0,0}-{2836,3014,0,0,0}-{2839,3022,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6958\",\r\n      \"loc_data\": \"{2574,3082,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6962\",\r\n      \"loc_data\": \"{2842,5222,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6966\",\r\n      \"loc_data\": \"{2927,3431,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6971\",\r\n      \"loc_data\": \"{2926,3443,0,0,5}-{149,39,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"6997\",\r\n      \"loc_data\": \"{3002,3257,0,0,0}-{3058,3429,0,0,0}-{3059,3420,0,0,0}-{3059,3425,0,0,0}-{3049,3429,0,0,0}-{3007,3261,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7003\",\r\n      \"loc_data\": \"{3253,5535,0,1,7}-{3230,5493,0,1,1}-{3224,5497,0,1,5}-{2582,9895,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7004\",\r\n      \"loc_data\": \"{3256,5540,0,1,4}-{3247,5536,0,1,6}-{3225,5495,0,1,4}-{2581,9891,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7009\",\r\n      \"loc_data\": \"{3282,3467,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7021\",\r\n      \"loc_data\": \"{2510,2822,0,1,3}-{2511,2823,0,1,4}-{2509,2825,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7022\",\r\n      \"loc_data\": \"{2503,2821,0,1,1}-{2500,2818,0,1,4}-{2503,2819,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7023\",\r\n      \"loc_data\": \"{2552,2821,0,1,4}-{2555,2826,0,1,5}-{2550,2821,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7024\",\r\n      \"loc_data\": \"{2523,2823,0,0,0}-{2525,2821,0,0,0}-{2525,2820,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7025\",\r\n      \"loc_data\": \"{2537,2820,0,0,0}-{2539,2819,0,0,0}-{2543,2817,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7026\",\r\n      \"loc_data\": \"{2543,2822,0,0,0}-{2542,2818,0,0,0}-{2549,2822,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7031\",\r\n      \"loc_data\": \"{2499,2820,0,1,4}-{2511,2819,0,1,3}-{2525,2820,0,1,0}-{2527,2818,0,1,3}-{2542,2819,0,1,4}-{2551,2817,0,1,3}-{2554,2819,0,1,3}-{2559,2819,0,1,4}-{2566,2820,0,1,5}-{2575,2818,0,1,4}-{2578,2819,0,1,4}-{2587,2819,0,1,7}-{2595,2821,0,1,4}-{2595,2826,0,1,0}-{2503,2824,0,1,3}-{2509,2822,0,1,4}-{2518,2825,0,1,7}-{2526,2822,0,1,1}-{2547,2822,0,1,4}-{2588,2801,0,1,1}-{2557,2826,0,1,4}-{2562,2819,0,1,6}-{2565,2828,0,1,0}-{2573,2825,0,1,1}-{2578,2820,0,1,6}-{2584,2822,0,1,4}-{2590,2831,0,1,4}-{2594,2823,0,1,4}-{2502,2823,0,1,4}-{2513,2820,0,1,7}-{2527,2819,0,1,4}-{2529,2818,0,1,6}-{2541,2822,0,1,3}-{2549,2817,0,1,2}-{2557,2818,0,1,2}-{2488,2768,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7032\",\r\n      \"loc_data\": \"{2539,2838,0,0,0}-{2542,2832,0,0,0}-{2532,2836,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7033\",\r\n      \"loc_data\": \"{2541,2837,0,0,0}-{2535,2832,0,0,0}-{2543,2832,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7034\",\r\n      \"loc_data\": \"{2536,2839,0,0,0}-{2537,2840,0,0,0}-{2533,2836,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7035\",\r\n      \"loc_data\": \"{2542,2839,0,0,0}-{2549,2835,0,0,0}-{2541,2839,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7036\",\r\n      \"loc_data\": \"{2538,2841,0,0,0}-{2537,2836,0,0,0}-{2531,2836,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7039\",\r\n      \"loc_data\": \"{2503,2824,0,1,4}-{2518,2824,0,1,4}-{2534,2821,0,1,1}-{2548,2823,0,1,4}-{2560,2822,0,1,1}-{2570,2823,0,1,1}-{2582,2824,0,1,6}-{2588,2828,0,1,4}-{2503,2825,0,1,4}-{2493,2828,0,1,3}-{2515,2823,0,1,6}-{2525,2827,0,1,4}-{2589,2808,0,1,2}-{2562,2825,0,1,7}-{2568,2820,0,1,4}-{2577,2821,0,1,4}-{2582,2832,0,1,6}-{2500,2818,0,1,1}-{2525,2827,0,1,7}-{2536,2826,0,1,2}-{2541,2819,0,1,4}-{2503,2822,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7040\",\r\n      \"loc_data\": \"{2563,2862,0,0,0}-{2563,2856,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7041\",\r\n      \"loc_data\": \"{2562,2863,0,0,0}-{2553,2861,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7042\",\r\n      \"loc_data\": \"{2551,2863,0,0,0}-{2552,2859,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7043\",\r\n      \"loc_data\": \"{2553,2862,0,0,0}-{2561,2861,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7044\",\r\n      \"loc_data\": \"{2435,2893,0,0,0}-{2435,2895,0,0,0}-{2466,2936,0,0,0}-{2435,2893,0,0,4}-{2435,2893,0,0,4}-{2435,2893,0,0,4}-{2435,2895,0,0,4}-{2435,2895,0,0,4}-{2435,2895,0,0,4}-{2466,2936,0,0,4}-{2466,2936,0,0,4}-{2466,2936,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7045\",\r\n      \"loc_data\": \"{2435,2895,0,0,0}-{2435,2894,0,0,0}-{2442,2916,0,0,0}-{2435,2895,0,0,4}-{2435,2895,0,0,4}-{2435,2894,0,0,4}-{2435,2894,0,0,4}-{2442,2916,0,0,4}-{2442,2916,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7046\",\r\n      \"loc_data\": \"{2450,2922,0,0,0}-{2456,2929,0,0,0}-{2450,2922,0,0,4}-{2450,2922,0,0,4}-{2456,2929,0,0,4}-{2456,2929,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7047\",\r\n      \"loc_data\": \"{2557,2836,0,0,0}-{2559,2838,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7048\",\r\n      \"loc_data\": \"{2545,2836,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7049\",\r\n      \"loc_data\": \"{2553,2839,0,0,4}-{2553,2836,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7051\",\r\n      \"loc_data\": \"{2547,2852,0,0,0}-{2549,2854,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7052\",\r\n      \"loc_data\": \"{2571,2855,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7055\",\r\n      \"loc_data\": \"{2559,2851,0,0,0}-{2560,2852,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7056\",\r\n      \"loc_data\": \"{2560,2851,0,0,0}-{2561,2852,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7057\",\r\n      \"loc_data\": \"{2596,2845,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7062\",\r\n      \"loc_data\": \"{2571,2840,0,0,0}-{2572,2840,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7065\",\r\n      \"loc_data\": \"{2621,2857,1,0,0}-{2622,2857,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7066\",\r\n      \"loc_data\": \"{2619,2856,1,0,0}-{2620,2857,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7067\",\r\n      \"loc_data\": \"{2518,2842,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7068\",\r\n      \"loc_data\": \"{2531,2850,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7069\",\r\n      \"loc_data\": \"{2559,2858,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7070\",\r\n      \"loc_data\": \"{2581,2866,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7071\",\r\n      \"loc_data\": \"{2598,2864,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7072\",\r\n      \"loc_data\": \"{2517,2840,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7073\",\r\n      \"loc_data\": \"{2533,2848,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7074\",\r\n      \"loc_data\": \"{2556,2858,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7075\",\r\n      \"loc_data\": \"{2583,2865,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7076\",\r\n      \"loc_data\": \"{2596,2865,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7077\",\r\n      \"loc_data\": \"{2617,2856,1,0,0}-{2618,2857,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7078\",\r\n      \"loc_data\": \"{2502,2838,0,0,0}-{2478,2884,0,0,0}-{2476,2895,0,0,0}-{2472,2870,0,0,0}-{2455,2873,0,0,0}-{2455,2857,0,0,0}-{2474,2833,0,0,0}-{2505,2842,0,0,0}-{2507,2843,0,0,0}-{2481,2833,0,0,0}-{2476,2865,0,0,0}-{2456,2856,0,0,0}-{2454,2879,0,0,0}-{2472,2884,0,0,0}-{2475,2894,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7079\",\r\n      \"loc_data\": \"{2501,2851,0,0,0}-{2466,2878,0,0,0}-{2454,2847,0,0,0}-{2471,2857,0,0,0}-{2483,2840,0,0,0}-{2498,2854,0,0,0}-{2504,2851,0,0,0}-{2491,2838,0,0,0}-{2475,2852,0,0,0}-{2464,2873,0,0,0}-{2474,2903,0,0,0}-{2479,2906,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7080\",\r\n      \"loc_data\": \"{2508,2853,0,0,0}-{2492,2893,0,0,0}-{2483,2876,0,0,0}-{2456,2868,0,0,0}-{2459,2836,0,0,0}-{2514,2851,0,0,0}-{2506,2852,0,0,0}-{2487,2877,0,0,0}-{2486,2860,0,0,0}-{2458,2866,0,0,0}-{2416,2856,0,0,0}-{2495,2884,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7081\",\r\n      \"loc_data\": \"{2499,2860,0,0,0}-{2485,2892,0,0,0}-{2451,2870,0,0,0}-{2466,2864,0,0,0}-{2449,2826,0,0,0}-{2487,2842,0,0,0}-{2497,2863,0,0,0}-{2489,2843,0,0,0}-{2471,2860,0,0,0}-{2448,2870,0,0,0}-{2478,2888,0,0,0}-{2485,2922,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7082\",\r\n      \"loc_data\": \"{2516,2858,0,0,0}-{2493,2903,0,0,0}-{2485,2869,0,0,0}-{2484,2888,0,0,0}-{2444,2861,0,0,0}-{2457,2863,0,0,0}-{2474,2837,0,0,0}-{2521,2862,0,0,0}-{2483,2865,0,0,0}-{2474,2844,0,0,0}-{2460,2859,0,0,0}-{2492,2901,0,0,0}-{2486,2889,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7091\",\r\n      \"loc_data\": \"{2525,2852,0,0,0}-{2529,2844,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7092\",\r\n      \"loc_data\": \"{2526,2854,0,0,0}-{2528,2850,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7093\",\r\n      \"loc_data\": \"{2527,2853,0,0,0}-{2528,2849,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7094\",\r\n      \"loc_data\": \"{2527,2851,0,0,0}-{2523,2850,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7095\",\r\n      \"loc_data\": \"{2609,2863,0,0,0}-{2610,2862,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7096\",\r\n      \"loc_data\": \"{2610,2865,0,0,0}-{2605,2866,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7097\",\r\n      \"loc_data\": \"{2611,2862,0,0,0}-{2607,2867,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7098\",\r\n      \"loc_data\": \"{2611,2864,0,0,0}-{2608,2863,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7099\",\r\n      \"loc_data\": \"{2585,2844,0,0,0}-{2581,2845,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7100\",\r\n      \"loc_data\": \"{2586,2840,0,0,0}-{2587,2841,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7101\",\r\n      \"loc_data\": \"{2585,2842,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7102\",\r\n      \"loc_data\": \"{2576,2840,0,0,0}-{2576,2840,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7103\",\r\n      \"loc_data\": \"{2579,2843,0,0,0}-{2582,2843,0,0,0}-{2579,2843,0,0,0}-{2582,2843,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7104\",\r\n      \"loc_data\": \"{2549,2852,0,0,0}-{2547,2856,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7105\",\r\n      \"loc_data\": \"{3111,9929,0,1,7}-{3106,9941,0,1,1}-{3111,9935,0,1,4}-{3114,9931,0,1,1}-{2612,9484,0,1,1}-{2611,9484,0,1,0}-{2614,9484,0,1,6}-{2611,9486,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7106\",\r\n      \"loc_data\": \"{3131,9930,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7107\",\r\n      \"loc_data\": \"{3130,9928,0,1,0}-{3131,9931,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7109\",\r\n      \"loc_data\": \"{3127,9932,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7110\",\r\n      \"loc_data\": \"{3121,9929,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7112\",\r\n      \"loc_data\": \"{3130,9934,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7113\",\r\n      \"loc_data\": \"{3127,9932,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7114\",\r\n      \"loc_data\": \"{3132,9921,0,0,0}-{3132,9935,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7115\",\r\n      \"loc_data\": \"{3050,3259,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7121\",\r\n      \"loc_data\": \"{2189,3148,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7138\",\r\n      \"loc_data\": \"{3245,5462,0,1,7}-{3257,5454,0,1,3}-{3255,5461,0,1,1}-{3251,5473,0,1,3}-{3224,5540,0,1,0}-{3240,5541,0,1,6}-{3239,5529,0,1,6}-{3233,5524,0,1,4}-{3237,5512,0,1,6}-{3225,5510,0,1,1}-{3222,5524,0,1,1}-{3213,5472,0,1,3}-{3210,5469,0,1,5}-{3221,5468,0,1,0}-{3223,5465,0,1,0}-{3190,5523,0,1,2}-{3225,5540,0,1,7}-{3218,5537,0,1,3}-{3195,5527,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7139\",\r\n      \"loc_data\": \"{3220,5463,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7142\",\r\n      \"loc_data\": \"{3082,4246,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7143\",\r\n      \"loc_data\": \"{3082,3459,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7144\",\r\n      \"loc_data\": \"{3085,4230,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7145\",\r\n      \"loc_data\": \"{3081,4252,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7146\",\r\n      \"loc_data\": \"{3078,4240,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7147\",\r\n      \"loc_data\": \"{3079,4245,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7148\",\r\n      \"loc_data\": \"{3077,4229,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7149\",\r\n      \"loc_data\": \"{3085,4235,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7150\",\r\n      \"loc_data\": \"{3085,4240,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7151\",\r\n      \"loc_data\": \"{3081,3457,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7152\",\r\n      \"loc_data\": \"{3081,3455,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7153\",\r\n      \"loc_data\": \"{3081,3453,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7154\",\r\n      \"loc_data\": \"{3079,3457,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7155\",\r\n      \"loc_data\": \"{3079,3455,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7156\",\r\n      \"loc_data\": \"{3077,3457,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7157\",\r\n      \"loc_data\": \"{3077,3453,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7158\",\r\n      \"loc_data\": \"{3080,3463,0,1,0}-{3079,3463,0,1,0}-{3144,4250,2,1,4}-{3143,4255,2,1,2}-{3140,4253,2,1,3}-{3145,4255,2,1,6}-{3149,4257,2,1,5}-{3148,4262,2,1,5}-{3142,4260,2,1,3}-{3144,4259,2,1,4}-{3145,4261,2,1,4}-{3146,4265,2,1,5}-{3143,4264,2,1,3}-{3144,4266,2,1,5}-{3141,4265,2,1,1}-{3144,4270,2,1,1}-{3142,4269,2,1,6}-{3157,4262,2,1,1}-{3164,4265,2,1,6}-{3162,4266,2,1,6}-{3165,4266,2,1,3}-{3164,4261,2,1,2}-{3162,4259,2,1,5}-{3162,4255,2,1,7}-{3165,4256,2,1,4}-{3163,4251,2,1,3}-{3165,4249,2,1,6}-{3162,4250,2,1,4}-{3163,4241,2,1,4}-{3165,4239,2,1,4}-{3165,4241,2,1,0}-{3160,4235,2,1,2}-{3165,4235,2,1,4}-{3165,4237,2,1,4}-{3162,4234,2,1,3}-{3164,4231,2,1,4}-{3166,4229,2,1,6}-{3162,4230,2,1,1}-{3167,4229,2,1,3}-{3184,4236,2,1,1}-{3153,4246,1,1,3}-{3159,4236,1,1,6}-{3163,4236,1,1,4}-{3163,4234,1,1,7}-{3146,4235,1,1,5}-{3144,4236,1,1,1}-{3143,4234,1,1,2}-{3145,4240,1,1,4}-{3148,4242,1,1,1}-{3145,4241,1,1,7}-{3142,4242,1,1,3}-{3146,4230,1,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7159\",\r\n      \"loc_data\": \"{3174,4238,2,1,6}-{3175,4243,2,1,6}-{3179,4236,2,1,4}-{3145,4272,1,1,3}-{3145,4276,1,1,3}-{3152,4271,1,1,6}-{3144,4264,1,1,4}-{3153,4266,1,1,1}-{3152,4261,1,1,4}-{3145,4259,1,1,6}-{3161,4259,1,1,0}-{3160,4265,1,1,0}-{3153,4246,1,1,3}-{3157,4248,1,1,6}-{3161,4247,1,1,4}-{3146,4247,1,1,6}-{3153,4233,1,1,4}-{3153,4240,1,1,6}-{3155,4238,1,1,5}-{3169,4267,3,1,3}-{3160,4265,3,1,6}-{3168,4250,3,1,4}-{3168,4244,3,1,6}-{3160,4239,3,1,1}-{3160,4228,3,1,3}-{3147,4225,3,1,3}-{3145,4242,3,1,5}-{3139,4249,3,1,6}-{3144,4253,3,1,3}-{3145,4266,3,1,0}-{3138,4266,3,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7160\",\r\n      \"loc_data\": \"{3175,4254,2,1,7}-{3176,4247,2,1,5}-{3174,4269,2,1,1}-{3190,4253,2,1,3}-{3192,4247,2,1,3}-{3189,4235,2,1,0}-{3152,4269,0,1,4}-{3160,4278,0,1,1}-{3160,4262,0,1,3}-{3149,4250,0,1,0}-{3158,4250,0,1,5}-{3161,4236,0,1,6}-{3172,4250,0,1,2}-{3171,4269,3,1,1}-{3157,4277,3,1,3}-{3150,4278,3,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7161\",\r\n      \"loc_data\": \"{3142,4230,2,1,6}-{3143,4231,2,1,3}-{3141,4235,2,1,4}-{3144,4241,2,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7162\",\r\n      \"loc_data\": \"{3144,4229,2,1,1}-{3143,4236,2,1,1}-{3145,4235,2,1,1}-{3148,4244,2,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7228\",\r\n      \"loc_data\": \"{2862,3101,0,0,0}-{2879,3109,0,0,0}-{2882,3104,0,0,0}-{2874,3098,0,0,0}-{2882,3098,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7229\",\r\n      \"loc_data\": \"{2833,3088,0,0,0}-{2830,3085,0,0,0}-{2844,3089,0,0,0}-{2837,3084,0,0,0}-{2840,3076,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7230\",\r\n      \"loc_data\": \"{2887,3051,0,0,0}-{2890,3052,0,0,0}-{2894,3058,0,0,0}-{2840,3008,0,0,0}-{2897,3035,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7231\",\r\n      \"loc_data\": \"{2930,2961,0,0,0}-{2942,2964,0,0,0}-{2933,2964,0,0,0}-{2932,2967,0,0,0}-{2936,2973,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7232\",\r\n      \"loc_data\": \"{2802,3106,0,0,0}-{2807,3101,0,0,0}-{2806,3108,0,0,0}-{2808,3105,0,0,0}-{2814,3100,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7233\",\r\n      \"loc_data\": \"{2922,3070,0,0,0}-{2929,3075,0,0,0}-{2919,3080,0,0,0}-{2924,3080,0,0,0}-{2923,3081,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7234\",\r\n      \"loc_data\": \"{2900,3107,0,0,0}-{2903,3098,0,0,0}-{2908,3104,0,0,0}-{2905,3107,0,0,0}-{2904,3107,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7235\",\r\n      \"loc_data\": \"{2820,3065,0,0,0}-{2830,3059,0,0,0}-{2825,3057,0,0,0}-{2827,3050,0,0,0}-{2822,3053,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7236\",\r\n      \"loc_data\": \"{2799,3005,0,0,0}-{2801,2995,0,0,0}-{2804,3001,0,0,0}-{2803,2986,0,0,0}-{2811,2999,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7237\",\r\n      \"loc_data\": \"{2927,3432,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7251\",\r\n      \"loc_data\": \"{2574,3082,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7275\",\r\n      \"loc_data\": \"{2995,3252,0,0,0}-{2996,3259,0,0,0}-{2993,3250,0,0,0}-{3000,3258,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7276\",\r\n      \"loc_data\": \"{2994,3256,0,0,0}-{3002,3250,0,0,0}-{2992,3252,0,0,0}-{3000,3250,0,0,0}-{2728,3422,0,1,1}-{2718,3413,0,1,4}-{2729,3420,0,1,4}-{2727,3414,0,1,6}-{2714,3419,0,1,3}-{2719,3427,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7285\",\r\n      \"loc_data\": \"{2835,3107,0,0,0}-{2836,3101,0,0,0}-{2836,3110,0,0,0}-{2837,3112,0,0,0}-{2841,3107,0,0,0}-{2885,3018,0,0,0}-{2885,3019,0,0,0}-{2891,3018,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7286\",\r\n      \"loc_data\": \"{2931,3090,0,0,0}-{2925,3097,0,0,0}-{2936,3096,0,0,0}-{2924,3102,0,0,0}-{2933,3104,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7288\",\r\n      \"loc_data\": \"{2834,3045,0,0,0}-{2826,3048,0,0,0}-{2824,3043,0,0,0}-{2822,3045,0,0,0}-{2818,3049,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7289\",\r\n      \"loc_data\": \"{2882,3018,0,1,7}-{2887,3024,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7290\",\r\n      \"loc_data\": \"{2845,3088,0,1,6}-{2854,3085,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7292\",\r\n      \"loc_data\": \"{2863,3048,0,1,5}-{2868,3037,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7309\",\r\n      \"loc_data\": \"{3023,3410,0,0,0}-{2946,3280,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7310\",\r\n      \"loc_data\": \"{3015,3409,0,0,0}-{2946,3272,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7311\",\r\n      \"loc_data\": \"{2956,3273,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7312\",\r\n      \"loc_data\": \"{2950,3268,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7363\",\r\n      \"loc_data\": \"{2793,2996,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7420\",\r\n      \"loc_data\": \"{3168,3334,0,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7421\",\r\n      \"loc_data\": \"{3163,3336,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7451\",\r\n      \"loc_data\": \"{2328,3170,0,1,6}-{2341,3179,0,1,4}-{2338,3164,0,1,4}-{2189,3181,0,1,2}-{2178,3186,0,1,7}-{2199,3182,0,1,0}-{2288,3149,0,1,2}-{2282,3144,0,1,3}-{2285,3144,0,1,2}-{2281,3139,0,1,1}-{2289,3152,0,1,6}-{2287,3155,0,1,1}-{2286,3146,0,1,1}-{2289,3156,0,0,5}-{2285,3136,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7550\",\r\n      \"loc_data\": \"{2617,3144,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7636\",\r\n      \"loc_data\": \"{3618,9736,0,0,0}-{3620,9732,0,0,0}-{3624,9736,0,0,0}-{3625,9738,0,0,0}-{3618,9736,0,0,4}-{3620,9732,0,0,4}-{3624,9736,0,0,4}-{3625,9738,0,0,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7637\",\r\n      \"loc_data\": \"{3588,9768,0,0,0}-{3600,9768,0,0,0}-{3606,9780,0,0,0}-{3612,9729,0,0,0}-{3613,9764,0,0,0}-{3614,9740,0,0,0}-{3614,9750,0,0,0}-{3621,9748,0,0,0}-{3629,9737,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7639\",\r\n      \"loc_data\": \"{3592,9766,0,0,0}-{3603,9770,0,0,0}-{3605,9757,0,0,0}-{3611,9749,0,0,0}-{3611,9766,0,0,0}-{3616,9737,0,0,0}-{3616,9756,0,0,0}-{3616,9762,0,0,0}-{3617,9779,0,0,0}-{3621,9754,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7640\",\r\n      \"loc_data\": \"{3608,9780,0,1,3}-{3610,9777,0,1,1}-{3613,9772,0,1,4}-{3617,9748,0,1,7}-{3617,9758,0,1,1}-{3621,9751,0,1,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7641\",\r\n      \"loc_data\": \"{3607,9776,0,1,1}-{3610,9772,0,1,0}-{3614,9778,0,1,7}-{3615,9746,0,1,7}-{3618,9753,0,1,1}-{3619,9748,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7642\",\r\n      \"loc_data\": \"{3595,9742,0,0,0}-{3597,9751,0,0,0}-{3598,9736,0,0,0}-{3604,9746,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7643\",\r\n      \"loc_data\": \"{3587,9737,0,0,0}-{3592,9746,0,0,0}-{3600,9740,0,0,0}-{3605,9738,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7711\",\r\n      \"loc_data\": \"{3405,9902,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7716\",\r\n      \"loc_data\": \"{3005,3475,0,1,7}-{3003,3473,0,1,4}-{2997,3471,0,0,0}-{3004,3494,0,0,0}-{3005,3505,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7726\",\r\n      \"loc_data\": \"{2996,3451,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7727\",\r\n      \"loc_data\": \"{3045,3483,0,0,0}-{3053,3492,0,0,4}-{3055,3491,0,0,0}-{3045,3496,0,0,0}-{3046,3490,1,0,0}-{3057,3497,1,0,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7728\",\r\n      \"loc_data\": \"{3009,3433,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7731\",\r\n      \"loc_data\": \"{3008,3466,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7732\",\r\n      \"loc_data\": \"{3009,3466,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7733\",\r\n      \"loc_data\": \"{3008,3479,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7734\",\r\n      \"loc_data\": \"{3009,3487,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7735\",\r\n      \"loc_data\": \"{2999,3469,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7744\",\r\n      \"loc_data\": \"{3149,3411,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7746\",\r\n      \"loc_data\": \"{4755,5116,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7747\",\r\n      \"loc_data\": \"{4751,5116,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7748\",\r\n      \"loc_data\": \"{4752,5114,0,1,5}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7749\",\r\n      \"loc_data\": \"{4739,5070,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7750\",\r\n      \"loc_data\": \"{4765,5064,0,1,7}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7751\",\r\n      \"loc_data\": \"{4778,5070,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7752\",\r\n      \"loc_data\": \"{4432,5096,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7753\",\r\n      \"loc_data\": \"{4438,5089,0,1,0}-{4428,5083,0,1,0}-{4437,5075,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7763\",\r\n      \"loc_data\": \"{4777,5080,0,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7765\",\r\n      \"loc_data\": \"{4776,5076,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7767\",\r\n      \"loc_data\": \"{4762,5145,0,1,2}-{2457,5139,0,1,6}-{2460,5140,0,1,0}-{2443,5147,0,1,3}-{2454,5155,0,1,5}-{2461,5125,0,1,3}-{2456,5124,0,1,4}-{2458,5129,0,1,4}-{2443,5145,0,1,1}-{2451,5148,0,1,1}-{2447,5143,0,1,4}-{2443,5138,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7768\",\r\n      \"loc_data\": \"{4762,5156,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7823\",\r\n      \"loc_data\": \"{3215,9560,0,0,1}-{3161,9547,0,0,3}-{3164,9556,0,0,4}-{3162,9574,0,0,3}-{3198,9554,0,0,7}-{3216,9588,0,0,1}-{3198,9572,0,0,1}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7891\",\r\n      \"loc_data\": \"{3207,3250,0,0,0}-{3208,3250,0,0,0}-{3209,3250,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7959\",\r\n      \"loc_data\": \"{3188, 3425, 0, 1, 0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7969\",\r\n      \"loc_data\": \"{3205,3240,0,0,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8082\",\r\n      \"loc_data\": \"{3552,5590,2,1,2}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8083\",\r\n      \"loc_data\": \"{3560,5602,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8084\",\r\n      \"loc_data\": \"{3541,5597,0,1,4}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8085\",\r\n      \"loc_data\": \"{3550,5598,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8149\",\r\n      \"loc_data\": \"{3244,9996,0,1,6}-{3229,10008,0,1,6}-{3222,10012,0,1,6}-{3205,10010,0,1,6}-{3212,10012,0,1,6}-{3205,10023,0,1,6}-{3210,10030,0,1,6}-{3212,10039,0,1,6}-{3213,10009,0,1,6}-{3243,9993,0,1,6}-{3218,10036,0,1,6}-{3218,10010,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8150\",\r\n      \"loc_data\": \"{3241,9997,0,1,6}-{3230,10011,0,1,6}-{3221,10012,0,1,6}-{3207,10006,0,1,6}-{3207,10017,0,1,6-{3209,10031,0,1,6}-{3209,10019,0,1,6}-{3217,10012,0,1,6}-{3224,10012,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8151\",\r\n      \"loc_data\": \"{3241,9998,0,1,6}-{3223,10010,0,1,6}-{3208,10012,0,1,6}-{3209,10026,0,1,6}-{3214,10038,0,1,6}-{3211,10035,0,1,6}-{3214,10037,0,1,6}-{3240,9991,0,1,6}-{3231,10010,0,1,6}-{3210,10007,0,1,6}-{3222,10010,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8273\",\r\n      \"loc_data\": \"{2931,3536,0,1,5}-{166,54,0,1,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8274\",\r\n      \"loc_data\": \"{3514,3513,0,1,6}-{168,53,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8275\",\r\n      \"loc_data\": \"{2869,2982,1,1,5}-{169,52,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8349\",\r\n      \"loc_data\": \"{2603,5740,0,0,7}-{2591,5739,0,1,3}-{2616,5733,0,1,3}-{2613,5712,0,1,3}-{2603,5712,0,1,3}-{2588,5712,0,1,3}\"\r\n    },\r\n    {\r\n      \"npc_id\": \"8536\",\r\n      \"loc_data\": \"{2654,5600,0,1,3}-{2650,5600,0,0,3}-{2662,5593,0,0,3}-{2653,5590,0,0,3}-{2644,5592,0,0,3-{2644,5601,0,0,3}-{2654,5604,0,0,3}-{2663,5606,0,0,3}-{2670,5597,0,0,3}-{2657,5589,0,0,3}-\"\r\n    },\r\n    {\r\n      \"npc_id\": \"7601\",\r\n      \"loc_data\": \"{1697,5605,0,0,6}\"\r\n    },\r\n    {\r\n      \"npc_id\": 3579,\r\n      \"loc_data\": \"{3195,3263,0,1,0}\"\r\n    },\r\n    {\r\n      \"npc_id\": 5424,\r\n      \"loc_data\": \"{2594,3269,0,0,0}\"\r\n    }\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/data/configs/npc_spawns.json	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/data/configs/npc_spawns.json	(date 1597089529737)
@@ -1466,7 +1466,7 @@
     },
     {
       "npc_id": "558",
-      "loc_data": "{3013,3221,0,1,6}-{160,27,0,1,7}"
+      "loc_data": "{3013,3221,0,1,6}"
     },
     {
       "npc_id": "559",
@@ -1477,10 +1477,6 @@
       "loc_data": "{2766,3117,0,1,6}"
     },
     {
-      "npc_id": "561",
-      "loc_data": "{156,52,0,1,3}"
-    },
-    {
       "npc_id": "562",
       "loc_data": "{2799,3438,0,1,1}"
     },
@@ -1534,7 +1530,7 @@
     },
     {
       "npc_id": "576",
-      "loc_data": "{2836,3447,0,1,4}-{161,42,0,1,6}"
+      "loc_data": "{2836,3447,0,1,4}"
     },
     {
       "npc_id": "577",
@@ -1546,7 +1542,7 @@
     },
     {
       "npc_id": "579",
-      "loc_data": "{3034,9845,0,1,3}-{147,15,0,1,3}"
+      "loc_data": "{3034,9845,0,1,3}"
     },
     {
       "npc_id": "580",
@@ -3430,11 +3426,11 @@
     },
     {
       "npc_id": "1597",
-      "loc_data": "{3146,9913,0,1,6}-{168,50,0,1,3}"
+      "loc_data": "{3146,9913,0,1,6}"
     },
     {
       "npc_id": "1598",
-      "loc_data": "{2447,4429,0,1,6}-{162,54,0,1,6}"
+      "loc_data": "{2447,4429,0,1,6}"
     },
     {
       "npc_id": "1600",
@@ -4197,10 +4193,6 @@
       "loc_data": "{3105,3554,0,1,1}"
     },
     {
-      "npc_id": "2259",
-      "loc_data": "{155,55,0,1,6}"
-    },
-    {
       "npc_id": "2260",
       "loc_data": "{3259,3385,0,1,6}"
     },
@@ -9242,7 +9234,7 @@
     },
     {
       "npc_id": "6971",
-      "loc_data": "{2926,3443,0,0,5}-{149,39,0,1,7}"
+      "loc_data": "{2926,3443,0,0,5}"
     },
     {
       "npc_id": "6997",
@@ -9914,15 +9906,15 @@
     },
     {
       "npc_id": "8273",
-      "loc_data": "{2931,3536,0,1,5}-{166,54,0,1,6}"
+      "loc_data": "{2931,3536,0,1,5}"
     },
     {
       "npc_id": "8274",
-      "loc_data": "{3514,3513,0,1,6}-{168,53,0,1,3}"
+      "loc_data": "{3514,3513,0,1,6}"
     },
     {
       "npc_id": "8275",
-      "loc_data": "{2869,2982,1,1,5}-{169,52,0,1,3}"
+      "loc_data": "{2869,2982,1,1,5}"
     },
     {
       "npc_id": "8349",
Index: Server/src/main/java/Server/plugin/skill/farming/FarmingEquipment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.farming;\r\n\r\nimport core.game.component.CloseEvent;\r\nimport core.game.component.Component;\r\nimport core.game.container.Container;\r\nimport core.game.container.ContainerType;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.item.Item;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Represents a managing class used for farming equipment.\r\n * @author Vexia\r\n */\r\npublic final class FarmingEquipment implements SavingModule {\r\n\r\n\t/**\r\n\t * Represents the items to use in the store.\r\n\t */\r\n\tprivate static final Item[] ITEMS = new Item[] { new Item(5341), new Item(5343), new Item(952), new Item(5329), new Item(5331), new Item(5325), new Item(1925), new Item(6032), new Item(6034) };\r\n\r\n\t/**\r\n\t * Represents the watering cans.\r\n\t */\r\n\tprivate static final Item[] WATERING_CANS = new Item[] { new Item(5340), new Item(5339), new Item(5338), new Item(5337), new Item(5336), new Item(5335), new Item(5334), new Item(5333), new Item(5331) };\r\n\r\n\t/**\r\n\t * Represents the equipment store component.\r\n\t */\r\n\tprivate static final Component STORE_COMPONENT = new Component(125).setCloseEvent(new StoreCloseEvent());\r\n\r\n\t/**\r\n\t * Represents the tab component.\r\n\t */\r\n\tprivate static final Component TAB_COMPONENT = new Component(126);\r\n\r\n\t/**\r\n\t * Represents the config used for the store.\r\n\t */\r\n\tprivate static final int CONFIG = 615;\r\n\r\n\t/**\r\n\t * Represents the container.\r\n\t */\r\n\tprivate final Container container = new Container(9, ContainerType.ALWAYS_STACK);\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tcontainer.save(buffer);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tcontainer.parse(buffer);\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to open the equipment store.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void open(final Player player) {\r\n\t\tplayer.getInterfaceManager().open(STORE_COMPONENT);\r\n\t\tplayer.getInterfaceManager().openSingleTab(TAB_COMPONENT);\r\n\t\tupdate(player);\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to store an item from a slot.\r\n\t * @param player the player.\r\n\t * @param slot the slot.\r\n\t * @param amount the amount.\r\n\t * @return {@code True} if stored.\r\n\t */\r\n\tpublic boolean store(final Player player, final int slot, int amount) {\r\n\t\tfinal String name = getItemName(slot);\r\n\t\tif (!hasItem(player, slot, false)) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You haven't got \" + (name.equals(\"secateurs\") || name.equals(\"supercompost\") || name.equals(\"compost\") ? \"any \" : \"a \") + name + \" to store.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfinal int inventoryAmount = player.getInventory().getAmount(slot == 4 ? new Item(getWateringCan(player).getId(), 1) : ITEMS[slot]);\r\n\t\tif (amount > inventoryAmount) {\r\n\t\t\tamount = inventoryAmount;\r\n\t\t}\r\n\t\tif (amount > getMaxAdd(slot)) {\r\n\t\t\tamount = getMaxAdd(slot);\r\n\t\t}\r\n\t\tif ((getEquipmentAmount(slot) + amount) > getMaxAdd(slot)) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You cannot store more than \" + getAddName(slot) + \" \" + name + (getMaxAdd(slot) > 1 ? \"s\" : \"\") + \" in here.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfinal Item item = slot == 4 ? new Item(getWateringCan(player).getId(), amount) : new Item(ITEMS[slot].getId(), amount);\r\n\t\tif (player.getInventory().remove(item)) {\r\n\t\t\tif (slot > 5) {\r\n\t\t\t\tamount += getEquipmentAmount(slot);\r\n\t\t\t}\r\n\t\t\tif (slot >= 6) {\r\n\t\t\t\tint oldAmt = container.getAmount(item);\r\n\t\t\t\tcontainer.replace(new Item(item.getId(), item.getAmount() + oldAmt), slot, true);\r\n\t\t\t} else {\r\n\t\t\t\tcontainer.replace(new Item(item.getId(), item.getAmount()), slot, true);\r\n\t\t\t}\r\n\t\t\tupdate(player);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to remove an item from your equipment store.\r\n\t * @param player the player.\r\n\t * @param slot the slot.\r\n\t * @param amount the amount.\r\n\t * @return {@code True} if removed.\r\n\t */\r\n\tpublic boolean remove(final Player player, final int slot, int amount) {\r\n\t\tfinal String name = getItemName(slot);\r\n\t\tif (!hasItem(player, slot, true)) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You haven't got \" + (name.equals(\"secateurs\") || name.equals(\"supercompost\") || name.equals(\"compost\") ? \"any \" : \"a \") + name + \" stored in here.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (amount == 0) {\r\n\t\t\tamount = getEquipmentAmount(slot);\r\n\t\t}\r\n\t\tif (amount > getEquipmentAmount(slot)) {\r\n\t\t\tamount = getEquipmentAmount(slot);\r\n\t\t}\r\n\t\tfinal Item item = new Item(container.get(slot).getId(), amount);\r\n\t\tif (!player.getInventory().hasSpaceFor(item)) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You don't have room to hold that.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (player.getInventory().add(item)) {\r\n\t\t\tcontainer.remove(item);\r\n\t\t\tupdate(player);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to update the interface.\r\n\t * @param player the player.\r\n\t */\r\n\tprivate void update(final Player player) {\r\n\t\tplayer.getConfigManager().set(CONFIG, getConfigHash());\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the config hash.\r\n\t * @return the config hash.\r\n\t */\r\n\tprivate int getConfigHash() {\r\n\t\tint hash = getEquipmentAmount(0);\r\n\t\thash |= getEquipmentAmount(1) << 1;\r\n\t\thash |= getEquipmentAmount(2) << 2;\r\n\t\thash |= getEquipmentAmount(3) << 3;\r\n\t\thash |= getCanIndex() << 4;\r\n\t\thash |= getEquipmentAmount(5) << 8;\r\n\t\thash |= getEquipmentAmount(6) << 9;\r\n\t\thash |= getEquipmentAmount(7) << 14;\r\n\t\thash |= getEquipmentAmount(8) << 22;\r\n\t\treturn hash;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the amount on a slot.\r\n\t * @param slot the slot.\r\n\t * @return the equipment.\r\n\t */\r\n\tpublic int getEquipmentAmount(int slot) {\r\n\t\tfinal Item i = container.get(slot);\r\n\t\treturn i == null ? 0 : i.getAmount();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the inventory amount.\r\n\t * @param player the player.\r\n\t * @param slot the slot.\r\n\t * @return the inventory amount.\r\n\t */\r\n\tpublic int getInventoryAmount(final Player player, int slot) {\r\n\t\tif (slot == 4) {\r\n\t\t\treturn player.getInventory().getAmount(getWateringCan(player));\r\n\t\t}\r\n\t\tif (slot < 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn player.getInventory().getAmount(ITEMS[slot]);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the maximum add of an item to a slot.\r\n\t * @param slot the slot..\r\n\t * @return the maximum amt allowed to be added.\r\n\t */\r\n\tpublic int getMaxAdd(int slot) {\r\n\t\treturn slot < 6 ? 1 : slot == 6 ? 31 : 255;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the add name.\r\n\t * @param slot the slot.\r\n\t * @return the add name.\r\n\t */\r\n\tprivate String getAddName(int slot) {\r\n\t\treturn slot < 6 ? \"one\" : slot == 6 ? \"thirty one\" : \"two hundred fifty five\";\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has the item.\r\n\t * @param player the player.two hundred andtwo hundred fifty f\r\n\t * @param slot the slot.\r\n\t * @param store the store.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tprivate boolean hasItem(final Player player, int slot, final boolean store) {\r\n\t\treturn store ? container.get(slot) != null : getInventoryAmount(player, slot) != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the can index.\r\n\t * @return the index.\r\n\t */\r\n\tprivate int getCanIndex() {\r\n\t\tint canIndex = 0;\r\n\t\tfor (int i = 0; i < WATERING_CANS.length; i++) {\r\n\t\t\tif (container.get(4) == null) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (container.get(4).getId() == WATERING_CANS[i].getId()) {\r\n\t\t\t\tcanIndex = 9 - i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn canIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the formated item name.\r\n\t * @param slot the slot.\r\n\t * @return the name.\r\n\t */\r\n\tprivate String getItemName(int slot) {\r\n\t\tif (slot == 4) {\r\n\t\t\treturn \"watering can\";\r\n\t\t}\r\n\t\tif (slot < 0) {\r\n\t\t\treturn \"report me\";\r\n\t\t}\r\n\t\treturn ITEMS[slot].getName().toLowerCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets thes watering can to store.\r\n\t * @param player the player.\r\n\t * @return the item.\r\n\t */\r\n\tprivate Item getWateringCan(final Player player) {\r\n\t\tfor (Item i : WATERING_CANS) {\r\n\t\t\tif (player.getInventory().containsItem(i)) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the container.\r\n\t * @return The container.\r\n\t */\r\n\tpublic Container getContainer() {\r\n\t\treturn container;\r\n\t}\r\n\r\n\t/**\r\n\t * Represents the close event of the equipment store.\r\n\t * @author 'Vexia\r\n\t * @version 1.0\r\n\t */\r\n\tpublic static final class StoreCloseEvent implements CloseEvent {\r\n\r\n\t\t@Override\r\n\t\tpublic boolean close(Player player, Component c) {\r\n\t\t\tplayer.getInterfaceManager().closeSingleTab();\r\n\t\t\tplayer.getPacketDispatch().sendRunScript(101, \"\");\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/farming/FarmingEquipment.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/farming/FarmingEquipment.java	(date 1597089529808)
@@ -4,6 +4,7 @@
 import core.game.component.Component;
 import core.game.container.Container;
 import core.game.container.ContainerType;
+import core.game.content.ItemNames;
 import core.game.node.entity.player.Player;
 import core.game.node.entity.player.info.login.SavingModule;
 import core.game.node.item.Item;
@@ -19,13 +20,28 @@
 	/**
 	 * Represents the items to use in the store.
 	 */
-	private static final Item[] ITEMS = new Item[] { new Item(5341), new Item(5343), new Item(952), new Item(5329), new Item(5331), new Item(5325), new Item(1925), new Item(6032), new Item(6034) };
+	private static final Item[] ITEMS = new Item[] {
+			new Item(ItemNames.RAKE_5341),
+			new Item(ItemNames.SEED_DIBBER_5343),
+			new Item(ItemNames.SPADE_952),
+			new Item(ItemNames.SECATEURS_5329),
+			new Item(ItemNames.WATERING_CAN_5331),
+			new Item(ItemNames.GARDENING_TROWEL),
+			new Item(ItemNames.BUCKET_1925),
+			new Item(ItemNames.COMPOST_6032),
+			new Item(ItemNames.SUPERCOMPOST_6034)
+	};
 
 	/**
 	 * Represents the watering cans.
 	 */
 	private static final Item[] WATERING_CANS = new Item[] { new Item(5340), new Item(5339), new Item(5338), new Item(5337), new Item(5336), new Item(5335), new Item(5334), new Item(5333), new Item(5331) };
 
+	/**
+	 * Types of storable secateurs
+	 */
+	private static final Item[] SECATEURS = new Item[] { new Item(ItemNames.MAGIC_SECATEURS_7409), new Item(ItemNames.SECATEURS_5329) };
+
 	/**
 	 * Represents the equipment store component.
 	 */
@@ -79,7 +95,7 @@
 			player.getPacketDispatch().sendMessage("You haven't got " + (name.equals("secateurs") || name.equals("supercompost") || name.equals("compost") ? "any " : "a ") + name + " to store.");
 			return false;
 		}
-		final int inventoryAmount = player.getInventory().getAmount(slot == 4 ? new Item(getWateringCan(player).getId(), 1) : ITEMS[slot]);
+		final int inventoryAmount = player.getInventory().getAmount(slot == 3 ? new Item(getSecateurs(player).getId(), 1) : slot == 4 ? new Item(getWateringCan(player).getId(), 1) : ITEMS[slot]);
 		if (amount > inventoryAmount) {
 			amount = inventoryAmount;
 		}
@@ -90,11 +106,8 @@
 			player.getPacketDispatch().sendMessage("You cannot store more than " + getAddName(slot) + " " + name + (getMaxAdd(slot) > 1 ? "s" : "") + " in here.");
 			return false;
 		}
-		final Item item = slot == 4 ? new Item(getWateringCan(player).getId(), amount) : new Item(ITEMS[slot].getId(), amount);
+		final Item item = slot == 3 ? new Item(getSecateurs(player).getId(), amount) : slot == 4 ? new Item(getWateringCan(player).getId(), amount) : new Item(ITEMS[slot].getId(), amount);
 		if (player.getInventory().remove(item)) {
-			if (slot > 5) {
-				amount += getEquipmentAmount(slot);
-			}
 			if (slot >= 6) {
 				int oldAmt = container.getAmount(item);
 				container.replace(new Item(item.getId(), item.getAmount() + oldAmt), slot, true);
@@ -145,6 +158,7 @@
 	 */
 	private void update(final Player player) {
 		player.getConfigManager().set(CONFIG, getConfigHash());
+		player.getConfigManager().get(CONFIG);
 	}
 
 	/**
@@ -161,6 +175,7 @@
 		hash |= getEquipmentAmount(6) << 9;
 		hash |= getEquipmentAmount(7) << 14;
 		hash |= getEquipmentAmount(8) << 22;
+		hash |= getSecateursMagic() ? 1 << 30 : 0; // magic secateurs bit
 		return hash;
 	}
 
@@ -181,6 +196,9 @@
 	 * @return the inventory amount.
 	 */
 	public int getInventoryAmount(final Player player, int slot) {
+		if (slot == 3) {
+			return player.getInventory().getAmount(getSecateurs(player));
+		}
 		if (slot == 4) {
 			return player.getInventory().getAmount(getWateringCan(player));
 		}
@@ -237,6 +255,13 @@
 		return canIndex;
 	}
 
+	/**
+	 * Gets whether stored secateurs are magic or not
+	 */
+	private boolean getSecateursMagic() {
+		return container.get(3) == null ? false : (container.get(3).getId() == ItemNames.MAGIC_SECATEURS_7409);
+	}
+
 	/**
 	 * Gets the formated item name.
 	 * @param slot the slot.
@@ -265,6 +290,18 @@
 		}
 		return null;
 	}
+
+	/**
+	 * Gets secateurs type from inventory to store
+	 */
+	private Item getSecateurs(final Player player) {
+		for (Item i : SECATEURS) {
+			if (player.getInventory().containsItem((i))) {
+				return i;
+			}
+		}
+		return null;
+	}
 
 	/**
 	 * Gets the container.
Index: Server/src/main/java/Server/plugin/skill/farming/FarmingManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.farming;\r\n\r\nimport plugin.skill.farming.compost.CompostManager;\r\nimport plugin.skill.farming.pot.SeedlingManager;\r\nimport plugin.skill.farming.wrapper.PatchWrapper;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\n\r\n/**\r\n * Represents a managing class used for farming.\r\n * @author Vexia\r\n */\r\npublic final class FarmingManager implements SavingModule {\r\n\r\n\t/**\r\n\t * Represents the store of your farming equipment.\r\n\t */\r\n\tprivate final FarmingEquipment equipment = new FarmingEquipment();\r\n\r\n\t/**\r\n\t * Represents the managing class of composts.\r\n\t */\r\n\tprivate final CompostManager compostManager = new CompostManager();\r\n\r\n\t/**\r\n\t * Represents the farming patch representations if active.\r\n\t */\r\n\tprivate final List<PatchWrapper> patches = new ArrayList<>();\r\n\r\n\t/**\r\n\t * Represents the managing class of seedlings.\r\n\t */\r\n\tprivate final SeedlingManager seedlingManager;\r\n\r\n\t/**\r\n\t * Represents the player instance.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * Constructs a new {@code FarmingManager} {@code Object}.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic FarmingManager(final Player player) {\r\n\t\tthis.player = player;\r\n\t\tthis.seedlingManager = new SeedlingManager(player);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tif (equipment.getContainer().itemCount() != 0) {\r\n\t\t\tequipment.save(buffer.put((byte) 1));\r\n\t\t}\r\n\t\tif (compostManager.getBins().size() != 0) {\r\n\t\t\tcompostManager.save(buffer.put((byte) 2));\r\n\t\t}\r\n\t\tif (patches.size() != 0) {\r\n\t\t\tbuffer.put((byte) 3);\r\n\t\t\tbuffer.putInt(patches.size());\r\n\t\t\tfor (PatchWrapper wrapper : patches) {\r\n\t\t\t\twrapper.save(buffer);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (seedlingManager.getSeedlings().size() > 0) {\r\n\t\t\tseedlingManager.save(buffer.put((byte) 4));\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get() & 0xFF) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tequipment.parse(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tcompostManager.parse(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tint size = buffer.getInt();\r\n\t\t\t\tPatchWrapper wrapper;\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\twrapper = new PatchWrapper(player, buffer.getInt());\r\n\t\t\t\t\twrapper.parse(buffer);\r\n\t\t\t\t\tpatches.add(wrapper);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tseedlingManager.parse(buffer);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to cycle the life of patches.\r\n\t */\r\n\tpublic void cycle() {\r\n\t\tfinal Iterator<PatchWrapper> iterator = patches.iterator();\r\n\t\tPatchWrapper wrapper;\r\n\t\twhile (iterator.hasNext()) {\r\n\t\t\twrapper = iterator.next();\r\n\t\t\tif (wrapper.isDefault()) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\twrapper.getCycle().cycle(player);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the patch wrapper by the id.\r\n\t * @param wrapperId the id.\r\n\t * @param newInstance if a new one should be created.\r\n\t * @return the wrapper.\r\n\t */\r\n\tpublic PatchWrapper getPatchWrapper(final int wrapperId, boolean newInstance) {\r\n\t\tfor (PatchWrapper patch : patches) {\r\n\t\t\tif (patch.getWrapperId() == wrapperId) {\r\n\t\t\t\treturn patch;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!newInstance) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tfinal PatchWrapper patch = new PatchWrapper(player, wrapperId);\r\n\t\tpatches.add(patch);\r\n\t\treturn patch;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the patch wrapper by the id.\r\n\t * @param wrapperId the id.\r\n\t * @return the wrapper.\r\n\t */\r\n\tpublic PatchWrapper getPatchWrapper(final int wrapperId) {\r\n\t\treturn getPatchWrapper(wrapperId, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the player.\r\n\t * @return The player.\r\n\t */\r\n\tpublic Player getPlayer() {\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the equipment.\r\n\t * @return The equipment.\r\n\t */\r\n\tpublic FarmingEquipment getEquipment() {\r\n\t\treturn equipment;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the patches.\r\n\t * @return The patches.\r\n\t */\r\n\tpublic List<PatchWrapper> getPatches() {\r\n\t\treturn patches;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the compostManager.\r\n\t * @return The compostManager.\r\n\t */\r\n\tpublic CompostManager getCompostManager() {\r\n\t\treturn compostManager;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the seedlingManager.\r\n\t * @return The seedlingManager.\r\n\t */\r\n\tpublic SeedlingManager getSeedlingManager() {\r\n\t\treturn seedlingManager;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/farming/FarmingManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/farming/FarmingManager.java	(date 1597089529809)
@@ -1,5 +1,7 @@
 package plugin.skill.farming;
 
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 import plugin.skill.farming.compost.CompostManager;
 import plugin.skill.farming.pot.SeedlingManager;
 import plugin.skill.farming.wrapper.PatchWrapper;
@@ -72,6 +74,21 @@
 		buffer.put((byte) 0);
 	}
 
+	public void parseWrappers(JSONArray data){
+		for (int i = 0; i < data.size(); i++) {
+			JSONObject wrapperData = (JSONObject) data.get(i);
+			JSONObject cycleData = (JSONObject) wrapperData.get("cycle");
+
+			PatchWrapper wrapper = new PatchWrapper(player, Integer.parseInt(wrapperData.get("wrapperId").toString()));
+			wrapper.getCycle().setCompostThreshold(Integer.parseInt(cycleData.get("compostThreshold").toString()));
+			wrapper.getCycle().setGrowthTime(Long.parseLong(cycleData.get("growthTime").toString()));
+			wrapper.getCycle().setHarvestAmount(Integer.parseInt(cycleData.get("harvestAmount").toString()));
+			wrapper.getCycle().setProtection(Boolean.parseBoolean(cycleData.get("protection").toString()));
+			wrapper.setNode(wrapper.getPatch().getNodes()[Integer.parseInt(wrapperData.get("nodeId").toString())]);
+			patches.add(wrapper);
+		}
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
Index: Server/src/main/java/Server/plugin/skill/construction/Servant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.construction;\r\n\r\n\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.item.Item;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Represents a player's servant.\r\n * @author Emperor\r\n *\r\n */\r\npublic final class Servant extends NPC {\r\n\r\n\t/**\r\n\t * The servant type.\r\n\t */\r\n\tprivate final ServantType type;\r\n\t\r\n\t/**\r\n\t * The item the servant is carrying.\r\n\t */\r\n\tprivate Item item;\r\n\t\r\n\t/**\r\n\t * The amount this servant has been used.\r\n\t */\r\n\tprivate int uses;\r\n\t\r\n\t/**\r\n\t * If the servant is greeting players entering the house.\r\n\t */\r\n\tprivate boolean greet;\r\n\t\r\n\t/**\r\n\t * Constructs a new {@code Servant} {@code Object}.\r\n\t * @param type The servant type.\r\n\t */\r\n\tpublic Servant(ServantType type) {\r\n\t\tsuper(type.getId());\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the servant details.\r\n\t * @param buffer The buffer to write on.\r\n\t */\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tbuffer.put((byte) type.ordinal());\r\n\t\tbuffer.putShort((byte) uses);\r\n\t\tif (item == null) {\r\n\t\t\tbuffer.putShort((short) -1);\r\n\t\t} else {\r\n\t\t\tbuffer.putShort((short) item.getId());\r\n\t\t\tbuffer.putInt(item.getAmount());\r\n\t\t}\r\n\t\tbuffer.put((byte) (greet ? 1 : 0));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the servant from the buffer.\r\n\t * @param buffer The buffer.\r\n\t * @return The servant.\r\n\t */\r\n\tpublic static Servant parse(ByteBuffer buffer) {\r\n\t\tint type = buffer.get();\r\n\t\tif (type == -1) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tServant servant = new Servant(ServantType.values()[type]);\r\n\t\tservant.uses = buffer.getShort() & 0xFFFF;\r\n\t\tint itemId = buffer.getShort() & 0xFFFF;\r\n\t\tif ((short) itemId != -1) {\r\n\t\t\tservant.item = new Item(itemId, buffer.getInt());\r\n\t\t}\r\n\t\tservant.greet = buffer.get() == 1;\r\n\t\treturn servant;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the item value.\r\n\t * @return The item.\r\n\t */\r\n\tpublic Item getItem() {\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the item value.\r\n\t * @param item The item to set.\r\n\t */\r\n\tpublic void setItem(Item item) {\r\n\t\tthis.item = item;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the uses value.\r\n\t * @return The uses.\r\n\t */\r\n\tpublic int getUses() {\r\n\t\treturn uses;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the uses value.\r\n\t * @param uses The uses to set.\r\n\t */\r\n\tpublic void setUses(int uses) {\r\n\t\tthis.uses = uses;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the greet value.\r\n\t * @return The greet.\r\n\t */\r\n\tpublic boolean isGreet() {\r\n\t\treturn greet;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the greet value.\r\n\t * @param greet The greet to set.\r\n\t */\r\n\tpublic void setGreet(boolean greet) {\r\n\t\tthis.greet = greet;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the type value.\r\n\t * @return The type.\r\n\t */\r\n\tpublic ServantType getType() {\r\n\t\treturn type;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/construction/Servant.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/construction/Servant.java	(date 1597089529807)
@@ -3,6 +3,7 @@
 
 import core.game.node.entity.npc.NPC;
 import core.game.node.item.Item;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 
@@ -63,6 +64,20 @@
 	 * @param buffer The buffer.
 	 * @return The servant.
 	 */
+
+	public static Servant parse(JSONObject data){
+		int type = Integer.parseInt( data.get("type").toString());
+		Servant servant = new Servant(ServantType.values()[type]);
+		servant.uses = Integer.parseInt( data.get("uses").toString());
+		Object itemRaw = data.get("item");
+		if(itemRaw != null){
+			JSONObject item = (JSONObject) itemRaw;
+			servant.item = new Item((int)item.get("id"),(int)item.get("amount"));
+		}
+		servant.greet = (boolean) data.get("greet");
+		return servant;
+	}
+
 	public static Servant parse(ByteBuffer buffer) {
 		int type = buffer.get();
 		if (type == -1) {
Index: Server/src/main/java/Server/core/ServerConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core;\r\n\r\nimport core.game.system.mysql.SQLManager;\r\nimport core.game.world.map.Location;\r\nimport core.tools.mysql.Database;\r\n\r\nimport java.io.File;\r\n\r\n/**\r\n * A class holding constants of the server.\r\n * @author Emperor\r\n * @author Vexia\r\n * \r\n */\r\npublic final class ServerConstants {\r\n\t\r\n\t/**\r\n\t * The cache path.\r\n\t */\r\n\tpublic static final String CACHE_PATH = \"data/cache/\";\r\n\r\n\t/**\r\n\t * The store path.\r\n\t */\r\n\tpublic static final String STORE_PATH = \"data/store/\";\r\n\t\r\n\t/**\r\n\t * The player account path.\r\n\t */\r\n\tpublic static final String PLAYER_SAVE_PATH = \"data/players/\";\r\n\r\n\tpublic static final String PLAYER_ATTRIBUTE_PATH = \"data\" + File.separator + \"players\" + File.separator + \"attributes\" + File.separator;\r\n\r\n\t/**\r\n\t * The maximum amount of players.\r\n\t */\r\n\tpublic static final int MAX_PLAYERS = (1 << 11) - 1;\r\n\r\n\t/**\r\n\t * The maximum amount of NPCs.\r\n\t */\r\n\tpublic static final int MAX_NPCS = (1 << 15) - 1;\r\n\t\r\n\t/**\r\n\t * The start location for a fresh account.\r\n\t */\r\n\tpublic static final Location START_LOCATION = Location.create(2524, 5002, 0);\r\n\t\r\n\t/**\r\n\t * The main home teleport location.\r\n\t */\r\n\tpublic static final Location HOME_LOCATION = Location.create(3222, 3218, 0);\r\n\t\r\n\t/**\r\n\t * The teleport destinations.\r\n\t */\r\n\tpublic static final Object[][] TELEPORT_DESTINATIONS = {\r\n\t\t\t{ Location.create(2974, 4383, 2), \"corp\", \"corporal\", \"corporeal\" },\r\n\t\t\t{ Location.create(2659, 2649, 0), \"pc\", \"pest control\", \"pest\" },\r\n\t\t\t{ Location.create(3293, 3184, 0), \"al kharid\", \"alkharid\", \"kharid\" },\r\n\t\t\t{ Location.create(3222, 3217, 0), \"lumbridge\", \"lumby\" },\r\n\t\t\t{ Location.create(3110, 3168, 0), \"wizard tower\", \"wizards tower\", \"tower\", \"wizards\" },\r\n\t\t\t{ Location.create(3083, 3249, 0), \"draynor\", \"draynor village\" },\r\n\t\t\t{ Location.create(3019, 3244, 0), \"port sarim\", \"sarim\" },\r\n\t\t\t{ Location.create(2956, 3209, 0), \"rimmington\" },\r\n\t\t\t{ Location.create(2965, 3380, 0), \"fally\", \"falador\" },\r\n\t\t\t{ Location.create(2895, 3436, 0), \"taverly\" },\r\n\t\t\t{ Location.create(3080, 3423, 0), \"barbarian village\", \"barb\" },\r\n\t\t\t{ Location.create(3213, 3428, 0), \"varrock\" },\r\n\t\t\t{ Location.create(3164, 3485, 0), \"grand exchange\", \"ge\" },\r\n\t\t\t{ Location.create(2917, 3175, 0), \"karamja\" },\r\n\t\t\t{ Location.create(2450, 5165, 0), \"tzhaar\" },\r\n\t\t\t{ Location.create(2795, 3177, 0), \"brimhaven\" },\r\n\t\t\t{ Location.create(2849, 2961, 0), \"shilo village\", \"shilo\" },\r\n\t\t\t{ Location.create(2605, 3093, 0), \"yanille\" },\r\n\t\t\t{ Location.create(2663, 3305, 0), \"ardougne\", \"ardy\" },\r\n\t\t\t{ Location.create(2450, 3422, 0), \"gnome stronghold\", \"gnome\" },\r\n\t\t\t{ Location.create(2730, 3485, 0), \"camelot\", \"cammy\", \"seers\" },\r\n\t\t\t{ Location.create(2805, 3435, 0), \"catherby\" },\r\n\t\t\t{ Location.create(2659, 3657, 0), \"rellekka\" },\r\n\t\t\t{ Location.create(2890, 3676, 0), \"trollheim\" },\r\n\t\t\t{ Location.create(2914, 3746, 0), \"godwars\", \"gwd\", \"god wars\" },\r\n\t\t\t{ Location.create(3180, 3684, 0), \"bounty hunter\", \"bh\" },\r\n\t\t\t{ Location.create(3272, 3687, 0), \"clan wars\", \"clw\" },\r\n\t\t\t{ Location.create(3090, 3957, 0), \"mage arena\", \"mage\", \"magearena\", \"arena\" },\r\n\t\t\t{ Location.create(3069, 10257, 0), \"king black dragon\", \"kbd\" },\r\n\t\t\t{ Location.create(3359, 3416, 0), \"digsite\" }, \r\n\t\t\t{ Location.create(3488, 3489, 0), \"canifis\" },\r\n\t\t\t{ Location.create(3428, 3526, 0), \"slayer tower\", \"slayer\" },\r\n\t\t\t{ Location.create(3502, 9483, 2), \"kalphite queen\", \"kq\", \"kalphite hive\", \"kalphite\" },\r\n\t\t\t{ Location.create(3233, 2913, 0), \"pyramid\" },\r\n\t\t\t{ Location.create(3419, 2917, 0), \"nardah\" },\r\n\t\t\t{ Location.create(3482, 3090, 0), \"uzer\" },\r\n\t\t\t{ Location.create(3358, 2970, 0), \"pollnivneach\", \"poln\" },\r\n\t\t\t{ Location.create(3305, 2788, 0), \"sophanem\" },\r\n\t\t\t{ Location.create(2898, 3544, 0), \"burthorpe\", \"burthorp\" },\r\n\t\t\t{ Location.create(3088, 3491, 0), \"edge\", \"edgeville\" },\r\n\t\t\t{ Location.create(3169, 3034, 0), \"bedabin\" },\r\n\t\t\t{ Location.create(3565, 3289, 0), \"barrows\" },\r\n\t\t};\r\n\t\r\n\t/**\r\n\t * The teleport destinations, intended for Grandpa Jack.\r\n\t */\r\n\tpublic static final Object[][] TELEPORT_DESTINATIONS_DONATOR = {\r\n\t\t\t{ Location.create(2914, 3746, 0), \"godwars\", \"gwd\", \"god wars\" },\r\n\t\t\t{ Location.create(2659, 2649, 0), \"pc\", \"pest control\", \"pest\" },\r\n\t\t\t{ Location.create(3293, 3184, 0), \"al kharid\", \"alkharid\", \"kharid\" },\r\n\t\t\t{ Location.create(3222, 3217, 0), \"lumbridge\", \"lumby\" },\r\n\t\t\t{ Location.create(3110, 3168, 0), \"wizard tower\", \"wizards tower\", \"tower\", \"wizards\" },\r\n\t\t\t{ Location.create(3083, 3249, 0), \"draynor\", \"draynor village\" },\r\n\t\t\t{ Location.create(3019, 3244, 0), \"port sarim\", \"sarim\" },\r\n\t\t\t{ Location.create(2956, 3209, 0), \"rimmington\" },\r\n\t\t\t{ Location.create(2965, 3380, 0), \"fally\", \"falador\" },\r\n\t\t\t{ Location.create(2895, 3436, 0), \"taverly\" },\r\n\t\t\t{ Location.create(3080, 3423, 0), \"barbarian village\", \"barb\" },\r\n\t\t\t{ Location.create(3213, 3428, 0), \"varrock\" },\r\n\t\t\t{ Location.create(3164, 3485, 0), \"grand exchange\", \"ge\" },\r\n\t\t\t{ Location.create(2917, 3175, 0), \"karamja\" },\r\n\t\t\t{ Location.create(2450, 5165, 0), \"tzhaar\" },\r\n\t\t\t{ Location.create(2795, 3177, 0), \"brimhaven\" },\r\n\t\t\t{ Location.create(2849, 2961, 0), \"shilo village\", \"shilo\" },\r\n\t\t\t{ Location.create(2605, 3093, 0), \"yanille\" },\r\n\t\t\t{ Location.create(2663, 3305, 0), \"ardougne\", \"ardy\" },\r\n\t\t\t{ Location.create(2450, 3422, 0), \"gnome stronghold\", \"gnome\" },\r\n\t\t\t{ Location.create(2730, 3485, 0), \"camelot\", \"cammy\", \"seers\" },\r\n\t\t\t{ Location.create(2805, 3435, 0), \"catherby\" },\r\n\t\t\t{ Location.create(2659, 3657, 0), \"rellekka\" },\r\n\t\t\t{ Location.create(2890, 3676, 0), \"trollheim\" },\r\n\t\t\t{ Location.create(3180, 3684, 0), \"bounty hunter\", \"bh\" },\r\n\t\t\t{ Location.create(3272, 3687, 0), \"clan wars\", \"clw\" },\r\n\t\t\t{ Location.create(3090, 3957, 0), \"mage arena\", \"mage\", \"magearena\", \"arena\" },\r\n\t\t\t{ Location.create(3359, 3416, 0), \"digsite\" }, \r\n\t\t\t{ Location.create(3488, 3489, 0), \"canifis\" },\r\n\t\t\t{ Location.create(3428, 3526, 0), \"slayer tower\", \"slayer\" },\r\n\t\t\t{ Location.create(3233, 2913, 0), \"pyramid\" },\r\n\t\t\t{ Location.create(3419, 2917, 0), \"nardah\" },\r\n\t\t\t{ Location.create(3482, 3090, 0), \"uzer\" },\r\n\t\t\t{ Location.create(3358, 2970, 0), \"pollnivneach\", \"poln\" },\r\n\t\t\t{ Location.create(3305, 2788, 0), \"sophanem\" },\r\n\t\t\t{ Location.create(2898, 3544, 0), \"burthorpe\", \"burthorp\" },\r\n\t\t\t{ Location.create(3088, 3491, 0), \"edge\", \"edgeville\" },\r\n\t\t\t{ Location.create(3169, 3034, 0), \"bedabin\" },\r\n\t\t\t{ Location.create(3565, 3311, 0), \"barrows\" },\r\n\t\t};\r\n\t\r\n\t/**\r\n\t * The string of donation messages displayed on an interface.\r\n\t */\r\n\tpublic static final String[] MESSAGES = new String[] { \"Welcome!\" };\r\n\t\r\n\tpublic static final String[] DATABASE_NAMES = {\r\n\t\t\t\"global\",\r\n\t};\r\n\r\n\tpublic static final Database[] DATABASES = {\r\n\t\t\tnew Database(SQLManager.SQL_SERVER_ADDRESS, DATABASE_NAMES[0], (SQLManager.LOCAL ? \"root\" : \"username\"), (SQLManager.LOCAL ? \"\" : \"password\")),\r\n\t};\r\n\t\r\n\t/**\r\n\t * If MySQL is enabled.\r\n\t */\r\n\tpublic static boolean MYSQL = true;\r\n\r\n\tpublic static boolean VALIDATED = false;\r\n\t\r\n\t/**\r\n\t * Constructs a new {@Code ServerConstants} {@Code Object}\r\n\t */\r\n\tprivate ServerConstants() {\r\n\t\t/*\r\n\t\t * empty.\r\n\t\t */\r\n\t}\r\n\t\r\n\tpublic static final Boolean NEW_PLAYER_DEFAULT_CLAN = true;\r\n\tpublic static final String SERVER_NAME = \"Wonderland\";\r\n\t\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/ServerConstants.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/ServerConstants.java	(date 1597089572426)
@@ -172,8 +172,7 @@
 		 * empty.
 		 */
 	}
-	
-	public static final Boolean NEW_PLAYER_DEFAULT_CLAN = true;
-	public static final String SERVER_NAME = "Wonderland";
+
+	public static final String SERVER_NAME = "2009Scape";
 	
 }
Index: Server/src/main/java/Server/plugin/skill/construction/HouseManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.construction;\r\n\r\n\r\n//import org.arios.game.content.global.DeadmanTimedAction;\r\n//import org.arios.game.node.entity.player.info.login.SavingModule;\r\n\r\nimport plugin.dialogue.FacialExpression;\r\nimport plugin.skill.Skills;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.entity.player.link.audio.Audio;\r\nimport core.game.node.object.GameObject;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.*;\r\nimport core.game.world.map.build.DynamicRegion;\r\nimport core.game.world.map.zone.ZoneBorders;\r\nimport core.game.world.map.zone.ZoneBuilder;\r\nimport core.game.world.update.flag.context.Animation;\r\n\r\nimport java.awt.*;\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Manages the player's house.\r\n * @author Emperor\r\n *\r\n */\r\npublic final class HouseManager implements SavingModule {\r\n\r\n\t/**\r\n\t * The current region.\r\n\t */\r\n\tprivate DynamicRegion region;\r\n\t\r\n\t/**\r\n\t * The current region.\r\n\t */\r\n\tprivate DynamicRegion dungeon;\r\n\r\n\t/**\r\n\t * The house location.\r\n\t */\r\n\tprivate HouseLocation location = HouseLocation.NOWHERE;\r\n\r\n\t/**\r\n\t * The house style.\r\n\t */\r\n\tprivate HousingStyle style = HousingStyle.BASIC_WOOD;\r\n\r\n\t/**\r\n\t * The house zone.\r\n\t */\r\n\tprivate final HouseZone zone = new HouseZone(this);\r\n\t\r\n\t/**\r\n\t * The player's house rooms.\r\n\t */\r\n\tprivate final Room[][][] rooms = new Room[4][8][8];\r\n\r\n\t/**\r\n\t * If building mode is enabled.\r\n\t */\r\n\tprivate boolean buildingMode;\r\n\r\n\t/**\r\n\t * If the player has used the portal to lock their house.\r\n\t */\r\n\tprivate boolean locked;\r\n\r\n\t/**\r\n\t * The player's servant.\r\n\t */\r\n\tprivate Servant servant;\r\n\r\n\t/**\r\n\t * If the house has a dungeon.\r\n\t */\r\n\tprivate boolean hasDungeon;\r\n\r\n\t/**\r\n\t * The player's crest.\r\n\t */\r\n\tprivate CrestType crest = CrestType.ASGARNIA;\r\n\t\r\n\t/**\r\n\t * Constructs a new {@code HouseManager} {@code Object}.\r\n\t */\r\n\tpublic HouseManager() {\r\n\t\t/*\r\n\t\t * empty.\r\n\t\t */\r\n\t}\r\n\r\n\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tbuffer.put((byte) location.ordinal());\r\n\t\tbuffer.put((byte) style.ordinal());\r\n\t\tif (hasServant()) {\r\n\t\t\tservant.save(buffer);\r\n\t\t} else {\r\n\t\t\tbuffer.put((byte) -1);\r\n\t\t}\r\n\t\tfor (int z = 0; z < 4; z++) {\r\n\t\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\t\tRoom room = rooms[z][x][y];\r\n\t\t\t\t\tif (room != null) {\r\n\t\t\t\t\t\tbuffer.put((byte) z).put((byte) x).put((byte) y);\r\n\t\t\t\t\t\tbuffer.put((byte) room.getProperties().ordinal());\r\n\t\t\t\t\t\tbuffer.put((byte) room.getRotation().toInteger());\r\n\t\t\t\t\t\tfor (int i = 0; i < room.getHotspots().length; i++) {\r\n\t\t\t\t\t\t\tif (room.getHotspots()[i].getDecorationIndex() > -1) {\r\n\t\t\t\t\t\t\t\tbuffer.put((byte) i);\r\n\t\t\t\t\t\t\t\tbuffer.put((byte) room.getHotspots()[i].getDecorationIndex());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbuffer.put((byte) -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuffer.put((byte) -1);//Eof\r\n\t}\r\n\r\n\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tlocation = HouseLocation.values()[buffer.get() & 0xFF];\r\n\t\tstyle = HousingStyle.values()[buffer.get() & 0xFF];\r\n\t\tservant = Servant.parse(buffer);\r\n\t\tint z = 0;\r\n\t\twhile ((z = buffer.get()) != -1) {\r\n\t\t\tif (z == 3) {\r\n\t\t\t\thasDungeon = true;\r\n\t\t\t}\r\n\t\t\tint x = buffer.get();\r\n\t\t\tint y = buffer.get();\r\n\t\t\tRoom room = rooms[z][x][y] = new Room(RoomProperties.values()[buffer.get() & 0xFF]);\r\n\t\t\troom.configure(style);\r\n\t\t\troom.setRotation(Direction.get(buffer.get() & 0xFF));\r\n\t\t\tint spot = 0;\r\n\t\t\twhile ((spot = buffer.get()) != -1) {\r\n\t\t\t\troom.getHotspots()[spot].setDecorationIndex(buffer.get() & 0xFF);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Enters the player's house.\r\n\t * @param player The player entering.\r\n\t * @param buildingMode If building mode is enabled.\r\n\t * @param teleport if the entry was a teleport.\r\n\t */\r\n\tpublic void enter(final Player player, boolean buildingMode, boolean teleport) {\r\n\t\tenter(player, buildingMode);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Enter's the player's house.\r\n\t * @param player\r\n\t * @param buildingMode\r\n\t */\r\n\tpublic void enter(final Player player, boolean buildingMode) {\r\n\t\tif (HouseManager.this.buildingMode != buildingMode || !isLoaded()) {\r\n\t\t\tHouseManager.this.buildingMode = buildingMode;\r\n\t\t\tconstruct();\r\n\t\t}\r\n\t\tplayer.setAttribute(\"poh_entry\", HouseManager.this);\r\n\t\tplayer.lock(1);\r\n\t\tplayer.sendMessage(\"House location: \" + region.getBaseLocation() + \", entry: \" + getEnterLocation());\r\n\t\tplayer.getProperties().setTeleportLocation(getEnterLocation());\r\n\t\tplayer.getInterfaceManager().openComponent(399);\r\n\t\tplayer.getConfigManager().set(261, buildingMode);\r\n\t\tplayer.getConfigManager().set(262, getRoomAmount());\r\n\t\tplayer.getAudioManager().send(new Audio(984));\r\n//\t\tplayer.getMusicPlayer().unlock(454, true);\r\n\t\tGameWorld.Pulser.submit(new Pulse(1, player) {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean pulse() {\r\n\t\t\t\tif (hasServant()){\r\n\t\t\t\t\tspawnServant();\r\n\t\t\t\t\tif (servant.isGreet()){\r\n\t\t\t\t\t\tplayer.getDialogueInterpreter().sendDialogues(servant.getType().getId(), servant.getType().getId() == 4243 ? FacialExpression.HALF_GUILTY : null, \"Welcome.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n//\t\t\t\tplayer.getInterfaceManager().switchWindowMode(1);\r\n\t\t\t\tplayer.getInterfaceManager().close();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\t/*if (player.getHouseManager() == this && location.equals(HouseLocation.WHITERIDGE)) {\r\n\t\t\t//player.getAchievementDiaryManager().updateTask(player, DiaryType.WHITERIDGE, 2, 1, true);\r\n\t\t}*/\r\n\t\tif (location.equals(HouseLocation.YANILLE)) {\r\n\t\t\t//player.getAchievementDiaryManager().updateTask(player, DiaryType.ARDOUGNE, 1, 5, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Leaves this house.\r\n\t * @param player The player leaving.\r\n\t */\r\n\tpublic static void leave(Player player) {\r\n\t\tHouseManager house = player.getAttribute(\"poh_entry\", player.getHouseManager());\r\n\t\tif (house.getRegion() == null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (house.isInHouse(player)) {\r\n\t\t\tplayer.animate(Animation.RESET);\r\n\t\t\tplayer.setLocation(house.location.getExitLocation());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the building mode.\r\n\t * @param player The house owner.\r\n\t * @param enable If the building mode should be enabled.\r\n\t */\r\n\tpublic void toggleBuildingMode(Player player, boolean enable) {\r\n\t\tif (!isInHouse(player)) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"Building mode really only helps if you're in a house.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (buildingMode != enable) {\r\n\t\t\tif (enable) {\r\n\t\t\t\texpelGuests(player);\r\n\t\t\t}\r\n\t\t\tbuildingMode = enable;\r\n\t\t\treload(player, enable);\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"Building mode is now \" + (buildingMode ? \"on.\" : \"off.\"));\r\n\t\t}\r\n\t}\r\n\r\n    /**\r\n     * Reloads the house.\r\n     * @param player The player.\r\n     * @param buildingMode If building mode should be enabled.\r\n     */\r\n    public void reload(Player player, boolean buildingMode) {\r\n        DynamicRegion r = region;\r\n        if ((player.getViewport().getRegion() == dungeon)) {\r\n            r = dungeon;\r\n        }\r\n        int diffX = player.getLocation().getX() - r.getBaseLocation().getX();\r\n        int diffY = player.getLocation().getY() - r.getBaseLocation().getY();\r\n        int diffZ = player.getLocation().getZ() - r.getBaseLocation().getZ();\r\n        region = null;\r\n        dungeon = null;\r\n        enter(player, buildingMode, false);\r\n        player.getProperties().setTeleportLocation((player.getViewport().getRegion() == dungeon ? dungeon : region).getBaseLocation().transform(diffX, diffY, diffZ));\r\n    }\r\n\r\n\t/**\r\n\t * Expels the guests from the house.\r\n\t * @param player The house owner.\r\n\t */\r\n\tpublic void expelGuests(Player player) {\r\n\t\tif (isLoaded()) {\r\n\t\t\tfor (RegionPlane plane : region.getPlanes()) {\r\n\t\t\t\tfor (Player p : plane.getPlayers()) {\r\n\t\t\t\t\tif (p != player) {\r\n\t\t\t\t\t\tleave(p);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (dungeon != null) {\r\n\t\t\t\tfor (RegionPlane plane : dungeon.getPlanes()) {\r\n\t\t\t\t\tfor (Player p : plane.getPlayers()) {\r\n\t\t\t\t\t\tif (p != player) {\r\n\t\t\t\t\t\t\tleave(p);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the entering location.\r\n\t * @return The entering location.\r\n\t */\r\n\tpublic Location getEnterLocation() {\r\n\t\tif (region == null) {\r\n\t\t\tSystem.err.println(\"House wasn't constructed yet!\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\tRoom room = rooms[0][x][y];\r\n\t\t\t\tif (room != null && (room.getProperties() == RoomProperties.GARDEN || room.getProperties() == RoomProperties.FORMAL_GARDEN)) {\r\n\t\t\t\t\tfor (Hotspot h : room.getHotspots()) {\r\n\t\t\t\t\t\tif (h.getDecorationIndex() > -1) {\r\n\t\t\t\t\t\t\tDecoration d = h.getHotspot().getDecorations()[h.getDecorationIndex()];\r\n\t\t\t\t\t\t\tif (d == Decoration.PORTAL) {\r\n\t\t\t\t\t\t\t\treturn region.getBaseLocation().transform(x * 8 + h.getChunkX(), y * 8 + h.getChunkY() + 2, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Redecorates the house.\r\n\t * @param style The new style.\r\n\t */\r\n\tpublic void redecorate(HousingStyle style) {\r\n\t\tthis.style = style;\r\n\t\tfor (int z = 0; z < 4; z++) {\r\n\t\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\t\tRoom room = rooms[z][x][y];\r\n\t\t\t\t\tif (room != null) {\r\n\t\t\t\t\t\troom.decorate(style);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all the rooms (<b>Including portal room!</b>).\r\n\t */\r\n\t@Deprecated\r\n\tpublic void clearRooms() {\r\n\t\tfor (int z = 0; z < 4; z++) {\r\n\t\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\t\trooms[z][x][y] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the default house.\r\n\t * @param location The house location.\r\n\t */\r\n\tpublic void create(HouseLocation location) {\r\n\t\tclearRooms();\r\n\t\tRoom room = rooms[0][4][3] = new Room(RoomProperties.GARDEN);\r\n\t\troom.configure(style);\r\n\t\troom.getHotspots()[0].setDecorationIndex(0);\r\n\t\tthis.location = location;\r\n\t}\r\n\r\n\t/**\r\n\t * Constructs the dynamic region for the house.\r\n\t * @return The region.\r\n\t */\r\n\tpublic DynamicRegion construct() {\r\n\t\tRegion from = RegionManager.forId(style.getRegionId());\r\n\t\tRegion.load(from, true);\r\n\t\tRegionChunk defaultChunk = from.getPlanes()[style.getPlane()].getRegionChunk(1, 0);\r\n\t\tZoneBorders borders = DynamicRegion.reserveArea(8, 8);\r\n\t\tregion = new DynamicRegion(-1, borders.getSouthWestX() >> 6, borders.getSouthWestY() >> 6);\r\n\t\tregion.setBorders(borders);\r\n\t\tregion.setUpdateAllPlanes(true);\r\n\t\tRegionManager.getRegionCache().put(region.getId(), region);\r\n\t\tconfigureRoofs();\r\n\t\tfor (int z = 0; z < 3; z++) {\r\n\t\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\t\tRoom room = rooms[z][x][y];\r\n\t\t\t\t\tif (room != null) {\r\n\t\t\t\t\t\tif (room.getProperties().isRoof() && buildingMode) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tBuildRegionChunk copy = room.getChunk().copy(region.getPlanes()[z]);\r\n\t\t\t\t\t\tregion.replaceChunk(z, x, y, copy, from);\r\n\t\t\t\t\t\troom.loadDecorations(z, copy, this);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tregion.replaceChunk(z, x, y, z != 0 ? null : defaultChunk.copy(region.getPlanes()[0]), from);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (hasDungeon()) {\r\n\t\t\tdefaultChunk = from.getPlanes()[style.getPlane()].getRegionChunk(3, 0);\r\n\t\t\tborders = DynamicRegion.reserveArea(8, 8);\r\n\t\t\tdungeon = new DynamicRegion(-1, borders.getSouthWestX() >> 6, borders.getSouthWestY() >> 6);\r\n\t\t\tdungeon.setBorders(borders);\r\n\t\t\tdungeon.setUpdateAllPlanes(true);\r\n\t\t\tRegionManager.getRegionCache().put(dungeon.getId(), dungeon);\r\n\t\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\t\tRoom room = rooms[3][x][y];\r\n\t\t\t\t\tif (hasRoom(3, x, y)) {\r\n\t\t\t\t\t\tBuildRegionChunk copy = room.getChunk().copy(dungeon.getPlanes()[0]);\r\n\t\t\t\t\t\tdungeon.replaceChunk(0, x, y, copy, from);\r\n\t\t\t\t\t\troom.loadDecorations(3, copy, this);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdungeon.replaceChunk(0, x, y, buildingMode ? null : defaultChunk.copy(dungeon.getPlanes()[0]), from);\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tregion.link(dungeon);\r\n\t\t}\r\n\t\tZoneBuilder.configure(zone);\r\n\t\treturn region;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Configures the rooftops.\r\n\t */\r\n\tpublic void configureRoofs() {\r\n//\t\tboolean[][][] roofs = new boolean[2][8][8];\r\n//\t\tfor (int x = 0; x < 8; x++) {\r\n//\t\t\tfor (int y = 0; y < 8; y++) {\r\n//\t\t\t\tRoom room = rooms[0][x][y];\r\n//\t\t\t\tif (room != null && room.getProperties().isChamber()) {\r\n//\t\t\t\t\troom = rooms[1][x][y];\r\n//\t\t\t\t\tint z = 1;\r\n//\t\t\t\t\tif (room != null && room.getProperties().isChamber()) {\r\n//\t\t\t\t\t\tz = 2;\r\n//\t\t\t\t\t}\r\n//\t\t\t\t\tif (x > 0 )\r\n//\t\t\t\t}\r\n//\t\t\t}\r\n//\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the current room plane.\r\n\t * @param l The location.\r\n\t * @return The plane of the room.\r\n\t */\r\n\tpublic Room getRoom(Location l) {\r\n\t\tint z = l.getZ();\r\n\t\tif (dungeon != null && l.getRegionId() == dungeon.getId()) {\r\n\t\t\tz = 3;\r\n\t\t}\r\n\t\treturn rooms[z][l.getChunkX()][l.getChunkY()];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the hotspot for the given object.\r\n\t * @param object The object.\r\n\t * @return The hotspot.\r\n\t */\r\n\tpublic Hotspot getHotspot(GameObject object) {\r\n\t\tRoom room = getRoom(object.getLocation());\r\n\t\tif (room == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tint chunkX = object.getLocation().getChunkOffsetX();\r\n\t\tint chunkY = object.getLocation().getChunkOffsetY();\r\n\t\tfor (Hotspot h : room.getHotspots()) {\r\n\t\t\tSystem.out.println(h.getHotspot().getObjectId(style) + \", \" +h.getChunkX() + \", \" +chunkX+\", \"+h.getChunkY()+\", \"+chunkY);\r\n\t\t\tif (h.getChunkX() == chunkX && h.getChunkY() == chunkY && h.getHotspot().getObjectId(style) == object.getId()) {\r\n\t\t\t\treturn h;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a room exists on the given location.\r\n\t * @param z The plane.\r\n\t * @param roomX The room x-coordinate.\r\n\t * @param roomY The room y-coordinate.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasRoom(int z, int roomX, int roomY) {\r\n\t\tRoom room = rooms[z][roomX][roomY];\r\n\t\treturn room != null && !room.getProperties().isRoof();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Enters the dungeon.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic void enterDungeon(Player player) {\r\n\t\tif (!hasDungeon()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint diffX = player.getLocation().getLocalX();\r\n\t\tint diffY = player.getLocation().getLocalY();\r\n\t\tplayer.getProperties().setTeleportLocation(dungeon.getBaseLocation().transform(diffX, diffY, 0));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Checks if an exit exists on the given room.\r\n\t * @param roomX The x-coordinate of the room.\r\n\t * @param roomY The y-coordinate of the room.\r\n\t * @param direction The exit direction.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasExit(int z, int roomX, int roomY, Direction direction) {\r\n\t\tRoom room = rooms[z][roomX][roomY];\r\n\t\tint index = (direction.toInteger() + 3) % 4;\r\n\t\treturn room != null && room.getExits()[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the amount of rooms.\r\n\t * @return The amount of rooms.\r\n\t */\r\n\tpublic int getRoomAmount() {\r\n\t\tint count = 0;\r\n\t\tfor (int z = 0; z < 4; z++) {\r\n\t\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\t\tRoom r = rooms[z][x][y];\r\n\t\t\t\t\tif (r != null && !r.getProperties().isRoof()) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the amount of portals available.\r\n\t * @return The amount of portals.\r\n\t */\r\n\tpublic int getPortalAmount() {\r\n\t\tint count = 0;\r\n\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\tRoom room = rooms[0][x][y];\r\n\t\t\t\tif (room != null && (room.getProperties() == RoomProperties.GARDEN\r\n\t\t\t\t\t\t|| room.getProperties() == RoomProperties.FORMAL_GARDEN) && room.getHotspots()[0].getDecorationIndex() == 0) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the current house boundaries.\r\n\t * @return The boundaries.\r\n\t */\r\n\tpublic Rectangle getBoundaries() {\r\n\t\tint startX = 99;\r\n\t\tint startY = 99;\r\n\t\tint endX = 0;\r\n\t\tint endY = 0;\r\n\t\tfor (int x = 0; x < 8; x++) {\r\n\t\t\tfor (int y = 0; y < 8; y++) {\r\n\t\t\t\tif (rooms[0][x][y] != null) {\r\n\t\t\t\t\tif (x < startX) startX = x;\r\n\t\t\t\t\tif (y < startY) startY = y;\r\n\t\t\t\t\tif (x > endX) endX = x;\r\n\t\t\t\t\tif (y > endY) endY = y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Rectangle(startX, startY, (endX - startX) + 1, (endY - startY) + 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the maximum dimension for the house boundaries.\r\n\t * @param player The player.\r\n\t * @return The dimension value (value X value = dimension)\r\n\t */\r\n\tpublic int getMaximumDimension(Player player) {\r\n\t\tint level = player.getSkills().getStaticLevel(Skills.CONSTRUCTION);\r\n\t\tif (level >= 60) {\r\n\t\t\treturn 7;\r\n\t\t}\r\n\t\tif (level >= 45) {\r\n\t\t\treturn 6;\r\n\t\t}\r\n\t\tif (level >= 30) {\r\n\t\t\treturn 5;\r\n\t\t}\r\n\t\tif (level >= 15) {\r\n\t\t\treturn 4;\r\n\t\t}\r\n\t\treturn 3;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the maximum amount of rooms available for the player.\r\n\t * @param player The player.\r\n\t * @return The maximum amount of rooms.\r\n\t */\r\n\tpublic int getMaximumRooms(Player player) { \r\n\t\tint level = player.getSkills().getStaticLevel(Skills.CONSTRUCTION);\r\n\t\tif (level >= 99) return 30;\r\n\t\tif (level >= 96) return 29;\r\n\t\tif (level >= 92) return 28;\r\n\t\tif (level >= 86) return 27;\r\n\t\tif (level >= 80) return 26;\r\n\t\tif (level >= 74) return 25;\r\n\t\tif (level >= 68) return 24;\r\n\t\tif (level >= 62) return 23;\r\n\t\tif (level >= 56) return 22;\r\n\t\tif (level >= 50) return 21;\r\n\t\treturn 20;\r\n\t}\r\n\r\n\t/**\r\n\t * Spawns the servant inside the player's home.\r\n\t */\r\n\tprivate void spawnServant(){\r\n\t\tservant.setLocation(getEnterLocation());\r\n\t\tservant.setWalkRadius(getRoomAmount() * 2);\r\n\t\tservant.setWalks(true);\r\n\t\tservant.init();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has a servant.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasServant() {\r\n\t\treturn servant != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player is in his own house (or dungeon).\r\n\t * @param player The player.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isInHouse(Player player) {\r\n\t\treturn isLoaded() && (player.getViewport().getRegion() == region || player.getViewport().getRegion() == dungeon);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Checks if the player is in his dungeon.\r\n\t * @param player The player.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic static boolean isInDungeon(Player player) {\r\n\t\treturn player.getViewport().getRegion() == player.getHouseManager().dungeon;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the house region was constructed and active.\r\n\t * @return {@code True} if an active region for the house exists.\r\n\t */\r\n\tpublic boolean isLoaded() {\r\n\t\treturn region != null && region.isActive() || dungeon != null && dungeon.isActive();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the hasHouse.\r\n\t * @return The hasHouse.\r\n\t */\r\n\tpublic boolean hasHouse() {\r\n\t\treturn location != HouseLocation.NOWHERE;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the house has a dungeon.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasDungeon() {\r\n\t\treturn hasDungeon;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the has dungeon value.\r\n\t * @param hasDungeon If the house has a dungeon.\r\n\t */\r\n\tpublic void setHasDungeon(boolean hasDungeon) {\r\n\t\tthis.hasDungeon = hasDungeon;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the rooms.\r\n\t * @return The rooms.\r\n\t */\r\n\tpublic Room[][][] getRooms() {\r\n\t\treturn rooms;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the location.\r\n\t * @return The location.\r\n\t */\r\n\tpublic HouseLocation getLocation() {\r\n\t\treturn location;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the location.\r\n\t * @param location The location to set.\r\n\t */\r\n\tpublic void setLocation(HouseLocation location) {\r\n\t\tthis.location = location;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the building mode is enabled.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isBuildingMode() {\r\n\t\treturn buildingMode;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has locked their house.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isLocked() {\r\n\t\treturn locked;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the house to locked.\r\n\t * @param locked true or false\r\n\t */\r\n\tpublic void setLocked(boolean locked) {\r\n\t\tthis.locked = locked;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the region.\r\n\t * @return The region.\r\n\t */\r\n\tpublic Region getRegion() {\r\n\t\treturn region;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the dungeon region.\r\n\t * @return The dungeon region.\r\n\t */\r\n\tpublic Region getDungeonRegion() {\r\n\t\treturn dungeon;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the style.\r\n\t * @return the style\r\n\t */\r\n\tpublic HousingStyle getStyle() {\r\n\t\treturn style;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the style.\r\n\t * @param style the style to set.\r\n\t */\r\n\tpublic void setStyle(HousingStyle style) {\r\n\t\tthis.style = style;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the player's servant\r\n\t * @return the servant.\r\n\t */\r\n\tpublic Servant getServant(){\r\n\t\treturn servant;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the player's servant\r\n\t * @param servant The servant to set.\r\n\t */\r\n\tpublic void setServant(Servant servant){\r\n\t\tthis.servant = servant;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the crest value.\r\n\t * @return The crest.\r\n\t */\r\n\tpublic CrestType getCrest() {\r\n\t\treturn crest;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the crest value.\r\n\t * @param crest The crest to set.\r\n\t */\r\n\tpublic void setCrest(CrestType crest) {\r\n\t\tthis.crest = crest;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the zone\r\n\t */\r\n\tpublic HouseZone getZone() {\r\n\t\treturn zone;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/construction/HouseManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/construction/HouseManager.java	(date 1597089529805)
@@ -4,6 +4,9 @@
 //import org.arios.game.content.global.DeadmanTimedAction;
 //import org.arios.game.node.entity.player.info.login.SavingModule;
 
+import core.game.system.SystemLogger;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 import plugin.dialogue.FacialExpression;
 import plugin.skill.Skills;
 import core.game.node.entity.player.Player;
@@ -123,6 +126,34 @@
 		buffer.put((byte) -1);//Eof
 	}
 
+	public void parse(JSONObject data){
+		location = HouseLocation.values()[Integer.parseInt( data.get("location").toString())];
+		style = HousingStyle.values()[Integer.parseInt( data.get("style").toString())];
+		Object servRaw = data.get("servant");
+		if(servRaw != null){
+			servant = Servant.parse((JSONObject) servRaw);
+		}
+		JSONArray rArray = (JSONArray) data.get("rooms");
+		for(int i = 0; i < rArray.size(); i++){
+			JSONObject rm = (JSONObject) rArray.get(i);
+			int z =  Integer.parseInt(rm.get("z").toString());
+			int x = Integer.parseInt(rm.get("x").toString());
+			int y = Integer.parseInt(rm.get("y").toString());
+			SystemLogger.log("room x " + x + " room y " + y + " room z " + z);
+			if(z == 3)
+				hasDungeon = true;
+			Room room = rooms[z][x][y] = new Room(RoomProperties.values()[Integer.parseInt(rm.get("properties").toString())]);
+			room.configure(style);
+			room.setRotation(Direction.get(Integer.parseInt(rm.get("rotation").toString())));
+			JSONArray hotspots = (JSONArray) rm.get("hotspots");
+			SystemLogger.log("Hotspots size: " + hotspots.size());
+			for(int j = 0; j < hotspots.size(); j++){
+				JSONObject spot = (JSONObject) hotspots.get(j);
+				room.getHotspots()[Integer.parseInt(spot.get("hotspotIndex").toString())].setDecorationIndex(Integer.parseInt(spot.get("decorationIndex").toString()));
+			}
+		}
+	}
+
 
 	public void parse(ByteBuffer buffer) {
 		location = HouseLocation.values()[buffer.get() & 0xFF];
Index: Server/src/main/java/Server/plugin/skill/farming/compost/CompostManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.farming.compost;\r\n\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.item.Item;\r\nimport core.game.node.object.GameObject;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * Represents the managing class of compost bins.\r\n * @author 'Vexia\r\n * @version 1.0\r\n */\r\npublic final class CompostManager implements SavingModule {\r\n\r\n\t/**\r\n\t * Represents the list of compost bins.\r\n\t */\r\n\tprivate final List<CompostBin> bins = new ArrayList<>();\r\n\r\n\t/**\r\n\t * Constructs a new {@code CompostBinManager} {@code Object}.\r\n\t */\r\n\tpublic CompostManager() {\r\n\t\t/**\r\n\t\t * empty.\r\n\t\t */\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tbuffer.put((byte) bins.size());\r\n\t\tfor (CompostBin bin : bins) {\r\n\t\t\tbuffer.putInt(bin.getWrapperId());\r\n\t\t\tif (bin.getTimeStamp() != 0L) {\r\n\t\t\t\tbuffer.put((byte) 1);\r\n\t\t\t\tbuffer.putLong(bin.getTimeStamp());\r\n\t\t\t}\r\n\t\t\tif (bin.getContainer().itemCount() != 0) {\r\n\t\t\t\tbuffer.put((byte) 2);\r\n\t\t\t\tbin.getContainer().save(buffer);\r\n\t\t\t}\r\n\t\t\tbuffer.put((byte) 0);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint size = buffer.get();\r\n\t\tint opcode;\r\n\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\tCompostBin bin = new CompostBin(buffer.getInt());\r\n\t\t\twhile ((opcode = buffer.get() & 0xFF) != 0) {\r\n\t\t\t\tswitch (opcode) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tbin.setTimeStamp(buffer.getLong());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tbin.getContainer().parse(buffer);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbins.add(bin);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to fill a compost.\r\n\t * @param player the player.\r\n\t * @param object the object.\r\n\t * @param option the option.\r\n\t * @param delay the delay\r\n\t */\r\n\tpublic void fill(final Player player, final Item item, final GameObject object, String option, int delay) {\r\n\t\tCompostBin bin = getBin(object);\r\n\t\tif (option.equals(\"bin\")) {\r\n\t\t\tbin.fillBin(player, item, delay);\r\n\t\t} else {\r\n\t\t\tbin.fillBucket(player, delay);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the compost bin by the object wrapper.\r\n\t * @param object the object.\r\n\t * @return the wrapper.\r\n\t */\r\n\tpublic CompostBin getBin(final GameObject object) {\r\n\t\tfinal GameObject wrapper = object.getWrapper();\r\n\t\tfor (CompostBin bin : getBins()) {\r\n\t\t\tif (bin.getWrapperId() == wrapper.getId()) {\r\n\t\t\t\treturn bin;\r\n\t\t\t}\r\n\t\t}\r\n\t\tCompostBin bin = new CompostBin(object.getWrapper().getId());\r\n\t\tbins.add(bin);\r\n\t\treturn bin;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bins.\r\n\t * @return The bins.\r\n\t */\r\n\tpublic List<CompostBin> getBins() {\r\n\t\treturn bins;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/farming/compost/CompostManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/farming/compost/CompostManager.java	(date 1597089529812)
@@ -1,9 +1,12 @@
 package plugin.skill.farming.compost;
 
+import core.game.container.Container;
 import core.game.node.entity.player.Player;
 import core.game.node.entity.player.info.login.SavingModule;
 import core.game.node.item.Item;
 import core.game.node.object.GameObject;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 import java.util.ArrayList;
@@ -47,6 +50,18 @@
 		}
 	}
 
+	public void parse(JSONArray data){
+		for(int i = 0; i < data.size(); i++){
+			JSONObject b = (JSONObject) data.get(i);
+
+			CompostBin bin = new CompostBin(Integer.parseInt(b.get("wrapperId").toString()));
+			bin.setTimeStamp(Long.parseLong(b.getOrDefault("timeStamp",0L).toString()));
+			bin.compostLevel = Integer.parseInt(b.getOrDefault("compostLevel",0).toString());
+			bin.getContainer().parse((JSONArray) b.getOrDefault("compostContainer", new JSONArray()));
+			bins.add(bin);
+		}
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int size = buffer.get();
Index: Server/src/main/java/Server/plugin/skill/farming/compost/CompostBin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.farming.compost;\r\n\r\nimport core.cache.def.impl.ConfigFileDefinition;\r\nimport core.cache.def.impl.ObjectDefinition;\r\nimport core.game.container.Container;\r\nimport plugin.skill.Skills;\r\nimport plugin.skill.farming.FarmingConstant;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.item.Item;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.tools.RandomFunction;\r\n\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n/**\r\n * Represents a compost bin.\r\n * @author 'Vexia\r\n * @version 1.0\r\n */\r\npublic final class CompostBin {\r\n\r\n\t/**\r\n\t * Represents the animation used to fill a compost bin or bucket.\r\n\t */\r\n\tprivate static final Animation FILL_ANIM = new Animation(832);\r\n\r\n\t/**\r\n\t * Represents the close animation.\r\n\t */\r\n\tprivate static final Animation CLOSE_ANIM = new Animation(835);\r\n\r\n\t/**\r\n\t * Represents the open animation.\r\n\t */\r\n\tprivate static final Animation OPEN_ANIM = new Animation(834);\r\n\r\n\t/**\r\n\t * Represents the config value of the compost bin.\r\n\t */\r\n\tprivate static final int CONFIG = 511;\r\n\r\n\t/**\r\n\t * Represents the container of this compost bin.\r\n\t */\r\n\tprivate final Container container = new Container(15);\r\n\r\n\t/**\r\n\t * Represents the objects wrapper id.\r\n\t */\r\n\tprivate final int wrapperId;\r\n\r\n\t/**\r\n\t * Represents the time stamp of when the compost is ready.\r\n\t */\r\n\tprivate long timeStamp;\r\n\r\n\t/**\r\n\t * Constructs a new {@code CompostBin} {@code Object}.\r\n\t * @param wrapperId the wrapper id.\r\n\t */\r\n\tpublic CompostBin(final int wrapperId) {\r\n\t\tthis.wrapperId = wrapperId;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to fill the compost bin container with an item.\r\n\t * @param player the player.\r\n\t * @param item the item.\r\n\t * @param delay the delay.\r\n\t */\r\n\tpublic void fillBin(final Player player, final Item item, int delay) {\r\n\t\tfinal String[] messages = isRotted(player) ? new String[] { \"The compost bin must be empty of compost before you can put new\", \"items in it.\" } : isClosed(player) ? new String[] { \"The compost bin is closed\" } : !container.hasSpaceFor(item) ? new String[] { \"The compost bin is too full to put anything else in it.\" } : null;\r\n\t\tif (messages != null) {\r\n\t\t\tplayer.getDialogueInterpreter().sendDialogue(messages);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.getPulseManager().run(new FillBinPulse(player, item, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to fill a bucket.\r\n\t * @param player the player.\r\n\t * @param delay .\r\n\t */\r\n\tpublic void fillBucket(final Player player, int delay) {\r\n\t\tif ((!isTomato() && !player.getInventory().containsItem(FarmingConstant.BUCKET)) || isClosed(player) || isRotting(player) || !isRotted(player)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (isTomato() && !player.getInventory().hasSpaceFor(FarmingConstant.ROTTEN_TOMATO)) {\r\n\t\t\tplayer.getDialogueInterpreter().sendDialogue(\"You don't have enough inventory space.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.getPulseManager().run(new FillBucketPulse(player, delay));\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to take a tomato from the bin.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void takeTomato(Player player) {\r\n\t\tfillBucket(player, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to close the compost bin.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void close(final Player player) {\r\n\t\tlong time = (long) (isSuperCompostable() ? TimeUnit.MINUTES.toMillis(90) : RandomFunction.random(TimeUnit.MINUTES.toMillis(35), TimeUnit.MINUTES.toMillis(50))) / 2;\r\n\t\tsetTimeStamp((long) (System.currentTimeMillis() + time));\r\n\t\taddConfigValue(player, 31 << getBitShift());\r\n\t\tplayer.animate(CLOSE_ANIM);\r\n\t\tplayer.getPacketDispatch().sendMessage(\"You close the compost bin.\");\r\n\t\tplayer.getPacketDispatch().sendMessage(\"The \" + (isTomato() ? \"tomatoes\" : \"contents\") + \" have begun to rot.\");\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to open the bin.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void open(final Player player) {\r\n\t\tif (isRotting(player)) {\r\n\t\t\tplayer.getDialogueInterpreter().sendDialogue(isTomato() ? \"The tomatoes haven't finished rotting yet.\" : \"The vegetation hasn't finished rotting yet.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tplayer.animate(OPEN_ANIM);\r\n\t\taddConfigValue(player, getCompostMultiplier(player) << getBitShift());\r\n\t\tplayer.getPacketDispatch().sendMessage(\"You open the compost bin.\");\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to reset the bin and remove it from manager.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void reset(final Player player) {\r\n\t\taddConfigValue(player, 0);\r\n\t\tplayer.getFarmingManager().getCompostManager().getBins().remove(this);\r\n\t\ttimeStamp = 0L;\r\n\t\tcontainer.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to add a config value.\r\n\t * @param player the player.\r\n\t * @param value the value.\r\n\t */\r\n\tpublic void addConfigValue(final Player player, final int value) {\r\n\t\tplayer.getConfigManager().set(CONFIG, (player.getConfigManager().get(CONFIG) - getConfigValue(player)) + value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to get the config value of this compost bin.\r\n\t * @param player the player.\r\n\t * @return the value set.\r\n\t */\r\n\tpublic int getConfigValue(final Player player) {\r\n\t\treturn getState(player) << getBitShift();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the compost bin is empty and ready to be refilled.\r\n\t * @param player the player.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isEmpty(final Player player) {\r\n\t\treturn getState(player) == 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the compost bin is closed.\r\n\t * @param player the player.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isClosed(final Player player) {\r\n\t\treturn getState(player) == 31;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the bin is rotted.\r\n\t * @param player the player.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isRotted(final Player player) {\r\n\t\tint state = getState(player);\r\n\t\treturn state == 47 || state == 62 || state == 7 || state == 30 || state == 158 || state == 144 || state == 16 || state == 48;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the bin is a super compost bin.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isSuperCompostable() {\r\n\t\tfor (Item item : container.toArray()) {\r\n\t\t\tif (item == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tboolean isSuper = false;\r\n\t\t\tfor (int i : FarmingConstant.SUPERCOMPOST_IDS) {\r\n\t\t\t\tif (item.getId() == i) {\r\n\t\t\t\t\tisSuper = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!isSuper) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the compost is a super compostable.\r\n\t * @param player the player.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isSuperCompost(final Player player) {\r\n\t\treturn getState(player) == 47 || getState(player) == 62 || getState(player) == 48;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the compost multiplier.\r\n\t * @param player the player.\r\n\t * @return the multiplier.\r\n\t */\r\n\tpublic int getCompostMultiplier(final Player player) {\r\n\t\tboolean full = container.itemCount() == 15;\r\n\t\tif (isTomato()) {\r\n\t\t\treturn !full ? 144 : 158;\r\n\t\t}\r\n\t\treturn isSuperCompostable() ? !full ? 47 : 62 : !full ? 7 : 30;\r\n\t}\r\n\r\n\t/**\r\n\t * Checsk if it's a tomato compost bin.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isTomato() {\r\n\t\treturn container.getAmount(FarmingConstant.TOMATO) == container.itemCount();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the compost bin is rotting.\r\n\t * @param player the player.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isRotting(final Player player) {\r\n\t\treturn isClosed(player) && timeStamp > System.currentTimeMillis();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the wrapper config state.\r\n\t * @param player the player.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic int getState(final Player player) {\r\n\t\tConfigFileDefinition def = ConfigFileDefinition.forId(ObjectDefinition.forId(wrapperId).getConfigFileId());\r\n\t\tif (def == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn def.getValue(player);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the wrapperId.\r\n\t * @return The wrapperId.\r\n\t */\r\n\tpublic int getWrapperId() {\r\n\t\treturn wrapperId;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the config id.\r\n\t * @return the id.\r\n\t */\r\n\tpublic int getConfigId() {\r\n\t\treturn ConfigFileDefinition.forId(ObjectDefinition.forId(wrapperId).getConfigFileId()).getConfigId();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bitshift for the wrapper.\r\n\t * @return the bitshift.\r\n\t */\r\n\tpublic int getBitShift() {\r\n\t\tConfigFileDefinition def = ConfigFileDefinition.forId(ObjectDefinition.forId(wrapperId).getConfigFileId());\r\n\t\tif (def == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn def.getBitShift();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the container.\r\n\t * @return The container.\r\n\t */\r\n\tpublic Container getContainer() {\r\n\t\treturn container;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the timeStamp.\r\n\t * @return The timeStamp.\r\n\t */\r\n\tpublic long getTimeStamp() {\r\n\t\treturn timeStamp;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the time stamp.\r\n\t * @param timeStamp the stamp.\r\n\t */\r\n\tpublic void setTimeStamp(long timeStamp) {\r\n\t\tthis.timeStamp = timeStamp;\r\n\t}\r\n\r\n\t/**\r\n\t * Represents the filling of a bucket pulse.\r\n\t * @author 'Vexia\r\n\t * @version 1.0\r\n\t */\r\n\tpublic final class FillBucketPulse extends Pulse {\r\n\r\n\t\t/**\r\n\t\t * Represents the player.\r\n\t\t */\r\n\t\tprivate final Player player;\r\n\r\n\t\t/**\r\n\t\t * Constructs a new {@code FillBucketPulse} {@code Object}.\r\n\t\t * @param player the player.\r\n\t\t * @param delay the delay.\r\n\t\t */\r\n\t\tpublic FillBucketPulse(final Player player, int delay) {\r\n\t\t\tsuper(delay, player);\r\n\t\t\tthis.player = player;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic boolean pulse() {\r\n\t\t\tfinal boolean superCompost = isSuperCompost(player);\r\n\t\t\tplayer.animate(FILL_ANIM);\r\n\t\t\tif (!isTomato()) {\r\n\t\t\t\tplayer.getInventory().replace(superCompost ? FarmingConstant.SUPERCOMPOST : FarmingConstant.COMPOST, player.getInventory().getSlot(FarmingConstant.BUCKET));\r\n\t\t\t} else {\r\n\t\t\t\tplayer.getInventory().add(FarmingConstant.ROTTEN_TOMATO);\r\n\t\t\t}\r\n\t\t\tplayer.getSkills().addExperience(Skills.FARMING, 4.5, true);\r\n\t\t\tint state = getState(player);\r\n\t\t\tif (state == 30 || state == 62) {\r\n\t\t\t\taddConfigValue(player, (state == 30 ? 16 : 48) << getBitShift());\r\n\t\t\t}\r\n\t\t\tcontainer.replace(null, container.itemCount() - 1);\r\n\t\t\tif (isTomato() && container.itemCount() != 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (container.itemCount() != 0) {\r\n\t\t\t\tfillBucket(player, 3);\r\n\t\t\t} else {\r\n\t\t\t\treset(player);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Represents the filling of the compost bin pulse.\r\n\t * @author 'Vexia\r\n\t * @version 1.0\r\n\t */\r\n\tpublic final class FillBinPulse extends Pulse {\r\n\r\n\t\t/**\r\n\t\t * Represents the player instance.\r\n\t\t */\r\n\t\tprivate final Player player;\r\n\r\n\t\t/**\r\n\t\t * Represents the item being used.\r\n\t\t */\r\n\t\tprivate final Item item;\r\n\r\n\t\t/**\r\n\t\t * Constructs a new {@code FillBinPulse} {@code Object}.\r\n\t\t * @param player the player.\r\n\t\t * @param item the item.\r\n\t\t * @param delay the delay.\r\n\t\t */\r\n\t\tpublic FillBinPulse(final Player player, final Item item, int delay) {\r\n\t\t\tsuper(delay, player);\r\n\t\t\tthis.player = player;\r\n\t\t\tthis.item = item;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic boolean pulse() {\r\n\t\t\tfinal boolean isWeeds = item.getId() == FarmingConstant.WEEDS.getId() ? true : false;\r\n\t\t\tfinal Item item = isWeeds ? new Item(FarmingConstant.WEEDS.getId(), getWeedDifference()) : this.item;\r\n\t\t\tif (player.getInventory().remove(item)) {\r\n\t\t\t\tplayer.animate(FILL_ANIM);\r\n\t\t\t\tcontainer.add(item);\r\n\t\t\t\tif (container.freeSlots() == 0) {\r\n\t\t\t\t\taddConfigValue(player, (isTomato() ? 143 : (!isSuperCompostable() ? 15 : 47)) << getBitShift());\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\taddConfigValue(player, (isTomato() ? 129 : (!isSuperCompostable() ? 8 : 33)) << getBitShift());\r\n\t\t\t}\r\n\t\t\tif (!isWeeds && player.getInventory().containsItem(item)) {\r\n\t\t\t\tfillBin(player, item, 3);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the difference in amount of weed.\r\n\t\t * @return the amount to use.\r\n\t\t */\r\n\t\tprivate int getWeedDifference() {\r\n\t\t\tint amount = player.getInventory().getAmount(FarmingConstant.WEEDS);\r\n\t\t\tif (amount + container.itemCount() > 15) {\r\n\t\t\t\tint difference = 15 - container.itemCount();\r\n\t\t\t\tif (amount > difference) {\r\n\t\t\t\t\tamount = difference;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn amount;\r\n\t\t}\r\n\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/farming/compost/CompostBin.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/farming/compost/CompostBin.java	(date 1597089529811)
@@ -45,6 +45,8 @@
 	 */
 	private final Container container = new Container(15);
 
+	public int compostLevel = 0;
+
 	/**
 	 * Represents the objects wrapper id.
 	 */
Index: Server/src/main/java/Server/core/net/registry/AccountRegister.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.net.registry;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.sql.Connection;\r\nimport java.sql.Date;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.sql.Timestamp;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport core.ServerConstants;\r\nimport core.cache.misc.buffer.ByteBufferUtils;\r\nimport core.game.node.entity.player.info.portal.PlayerSQLManager;\r\nimport core.game.system.SystemManager;\r\nimport core.game.system.mysql.SQLEntryHandler;\r\nimport core.game.system.mysql.SQLManager;\r\nimport core.game.system.task.TaskExecutor;\r\nimport core.net.Constants;\r\nimport core.net.IoSession;\r\nimport core.net.event.LoginReadEvent;\r\n\r\n/**\r\n * Handles the registry of new accounts.\r\n * @author Vexia\r\n *\r\n */\r\npublic class AccountRegister extends SQLEntryHandler<RegistryDetails> {\r\n\r\n\t/**\r\n\t * The table name.\r\n\t */\r\n\tprivate static final String TABLE = \"members\";\r\n\r\n\t/**\r\n\t * The column name.\r\n\t */\r\n\tprivate static final String COLUMN = \"username\";\r\n\r\n\t/**\r\n\t * The pattern compiler.\r\n\t */\r\n\tprivate static final Pattern PATTERN = Pattern.compile(\"[a-z0-9_]{1,12}\");\r\n\r\n\t/**\r\n\t * Constructs a new {@Code AccountRegister} {@Code Object}\r\n\t * @param entry The registry entry.\r\n\t */\r\n\tpublic AccountRegister(RegistryDetails entry) {\r\n\t\tsuper(entry, TABLE, COLUMN, entry.getUsername());\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the incoming opcode of an account register.\r\n\t * @param session the session.\r\n\t * @param opcode the opcode.\r\n\t * @param buffer the buffer.\r\n\t */\r\n\tpublic static void read(final IoSession session, int opcode, ByteBuffer buffer) {\r\n\t\tint day,month,year,country;\r\n\t\tswitch (opcode) {\r\n\t\t\tcase 147://details\r\n\t\t\t\tday = buffer.get();\r\n\t\t\t\tmonth = buffer.get();\r\n\t\t\t\tyear = buffer.getShort();\r\n\t\t\t\tcountry = buffer.getShort();\r\n\t\t\t\tresponse(session, RegistryResponse.SUCCESS);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 186://username\r\n\t\t\t\tfinal String username = ByteBufferUtils.getString(buffer).replace(\" \", \"_\").toLowerCase().replace(\"|\", \"\");\r\n\t\t\t\tif (username.length() <= 0 || username.length() > 12) {\r\n\t\t\t\t\tresponse(session, RegistryResponse.INVALID_USERNAME);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (!validUsername(username)) {\r\n\t\t\t\t\tSystem.out.println(\"AHAHHA \" + username);\r\n\t\t\t\t\tresponse(session,RegistryResponse.INVALID_USERNAME);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tTaskExecutor.executeSQL(new Runnable() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void run() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (PlayerSQLManager.hasSqlAccount(username, \"username\")) {\r\n\t\t\t\t\t\t\t\tresponse(session, RegistryResponse.NOT_AVAILBLE_USER);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresponse(session, RegistryResponse.SUCCESS);\r\n\t\t\t\t\t\t} catch (SQLException e) {\r\n\t\t\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 36://Register details\r\n\t\t\t\tbuffer.get();\r\n\t\t\t\tbuffer = LoginReadEvent.getRSABlock(buffer);\r\n\t\t\t\tbuffer.getShort();\r\n\t\t\t\tint revision = buffer.getShort();//revision?\r\n\t\t\t\tif (revision != Constants.REVISION) {\r\n\t\t\t\t\tresponse(session, RegistryResponse.CANNOT_CREATE);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tfinal String name = ByteBufferUtils.getString(buffer).replace(\" \", \"_\").toLowerCase().replace(\"|\", \"\");\r\n\t\t\t\tbuffer.getInt();\r\n\t\t\t\tString password = ByteBufferUtils.getString(buffer);\r\n\t\t\t\tif (password.length() < 5 || password.length() > 20) {\r\n\t\t\t\t\tresponse(session, RegistryResponse.INVALID_PASS_LENGTH);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (password.equals(name)) {\r\n\t\t\t\t\tresponse(session, RegistryResponse.PASS_SIMILAR_TO_USER);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (!validUsername(name)) {\r\n\t\t\t\t\tresponse(session, RegistryResponse.INVALID_USERNAME);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbuffer.getInt();\r\n\t\t\t\tbuffer.getShort();\r\n\t\t\t\tday = buffer.get();\r\n\t\t\t\tmonth = buffer.get();\r\n\t\t\t\tbuffer.getInt();\r\n\t\t\t\tyear = buffer.getShort();\r\n\t\t\t\tcountry = buffer.getShort();\r\n\t\t\t\tbuffer.getInt();\r\n\t\t\t\t@SuppressWarnings(\"deprecation\")\r\n\t\t\t\tfinal RegistryDetails details = new RegistryDetails(name, SystemManager.getEncryption().hashPassword(password), new Date(year, month, day), country);\r\n\t\t\t\tTaskExecutor.execute(new Runnable() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void run() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (PlayerSQLManager.hasSqlAccount(name, \"username\")) {\r\n\t\t\t\t\t\t\t\tresponse(session, RegistryResponse.CANNOT_CREATE);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tSQLEntryHandler.write(new AccountRegister(details));\r\n\t\t\t\t\t\t\tresponse(session, RegistryResponse.SUCCESS);\r\n\t\t\t\t\t\t} catch (SQLException e) {\r\n\t\t\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t\t\t\tresponse(session, RegistryResponse.CANNOT_CREATE);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tSystem.err.println(\"Unhandled account registry opcode = \" + opcode);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void create() throws SQLException {}\r\n\r\n\t@Override\r\n\tpublic void parse() throws SQLException {}\r\n\r\n\t@Override\r\n\tpublic void save() throws SQLException {\r\n\t\tPreparedStatement statement = getWritingStatement(true, \"password\", \"salt\", \"birthday\", \"countryCode\", \"joined_date\",\"currentClan\");\r\n\t\tstatement.setString(1, entry.getUsername());\r\n\t\tstatement.setString(2, entry.getPassword());\r\n\t\tstatement.setString(3, entry.getPassword().substring(0, 29));\r\n\t\tstatement.setDate(4, entry.getBirth());\r\n\t\tstatement.setInt(5, entry.getCountry());\r\n\t\tstatement.setTimestamp(6, new Timestamp(System.currentTimeMillis()));\r\n\r\n\t\t//If the management server's settings register new users with the server's clan chat\r\n\t\t//I believe if there was no entry there would be errors during the registration, hence a null entry if the setting is off\r\n\t\tif(ServerConstants.NEW_PLAYER_DEFAULT_CLAN)\r\n\t\t{\r\n\t\t\tstatement.setString(7,ServerConstants.SERVER_NAME.toLowerCase());\r\n\t\t}else{\r\n\t\t\tstatement.setString(7,null);\r\n\t\t}\r\n\t\t\r\n\t\tstatement.setString(7, \"2009scape\");\r\n\t\tstatement.executeUpdate();\r\n\t\tSQLManager.close(statement.getConnection());\r\n\t}\r\n\r\n\t/**\r\n\t * Sends a registry response code.\r\n\t * @param response the response.\r\n\t */\r\n\tprivate static void response(IoSession session, RegistryResponse response) {\r\n\t\tByteBuffer buf = ByteBuffer.allocate(100);\r\n\t\tbuf.put((byte) response.getId());\r\n\t\tsession.queue((ByteBuffer) buf.flip());\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a username is valid.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic static boolean validUsername(final String username) {\r\n\t\tMatcher matcher = PATTERN.matcher(username);\r\n\t\treturn matcher.matches();\r\n\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Connection getConnection() {\r\n\t\treturn SQLManager.getConnection();\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/net/registry/AccountRegister.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/net/registry/AccountRegister.java	(date 1597089529793)
@@ -16,6 +16,7 @@
 import core.game.system.mysql.SQLEntryHandler;
 import core.game.system.mysql.SQLManager;
 import core.game.system.task.TaskExecutor;
+import core.game.world.GameWorld;
 import core.net.Constants;
 import core.net.IoSession;
 import core.net.event.LoginReadEvent;
@@ -165,16 +166,8 @@
 		statement.setInt(5, entry.getCountry());
 		statement.setTimestamp(6, new Timestamp(System.currentTimeMillis()));
 
-		//If the management server's settings register new users with the server's clan chat
-		//I believe if there was no entry there would be errors during the registration, hence a null entry if the setting is off
-		if(ServerConstants.NEW_PLAYER_DEFAULT_CLAN)
-		{
-			statement.setString(7,ServerConstants.SERVER_NAME.toLowerCase());
-		}else{
-			statement.setString(7,null);
-		}
-		
-		statement.setString(7, "2009scape");
+		statement.setString(7, GameWorld.getSettings().getEnable_default_clan() ? ServerConstants.SERVER_NAME.toLowerCase(): null);
+
 		statement.executeUpdate();
 		SQLManager.close(statement.getConnection());
 	}
Index: Server/src/main/java/Server/core/game/world/repository/DisconnectionQueue.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.world.repository;\r\n\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.PlayerParser;\r\nimport core.game.system.mysql.SQLEntryHandler;\r\nimport core.game.system.mysql.impl.HighscoreSQLHandler;\r\nimport core.game.system.mysql.impl.PlayerLogSQLHandler;\r\nimport core.game.system.task.TaskExecutor;\r\nimport core.game.world.GameWorld;\r\n\r\nimport java.util.Map;\r\nimport java.util.Set;\r\nimport java.util.concurrent.ConcurrentHashMap;\r\n\r\n/**\r\n * Handles disconnecting players queuing.\r\n * @author Emperor\r\n */\r\npublic final class DisconnectionQueue {\r\n\r\n\t/**\r\n\t * The pending disconnections queue.\r\n\t */\r\n\tprivate final Map<String, DisconnectionEntry> queue;\r\n\r\n\t/**\r\n\t * Constructs a new {@code DisconnectionQueue} {@code Object}.\r\n\t */\r\n\tpublic DisconnectionQueue() {\r\n\t\tqueue = new ConcurrentHashMap<>();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates all entries.\r\n\t */\r\n\tpublic void update() {\r\n\t\tif (queue.isEmpty() || ((GameWorld.getTicks() % 3) != 0 && !GameWorld.getSettings().isDevMode())) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint tickFlag = GameWorld.getTicks() - 3;\r\n\t\tSet<String> keySet = queue.keySet();\r\n\t\tObject[] keys = keySet.toArray();\r\n\t\tint length = keys.length;\r\n\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\tString name = (String) keys[i];\r\n\t\t\tDisconnectionEntry entry = queue.get(name);\r\n\t\t\tif (entry.getTimeStamp() < tickFlag && finish(entry, false)) {\r\n\t\t\t\tqueue.remove(name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finishes a disconnection.\r\n\t * @param entry The entry.\r\n\t * @param force If finalization should be forced.\r\n\t */\r\n\tprivate boolean finish(DisconnectionEntry entry, boolean force) {\r\n\t\tfinal Player player = entry.getPlayer();\r\n\t\tif (!force && player.allowRemoval()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (entry.isClear()) {\r\n\t\t\tplayer.clear();\r\n\t\t}\r\n\t\tRepository.getPlayerNames().remove(player.getName());\r\n\t\tRepository.getLobbyPlayers().remove(player);\r\n\t\tRepository.getPlayers().remove(player);\r\n\t\ttry {\r\n\t\t\tplayer.getCommunication().getClan().leave(player, false);\r\n\t\t} catch (Exception e){}\r\n\t\tif (player.isArtificial()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!force) {\r\n\t\t\tTaskExecutor.executeSQL(new Runnable() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void run() {\r\n\t\t\t\t\tsave(player, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tsave(player, false);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the player.\r\n\t * @param player The player to be saved.\r\n\t * @param sql If the sql database should be updated.\r\n\t */\r\n\tpublic static boolean save(Player player, boolean sql) {\r\n\t\ttry {\r\n\t\t\tPlayerParser.dump(player);\r\n\t\t\tif (sql) {\r\n\t\t\t\tplayer.getDetails().getSqlManager().update(player);\r\n\t\t\t\tplayer.getDetails().save();\r\n\t\t\t\tSQLEntryHandler.write(new HighscoreSQLHandler(player));\r\n\t\t\t\tSQLEntryHandler.write(new PlayerLogSQLHandler(player.getMonitor(), player.getName()));\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch (Throwable t) {\r\n\t\t\tt.printStackTrace();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a queued player.\r\n\t * @param name The player name.\r\n\t * @return The player instance.\r\n\t */\r\n\tpublic Player get(String name) {\r\n\t\tDisconnectionEntry entry = queue.get(name);\r\n\t\tif (entry != null) {\r\n\t\t\treturn entry.getPlayer();\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the queue.\r\n\t */\r\n\tpublic void clear() {\r\n\t\tfor (DisconnectionEntry entry : queue.values()) {\r\n\t\t\tfinish(entry, true);\r\n\t\t}\r\n\t\tqueue.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a player to the disconnection queue.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic void add(Player player) {\r\n\t\tadd(player, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a player to the disconnection queue.\r\n\t * @param player The player.\r\n\t * @param clear If the player should be cleared.\r\n\t */\r\n\tpublic void add(Player player, boolean clear) {\r\n\t\tqueue.put(player.getName(), new DisconnectionEntry(player, clear));\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the queue contains the player name.\r\n\t * @param name The name.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean contains(String name) {\r\n\t\treturn queue.containsKey(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a queued player.\r\n\t * @param name The name.\r\n\t */\r\n\tpublic void remove(String name) {\r\n\t\tqueue.remove(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Represents an entry in the disconnection queue, holding the disconnected\r\n\t * player and time stamp of disconnection.\r\n\t * @author Emperor\r\n\t */\r\n\tclass DisconnectionEntry {\r\n\r\n\t\t/**\r\n\t\t * The time of disconnection.\r\n\t\t */\r\n\t\tprivate int timeStamp;\r\n\r\n\t\t/**\r\n\t\t * The player.\r\n\t\t */\r\n\t\tprivate final Player player;\r\n\r\n\t\t/**\r\n\t\t * If the {@code Player#clear()} method should be called.\r\n\t\t */\r\n\t\tprivate boolean clear;\r\n\r\n\t\t/**\r\n\t\t * Constructs a new {@code DisconnectionQueue} {@code Object}.\r\n\t\t * @param player The disconnecting player.\r\n\t\t * @param clear If the player should be cleared.\r\n\t\t */\r\n\t\tpublic DisconnectionEntry(Player player, boolean clear) {\r\n\t\t\tthis.player = player;\r\n\t\t\tthis.clear = clear;\r\n\t\t\tthis.timeStamp = GameWorld.getTicks();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the timeStamp.\r\n\t\t * @return The timeStamp.\r\n\t\t */\r\n\t\tpublic int getTimeStamp() {\r\n\t\t\treturn timeStamp;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the timeStamp.\r\n\t\t * @param timeStamp The timeStamp to set.\r\n\t\t */\r\n\t\tpublic void setTimeStamp(int timeStamp) {\r\n\t\t\tthis.timeStamp = timeStamp;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the player.\r\n\t\t * @return The player.\r\n\t\t */\r\n\t\tpublic Player getPlayer() {\r\n\t\t\treturn player;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets the clear.\r\n\t\t * @return The clear.\r\n\t\t */\r\n\t\tpublic boolean isClear() {\r\n\t\t\treturn clear;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the clear.\r\n\t\t * @param clear The clear to set.\r\n\t\t */\r\n\t\tpublic void setClear(boolean clear) {\r\n\t\t\tthis.clear = clear;\r\n\t\t}\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/world/repository/DisconnectionQueue.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/world/repository/DisconnectionQueue.java	(date 1597089529791)
@@ -92,7 +92,7 @@
 	 */
 	public static boolean save(Player player, boolean sql) {
 		try {
-			PlayerParser.dump(player);
+			PlayerParser.save(player);
 			if (sql) {
 				player.getDetails().getSqlManager().update(player);
 				player.getDetails().save();
Index: Server/src/main/java/Server/core/game/world/GameSettings.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.world\r\n\r\nimport core.game.system.SystemLogger\r\nimport core.plugin.PluginManager\r\nimport org.w3c.dom.Element\r\nimport org.w3c.dom.Node\r\nimport java.io.File\r\nimport java.io.FileInputStream\r\nimport java.io.IOException\r\nimport java.util.*\r\nimport javax.xml.parsers.DocumentBuilderFactory\r\n\r\n/**\r\n * Represents the game settings used for this game instance.\r\n * @author Vexia\r\n */\r\nclass GameSettings\r\n/**\r\n * Constructs a new `GameSettings` `Object`.\r\n * @param name the name.\r\n * @param beta the beta.\r\n * @param type the game type.\r\n * @param gui if gui is enabled.\r\n * @param worldId the world id.\r\n * @param countryIndex The country index.\r\n * @param members If the world is members only.\r\n * @param msAddress The address of the Management server.\r\n */ internal constructor(\r\n        /**\r\n         * The name of the namme.\r\n         */\r\n        val name: String,\r\n        /**\r\n         * If the game is in beta mode.\r\n         */\r\n        val isBeta: Boolean,\r\n        /**\r\n         * If the game is in developer mode.\r\n         */\r\n        val isDevMode: Boolean,\r\n        /**\r\n         * If the gui is enabled.\r\n         */\r\n        val isGui: Boolean,\r\n        /**\r\n         * The world id of the server.\r\n         */\r\n        val worldId: Int,\r\n        /**\r\n         * The country index.\r\n         */\r\n        val countryIndex: Int,\r\n        /**\r\n         * The activity.\r\n         */\r\n        val activity: String,\r\n        /**\r\n         * If the world is members only.\r\n         */\r\n        val isMembers: Boolean,\r\n        /**\r\n         * If the world is a pvp world.\r\n         */\r\n        val isPvp: Boolean,\r\n        /**\r\n         * If only quick chat can be used on the world.\r\n         */\r\n        val isQuickChat: Boolean,\r\n        /**\r\n         * If lootshare option is enabled on this world.\r\n         */\r\n        val isLootshare: Boolean,\r\n        /**\r\n         * The address of the Management server.\r\n         */\r\n        val msAddress: String,\r\n        val default_xp_rate: Double,\r\n        val allow_slayer_reroll: Boolean,\r\n        val enable_bots: Boolean,\r\n        val autostock_ge: Boolean,\r\n        val allow_token_purchase: Boolean\r\n        ) {\r\n    val isHosted: Boolean\r\n        get() = !isDevMode\r\n\r\n    override fun toString(): String {\r\n        return \"GameSettings [name=$name, debug=$isBeta, devMode=$isDevMode, gui=$isGui, worldId=$worldId]\"\r\n    }\r\n\r\n    companion object {\r\n        /**\r\n         * Parses the game settings from the program arguments.\r\n         * @param args The program arguments.\r\n         * @return The game settings.\r\n         */\r\n        fun parse(args: Array<String>): GameSettings? {\r\n            return parse(args[0])\r\n        }\r\n\r\n        /**\r\n         * Parses a game settings file.\r\n         * @param path the path.\r\n         * @return the settings.\r\n         */\r\n        fun parse(path: String): GameSettings? {\r\n            val f = File(path)\r\n            if (!f.exists()) {\r\n                return null\r\n            }\r\n            val factory = DocumentBuilderFactory.newInstance()\r\n            try {\r\n                val builder = factory.newDocumentBuilder()\r\n                val doc = builder.parse(path)\r\n                val settings = doc.getElementsByTagName(\"GameSettings\").item(0) as Element\r\n                val name = settings.getAttribute(\"name\")\r\n                val beta = java.lang.Boolean.parseBoolean(settings.getAttribute(\"debug\"))\r\n                val devMode = java.lang.Boolean.parseBoolean(settings.getAttribute(\"dev\"))\r\n                val startGui = java.lang.Boolean.parseBoolean(settings.getAttribute(\"startGui\"))\r\n                val worldId = settings.getAttribute(\"worldID\").toInt()\r\n                val countryId = settings.getAttribute(\"countryID\").toInt()\r\n                val activity = settings.getAttribute(\"activity\")\r\n                val pvp = java.lang.Boolean.parseBoolean(settings.getAttribute(\"pvpWorld\"))\r\n                val ipAddress = settings.getAttribute(\"msip\")\r\n                val defaultXpRate = settings.getAttribute(\"default_xp_rate\").toDouble()\r\n                val allowSlayerReroll = settings.getAttribute(\"allow_slayer_reroll\")!!.toBoolean()\r\n                val enableBots = settings.getAttribute(\"enable_bots\")!!.toBoolean()\r\n                val autostockGe = settings.getAttribute(\"autostock_ge\")!!.toBoolean()\r\n                val allow_token_purchase = settings.getAttribute(\"allow_token_purchase\")!!.toBoolean()\r\n                val pluginSettings = doc.getElementsByTagName(\"PluginSetting\")\r\n                for (i in 0 until pluginSettings.length) {\r\n                    val settingsNode = pluginSettings.item(i)\r\n                    if (settingsNode.nodeType == Node.ELEMENT_NODE) {\r\n                        val pluginSetting = settingsNode as Element\r\n                        val pName = pluginSetting.getAttribute(\"name\")\r\n                        val enabled = java.lang.Boolean.parseBoolean(pluginSetting.getAttribute(\"enabled\"))\r\n                        if (!enabled) {\r\n                            println(\"Setting $pName as disabled.\")\r\n                            PluginManager.disabledPlugins.putIfAbsent(pName, false)\r\n                        }\r\n                    }\r\n                }\r\n                return GameSettings(name, beta, devMode, startGui, worldId, countryId, activity, true, pvp, false, false, ipAddress,defaultXpRate,allowSlayerReroll,enableBots,autostockGe,allow_token_purchase)\r\n            } catch (e: Exception) {\r\n                e.printStackTrace()\r\n            }\r\n            return null\r\n        }\r\n\r\n        /**\r\n         * Gets the properties.\r\n         * @param path the path.\r\n         * @return the properties.\r\n         */\r\n        private fun getProperties(path: String): Properties {\r\n            val file: FileInputStream\r\n            val properties = Properties()\r\n            try {\r\n                file = FileInputStream(path)\r\n                properties.load(file)\r\n            } catch (e: IOException) {\r\n                println(\"Warning: Could not find file in \" + System.getProperty(\"user.dir\") + path)\r\n                e.printStackTrace()\r\n            }\r\n            return properties\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/world/GameSettings.kt	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/world/GameSettings.kt	(date 1597089529789)
@@ -76,6 +76,7 @@
         val msAddress: String,
         val default_xp_rate: Double,
         val allow_slayer_reroll: Boolean,
+        val enable_default_clan: Boolean,
         val enable_bots: Boolean,
         val autostock_ge: Boolean,
         val allow_token_purchase: Boolean
@@ -123,6 +124,7 @@
                 val ipAddress = settings.getAttribute("msip")
                 val defaultXpRate = settings.getAttribute("default_xp_rate").toDouble()
                 val allowSlayerReroll = settings.getAttribute("allow_slayer_reroll")!!.toBoolean()
+                val enableDefaultClan = settings.getAttribute("enable_default_clan")!!.toBoolean()
                 val enableBots = settings.getAttribute("enable_bots")!!.toBoolean()
                 val autostockGe = settings.getAttribute("autostock_ge")!!.toBoolean()
                 val allow_token_purchase = settings.getAttribute("allow_token_purchase")!!.toBoolean()
@@ -139,7 +141,7 @@
                         }
                     }
                 }
-                return GameSettings(name, beta, devMode, startGui, worldId, countryId, activity, true, pvp, false, false, ipAddress,defaultXpRate,allowSlayerReroll,enableBots,autostockGe,allow_token_purchase)
+                return GameSettings(name, beta, devMode, startGui, worldId, countryId, activity, true, pvp, false, false, ipAddress,defaultXpRate,allowSlayerReroll,enableDefaultClan,enableBots,autostockGe,allow_token_purchase)
             } catch (e: Exception) {
                 e.printStackTrace()
             }
Index: Client/src/main/java/org/runite/jagex/KeyboardListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.runite.jagex;\r\nimport java.awt.event.FocusEvent;\r\nimport java.awt.event.FocusListener;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\n\r\nfinal class KeyboardListener implements KeyListener, FocusListener {\r\n\r\n   static boolean aBoolean1905 = true;\r\n   static int anInt1906;\r\n   static int anInt1908 = 0;\r\n   static int anInt1909;\r\n   static int anInt1910;\r\n   static Class93 aClass93_1911 = new Class93(260);\r\n   static int anInt1912;\r\n   static int anInt1914;\r\n   static RSString aClass94_1915 = RSString.createRSString(\"Null\");\r\n   static CacheIndex aClass153_1916;\r\n   static int anInt1918 = 0;\r\n\r\n\r\n   public final synchronized void keyPressed(KeyEvent var1) {\r\n      try {\r\n         switch (var1.getKeyCode())\r\n         {\r\n            case 16:\r\n               MouseWheel.shiftDown = true;\r\n               break;\r\n            case 17:\r\n               MouseWheel.ctrlDown = true;\r\n               break;\r\n         }\r\n         if(null != Class3_Sub13_Sub3.aClass148_3049) {\r\n            Class3_Sub13_Sub33.anInt3398 = 0;\r\n            int var2 = var1.getKeyCode();\r\n            switch(var2) {\r\n               case 112://f1\r\n                  var2 = 115;\r\n                  break;\r\n               case 113://f2\r\n                  var2 = 116;\r\n                  break;\r\n               case 114://f3\r\n                  var2 = 117;\r\n                  break;\r\n               case 115://f4\r\n                  var2 = 118;\r\n                  break;\r\n               case 116://f5\r\n                  var2 = 112;\r\n                  break;\r\n            }\r\n            if(0 <= var2 && Class117.anIntArray1611.length > var2) {\r\n               var2 = Class117.anIntArray1611[var2];\r\n               // System.out.println(var2);\r\n               if(0 != (var2 & 128)) {\r\n                  var2 = -1;\r\n               }\r\n            } else {\r\n               var2 = -1;\r\n            }\r\n            \r\n            \r\n            \r\n            /**\r\n             * Tab to reply\r\n             */\r\n\t\t\tif (var1.getKeyCode() == KeyEvent.VK_TAB) {\r\n\t\t\t\tClass73.ClientCommands(RSString.createRSString(\"::reply\"), false);\r\n\t\t\t}\r\n\r\n\t\t\tif (var1.getKeyCode() == KeyEvent.VK_ESCAPE)\r\n            {\r\n               Class73.ClientCommands(RSString.createRSString(\"::shutdowninterface\"), false);\r\n            }\r\n\t\t\t\r\n\t\t\t//causing issues when in other interfaces, such as GE interface. My quick thing impl didn't work - Jamix77\r\n\t\t\t\r\n\t\t\t/**if (var1.getKeyCode() == KeyEvent.VK_SPACE)\r\n            {\r\n               Class2.method78(40, false, 0);\r\n            }**/\r\n\t\t\t\r\n            \r\n            /**\r\n             * Controls arrow key mouse movement\r\n             */\r\n            if(Class3_Sub13.anInt2384 >= 0 && var2 >= 0) {\r\n               Class151_Sub1.anIntArray2952[Class3_Sub13.anInt2384] = var2;\r\n               Class3_Sub13.anInt2384 = 127 & Class3_Sub13.anInt2384 - -1;\r\n               if(Class3_Sub13.anInt2384 == Class133.anInt1744) {\r\n                  Class3_Sub13.anInt2384 = -1;\r\n               }\r\n            }\r\n\r\n            int var3;\r\n            if(var2 >= 0) {\r\n               var3 = 127 & 1 + Class25.anInt491;\r\n               if(var3 != Class3_Sub28_Sub9.anInt3620) {\r\n                  Class129.anIntArray1693[Class25.anInt491] = var2;\r\n                  Class155.anIntArray1978[Class25.anInt491] = -1;\r\n                  Class25.anInt491 = var3;\r\n               }\r\n            }\r\n\r\n            var3 = var1.getModifiers();\r\n            if((var3 & 10) != 0 || 85 == var2 || var2 == 10) {\r\n               var1.consume();\r\n            }\r\n         }\r\n\r\n      } catch (RuntimeException var4) {\r\n         throw Class44.method1067(var4, \"uf.keyPressed(\" + (var1 != null?\"{...}\":\"null\") + ')');\r\n      }\r\n   }\r\n\r\n   public final void keyTyped(KeyEvent var1) {\r\n      try {\r\n    \t \r\n         if(Class3_Sub13_Sub3.aClass148_3049 != null) {\r\n            int var2 = Class79.method1386(true, var1);\r\n            if(var2 >= 0) {\r\n               int var3 = 1 + Class25.anInt491 & 127;\r\n               if(var3 != Class3_Sub28_Sub9.anInt3620) {\r\n                  Class129.anIntArray1693[Class25.anInt491] = -1;\r\n                  Class155.anIntArray1978[Class25.anInt491] = var2;\r\n                  Class25.anInt491 = var3;\r\n               }\r\n            }\r\n         }\r\n\r\n         var1.consume();\r\n      } catch (RuntimeException var4) {\r\n         throw Class44.method1067(var4, \"uf.keyTyped(\" + (var1 != null?\"{...}\":\"null\") + ')');\r\n      }\r\n   }\r\n\r\n   public final synchronized void focusLost(FocusEvent var1) {\r\n      try {\r\n         if(null != Class3_Sub13_Sub3.aClass148_3049) {\r\n            Class3_Sub13.anInt2384 = -1;\r\n         }\r\n\r\n      } catch (RuntimeException var3) {\r\n         throw Class44.method1067(var3, \"uf.focusLost(\" + (var1 != null?\"{...}\":\"null\") + ')');\r\n      }\r\n   }\r\n\r\n   public final synchronized void keyReleased(KeyEvent var1) {\r\n      switch (var1.getKeyCode())\r\n      {\r\n         case 16:\r\n            MouseWheel.shiftDown = false;\r\n            break;\r\n         case 17:\r\n            MouseWheel.ctrlDown = false;\r\n            break;\r\n      }\r\n      try {\r\n         if(null != Class3_Sub13_Sub3.aClass148_3049) {\r\n            Class3_Sub13_Sub33.anInt3398 = 0;\r\n            int var2 = var1.getKeyCode();\r\n            if(var2 >= 0 && var2 < Class117.anIntArray1611.length) {\r\n               var2 = Class117.anIntArray1611[var2] & -129;\r\n            } else {\r\n               var2 = -1;\r\n            }\r\n\r\n            if(Class3_Sub13.anInt2384 >= 0 && var2 >= 0) {\r\n               Class151_Sub1.anIntArray2952[Class3_Sub13.anInt2384] = ~var2;\r\n               Class3_Sub13.anInt2384 = 127 & 1 + Class3_Sub13.anInt2384;\r\n               if(Class3_Sub13.anInt2384 == Class133.anInt1744) {\r\n                  Class3_Sub13.anInt2384 = -1;\r\n               }\r\n            }\r\n         }\r\n\r\n         var1.consume();\r\n      } catch (RuntimeException var3) {\r\n         throw Class44.method1067(var3, \"uf.keyReleased(\" + (var1 != null?\"{...}\":\"null\") + ')');\r\n      }\r\n   }\r\n\r\n   public final void focusGained(FocusEvent var1) {}\r\n\r\n   public static void method2085(int var0) {\r\n      try {\r\n         aClass93_1911 = null;\r\n         aClass153_1916 = null;\r\n         if(var0 > 81) {\r\n            aClass94_1915 = null;\r\n         }\r\n      } catch (RuntimeException var2) {\r\n         throw Class44.method1067(var2, \"uf.A(\" + var0 + ')');\r\n      }\r\n   }\r\n\r\n   static final void method2086(byte var0) {\r\n      try {\r\n         if(var0 >= 62) {\r\n            int var1 = Class102.player.anInt2819 + Class3_Sub13_Sub18.anInt3216;\r\n            int var2 = Class102.player.anInt2829 - -InputStream_Sub1.anInt42;\r\n            if(-var1 + Class3_Sub13_Sub13.anInt3155 < -500 || -var1 + Class3_Sub13_Sub13.anInt3155 > 500 || Class62.anInt942 + -var2 < -500 || -var2 + Class62.anInt942 > 500) {\r\n               Class3_Sub13_Sub13.anInt3155 = var1;\r\n               Class62.anInt942 = var2;\r\n            }\r\n\r\n            if(var2 != Class62.anInt942) {\r\n               Class62.anInt942 += (-Class62.anInt942 + var2) / 16;\r\n            }\r\n\r\n            if(var1 != Class3_Sub13_Sub13.anInt3155) {\r\n               Class3_Sub13_Sub13.anInt3155 += (-Class3_Sub13_Sub13.anInt3155 + var1) / 16;\r\n            }\r\n\r\n            if(Class15.aBoolean346) {\r\n               for(int var3 = 0; var3 < Class3_Sub23.anInt2537; ++var3) {\r\n                  int var4 = Class133.anIntArray1755[var3];\r\n                  if(98 == var4) {\r\n                     Class3_Sub9.anInt2309 = -16 & Class3_Sub9.anInt2309 + 47;\r\n                  } else {\r\n                     if(var4 == 99) {\r\n                        Class3_Sub9.anInt2309 = -16 & Class3_Sub9.anInt2309 - 17;\r\n                     } else {\r\n                        if(var4 == 96) {\r\n                           GraphicDefinition.CAMERA_DIRECTION = GraphicDefinition.CAMERA_DIRECTION - 65 & -128;\r\n                        } else {\r\n                           if(var4 == 97) {\r\n                              GraphicDefinition.CAMERA_DIRECTION = GraphicDefinition.CAMERA_DIRECTION + 191 & -128;\r\n                           }\r\n                        }\r\n                     }\r\n                  }\r\n               }\r\n            } else {\r\n               if(ObjectDefinition.aBooleanArray1490[98]) {\r\n                  Class27.anInt517 += (-Class27.anInt517 + 12) / 2;\r\n               } else if(!ObjectDefinition.aBooleanArray1490[99]) {\r\n                  Class27.anInt517 /= 2;\r\n               } else {\r\n                  Class27.anInt517 += (-Class27.anInt517 + -12) / 2;\r\n               }\r\n\r\n               if(!ObjectDefinition.aBooleanArray1490[96]) {\r\n                  if(ObjectDefinition.aBooleanArray1490[97]) {\r\n                     Class3_Sub5.anInt2281 += (-Class3_Sub5.anInt2281 + 24) / 2;\r\n                  } else {\r\n                     Class3_Sub5.anInt2281 /= 2;\r\n                  }\r\n               } else {\r\n                  Class3_Sub5.anInt2281 += (-Class3_Sub5.anInt2281 + -24) / 2;\r\n               }\r\n\r\n               Class3_Sub9.anInt2309 += Class27.anInt517 / 2;\r\n               GraphicDefinition.CAMERA_DIRECTION += Class3_Sub5.anInt2281 / 2;\r\n            }\r\n\r\n            Class47.method1098((byte)-94);\r\n         }\r\n      } catch (RuntimeException var5) {\r\n         throw Class44.method1067(var5, \"uf.B(\" + var0 + ')');\r\n      }\r\n   }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Client/src/main/java/org/runite/jagex/KeyboardListener.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Client/src/main/java/org/runite/jagex/KeyboardListener.java	(date 1597089529723)
@@ -33,23 +33,23 @@
          if(null != Class3_Sub13_Sub3.aClass148_3049) {
             Class3_Sub13_Sub33.anInt3398 = 0;
             int var2 = var1.getKeyCode();
-            switch(var2) {
-               case 112://f1
-                  var2 = 115;
-                  break;
-               case 113://f2
-                  var2 = 116;
-                  break;
-               case 114://f3
-                  var2 = 117;
-                  break;
-               case 115://f4
-                  var2 = 118;
-                  break;
-               case 116://f5
-                  var2 = 112;
-                  break;
-            }
+//            switch(var2) {
+//               case 112://f1
+//                  var2 = 115;
+//                  break;
+//               case 113://f2
+//                  var2 = 116;
+//                  break;
+//               case 114://f3
+//                  var2 = 117;
+//                  break;
+//               case 115://f4
+//                  var2 = 118;
+//                  break;
+//               case 116://f5
+//                  var2 = 112;
+//                  break;
+//            }
             if(0 <= var2 && Class117.anIntArray1611.length > var2) {
                var2 = Class117.anIntArray1611[var2];
                // System.out.println(var2);
Index: Server/src/main/java/Server/core/game/content/global/action/DropItemHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.content.global.action;\r\n\r\nimport core.game.node.Node;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.PlayerParser;\r\nimport core.game.node.entity.player.link.audio.Audio;\r\nimport core.game.node.item.GroundItemManager;\r\nimport core.game.node.item.Item;\r\nimport core.game.system.SystemLogger;\r\nimport core.game.world.GameWorld;\r\n\r\n/**\r\n * Handles the dropping of an item.\r\n * @author Vexia\r\n */\r\npublic final class DropItemHandler {\r\n\r\n\t/**\r\n\t * Handles the droping of an item.\r\n\t * @param player the player.\r\n\t * @param node the node.\r\n\t * @param option the option.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic static boolean handle(final Player player, Node node, String option) {\r\n\t\tItem item = (Item) node;\r\n\t\tif (item.getSlot() == -1) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"Invalid slot!\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tswitch (option) {\r\n\t\tcase \"drop\":\r\n\t\tcase \"destroy\":\r\n\t\tcase \"dissolve\":\r\n\t\t\tif (!player.getInterfaceManager().close()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tplayer.getDialogueInterpreter().close();\r\n\t\t\tplayer.getAudioManager().send(new Audio(2393, 0, 0));\r\n\t\t\tplayer.getPulseManager().clear();\r\n\t\t\tif (option.equalsIgnoreCase(\"destroy\") || option.equalsIgnoreCase(\"dissolve\")) {\r\n\t\t\t\tplayer.getDialogueInterpreter().open(9878, item);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (player.getAttribute(\"equipLock:\" + item.getId(), 0) > GameWorld.getTicks()) {\r\n\t\t\t\tSystemLogger.log(player + \", tried to do the drop & equip dupe.\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (player.getInventory().replace(null, item.getSlot()) == item) {\r\n\t\t\t\titem = item.getDropItem();\r\n\t\t\t\tplayer.getAudioManager().send(new Audio(item.getId() == 995 ? 10 : 2739, 1, 0));\r\n\t\t\t\tGroundItemManager.create(item, player.getLocation(), player);\r\n\t\t\t\tPlayerParser.dump(player);\r\n\t\t\t}\r\n\t\t\tplayer.setAttribute(\"droppedItem:\" + item.getId(), GameWorld.getTicks() + 2);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Drops an item.\r\n\t * @param player the player.\r\n\t * @param item the item.\r\n\t * @return\r\n\t */\r\n\tpublic static boolean drop(Player player, Item item) {\r\n\t\treturn handle(player, item, item.getDefinition().hasDestroyAction() ? \"destroy\" : \"drop\");\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/content/global/action/DropItemHandler.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/content/global/action/DropItemHandler.java	(date 1597089529746)
@@ -50,7 +50,7 @@
 				item = item.getDropItem();
 				player.getAudioManager().send(new Audio(item.getId() == 995 ? 10 : 2739, 1, 0));
 				GroundItemManager.create(item, player.getLocation(), player);
-				PlayerParser.dump(player);
+				PlayerParser.save(player);
 			}
 			player.setAttribute("droppedItem:" + item.getId(), GameWorld.getTicks() + 2);
 			return true;
Index: Server/data/players/template/template.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/data/players/template/template.json	(date 1597089529739)
+++ Server/data/players/template/template.json	(date 1597089529739)
@@ -0,0 +1,1366 @@
+{
+  "configs": [],
+  "familiarManager": {
+    "petDetails": []
+  },
+  "barCrawl": {
+    "started": false,
+    "bars": [
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false
+    ]
+  },
+  "exp_multiplier": "5.0",
+  "unlockedMusic": [
+    "62"
+  ],
+  "skills": [
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "0",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "1",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "2",
+      "experience": "0.0"
+    },
+    {
+      "static": "10",
+      "dynamic": "10",
+      "id": "3",
+      "experience": "1154.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "4",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "5",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "6",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "7",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "8",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "9",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "10",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "11",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "12",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "13",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "14",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "15",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "16",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "17",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "18",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "19",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "20",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "21",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "22",
+      "experience": "0.0"
+    },
+    {
+      "static": "1",
+      "dynamic": "1",
+      "id": "23",
+      "experience": "0.0"
+    }
+  ],
+  "spellbook": "192",
+  "activityData": {
+    "elnockSupplies": false,
+    "lostCannon": false,
+    "barrowBrothers": [
+      false,
+      false,
+      false,
+      false,
+      false,
+      false
+    ],
+    "barrowTunnelIndex": "0",
+    "bountyRogueRate": "0",
+    "borkKills": "0",
+    "solvedMazes": "0",
+    "bountyHunterRate": "0",
+    "pizazzPoints": [
+      "0",
+      "0",
+      "0",
+      "0"
+    ],
+    "startedMta": false,
+    "hardcoreDeath": false,
+    "pestPoints": "0",
+    "kolodionBoss": "0",
+    "warriorGuildTokens": "0",
+    "kolodionStage": "0",
+    "godCasts": [
+      "0",
+      "0",
+      "0"
+    ],
+    "barrowKills": "0",
+    "fogRating": "0",
+    "bonesToPeaches": false,
+    "lastBorkBattle": "0",
+    "topGrabbed": false
+  },
+  "farming": {},
+  "emoteData": [
+    "0",
+    "1",
+    "2",
+    "3",
+    "4",
+    "5",
+    "6",
+    "7",
+    "8",
+    "9",
+    "10",
+    "11",
+    "12",
+    "13",
+    "14",
+    "15",
+    "16",
+    "17",
+    "18",
+    "19",
+    "20",
+    "21",
+    "37"
+  ],
+  "questData": {
+    "dragonSlayerPlanks": "0",
+    "talkedDrezel": false,
+    "desertTreasureNode": [
+      {
+        "amount": "12",
+        "id": "1513"
+      },
+      {
+        "amount": "10",
+        "id": "592"
+      },
+      {
+        "amount": "6",
+        "id": "1775"
+      },
+      {
+        "amount": "6",
+        "id": "2353"
+      },
+      {
+        "amount": "2",
+        "id": "526"
+      },
+      {
+        "amount": "2",
+        "id": "973"
+      },
+      {
+        "amount": "1",
+        "id": "565"
+      }
+    ],
+    "cooksAssistant": [
+      false,
+      false,
+      false,
+      false
+    ],
+    "witchsExperimentKilled": false,
+    "draynorLever": [
+      true,
+      true,
+      true,
+      true,
+      true,
+      true
+    ],
+    "dragonSlayer": [
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false
+    ],
+    "witchsExperimentStage": "0",
+    "demonSlayer": [
+      false,
+      false
+    ],
+    "gardenerAttack": false
+  },
+  "settings": {
+    "attackStyle": "0",
+    "splitPrivate": false,
+    "disableChatEffects": false,
+    "clanChatSetting": "0",
+    "runToggled": false,
+    "assistSetting": "0",
+    "acceptAid": false,
+    "soundEffectVolume": "0",
+    "areaSoundVolume": "0",
+    "brightness": "2",
+    "publicChatSetting": "0",
+    "singleMouse": false,
+    "specialEnergy": "100",
+    "tradeSetting": "0",
+    "retaliation": true,
+    "privateChatSetting": "0",
+    "musicVolume": "0",
+    "runEnergy": "100.0"
+  },
+  "slayer": {
+    "taskStreak": "0",
+    "canEarnPoints": false,
+    "totalTasks": "0",
+    "learned_rewards": [
+      false,
+      false,
+      false
+    ],
+    "points": "0"
+  },
+  "quests": {
+    "questStages": [
+      {
+        "questId": "65",
+        "questStage": "0"
+      },
+      {
+        "questId": "67",
+        "questStage": "0"
+      },
+      {
+        "questId": "136",
+        "questStage": "0"
+      },
+      {
+        "questId": "14",
+        "questStage": "0"
+      },
+      {
+        "questId": "15",
+        "questStage": "0"
+      },
+      {
+        "questId": "16",
+        "questStage": "0"
+      },
+      {
+        "questId": "17",
+        "questStage": "0"
+      },
+      {
+        "questId": "81",
+        "questStage": "0"
+      },
+      {
+        "questId": "146",
+        "questStage": "0"
+      },
+      {
+        "questId": "18",
+        "questStage": "0"
+      },
+      {
+        "questId": "83",
+        "questStage": "0"
+      },
+      {
+        "questId": "19",
+        "questStage": "0"
+      },
+      {
+        "questId": "20",
+        "questStage": "0"
+      },
+      {
+        "questId": "21",
+        "questStage": "0"
+      },
+      {
+        "questId": "22",
+        "questStage": "0"
+      },
+      {
+        "questId": "87",
+        "questStage": "0"
+      },
+      {
+        "questId": "23",
+        "questStage": "0"
+      },
+      {
+        "questId": "24",
+        "questStage": "0"
+      },
+      {
+        "questId": "25",
+        "questStage": "0"
+      },
+      {
+        "questId": "26",
+        "questStage": "0"
+      },
+      {
+        "questId": "27",
+        "questStage": "0"
+      },
+      {
+        "questId": "28",
+        "questStage": "0"
+      },
+      {
+        "questId": "29",
+        "questStage": "0"
+      },
+      {
+        "questId": "30",
+        "questStage": "0"
+      },
+      {
+        "questId": "31",
+        "questStage": "0"
+      },
+      {
+        "questId": "33",
+        "questStage": "0"
+      },
+      {
+        "questId": "99",
+        "questStage": "0"
+      },
+      {
+        "questId": "105",
+        "questStage": "0"
+      },
+      {
+        "questId": "48",
+        "questStage": "0"
+      },
+      {
+        "questId": "49",
+        "questStage": "0"
+      },
+      {
+        "questId": "113",
+        "questStage": "0"
+      },
+      {
+        "questId": "123",
+        "questStage": "0"
+      },
+      {
+        "questId": "124",
+        "questStage": "0"
+      },
+      {
+        "questId": "62",
+        "questStage": "0"
+      }
+    ],
+    "points": "0"
+  },
+  "globalData": {
+    "luthasTask": false,
+    "doubleExpDelay": "0",
+    "macroDisabled": false,
+    "abyssData": [
+      false,
+      false,
+      false,
+      false
+    ],
+    "starSpriteDelay": "0",
+    "taskAmount": "0",
+    "wydinEmployee": false,
+    "godPages": [
+      false,
+      false,
+      false,
+      false
+    ],
+    "zafTime": "0",
+    "bossCounters": [
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0",
+      "0"
+    ],
+    "strongHoldRewards": [
+      false,
+      false,
+      false,
+      false
+    ],
+    "lowAlchemyCharges": "0",
+    "rcDecays": [
+      "0",
+      "0",
+      "0"
+    ],
+    "apprentice": false,
+    "zafAmount": "8",
+    "barrowsLoots": "0",
+    "taskPoints": "0",
+    "playerTestStage": "0",
+    "hunterCapeDelay": "0",
+    "globalTeleporterDelay": "0",
+    "recoilDamage": "40",
+    "lumbridgeRope": false,
+    "avasDevice": false,
+    "hunterCapeCharges": "0",
+    "dropDelay": "0",
+    "geTutorial": false,
+    "assistTime": "0",
+    "magicSkillCapeDelay": "0",
+    "lootSharePoints": "0",
+    "essenceTeleporter": "0",
+    "readPlaques": [
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false
+    ],
+    "chatPing": "0",
+    "overChargeDelay": "0",
+    "braceletClayUses": "0",
+    "lowAlchemyDelay": "0",
+    "travelLogs": [
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false,
+      false
+    ],
+    "homeTeleportDelay": "0",
+    "karamjaBananas": "0",
+    "forgingUses": "0",
+    "joinedMonastery": false,
+    "charmingDelay": "0",
+    "disableDeathScreen": false,
+    "silkSteal": "0",
+    "draynorRecording": false,
+    "assistExperience": [
+      "0.0",
+      "0.0",
+      "0.0",
+      "0.0",
+      "0.0",
+      "0.0",
+      "0.0",
+      "0.0",
+      "0.0"
+    ],
+    "lootShareDelay": "1596774581613",
+    "godBooks": [
+      false,
+      false,
+      false
+    ],
+    "fritzGlass": false,
+    "tutorialStage": "1",
+    "ectoCharges": "0",
+    "tutorClaim": "0",
+    "disableNews": false,
+    "runReplenishDelay": "0",
+    "doubleExp": "0",
+    "runReplenishCharges": "0"
+  },
+  "core_data": {
+    "bank": [
+      {
+        "amount": "25",
+        "charge": "1000",
+        "slot": "0",
+        "id": "995"
+      }
+    ],
+    "equipment": [],
+    "location": "2524,5002,0",
+    "inventory": [
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "0",
+        "id": "1351"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "1",
+        "id": "590"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "2",
+        "id": "303"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "3",
+        "id": "315"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "4",
+        "id": "1925"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "5",
+        "id": "1931"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "6",
+        "id": "2309"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "7",
+        "id": "1265"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "8",
+        "id": "1205"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "9",
+        "id": "1277"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "10",
+        "id": "1171"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "11",
+        "id": "841"
+      },
+      {
+        "amount": "25",
+        "charge": "1000",
+        "slot": "12",
+        "id": "882"
+      },
+      {
+        "amount": "25",
+        "charge": "1000",
+        "slot": "13",
+        "id": "556"
+      },
+      {
+        "amount": "15",
+        "charge": "1000",
+        "slot": "14",
+        "id": "558"
+      },
+      {
+        "amount": "6",
+        "charge": "1000",
+        "slot": "15",
+        "id": "555"
+      },
+      {
+        "amount": "4",
+        "charge": "1000",
+        "slot": "16",
+        "id": "557"
+      },
+      {
+        "amount": "2",
+        "charge": "1000",
+        "slot": "17",
+        "id": "559"
+      },
+      {
+        "amount": "1",
+        "charge": "1000",
+        "slot": "18",
+        "id": "5606"
+      }
+    ]
+  },
+  "playerMonitor": {},
+  "totalEXP": "0.0",
+  "appearance": {
+    "appearance_cache": [
+      {
+        "color": "0",
+        "look": "0"
+      },
+      {
+        "color": "0",
+        "look": "10"
+      },
+      {
+        "color": "0",
+        "look": "18"
+      },
+      {
+        "color": "0",
+        "look": "26"
+      },
+      {
+        "color": "0",
+        "look": "33"
+      },
+      {
+        "color": "0",
+        "look": "36"
+      },
+      {
+        "color": "0",
+        "look": "42"
+      }
+    ],
+    "gender": "0"
+  },
+  "bankPinManager": {
+    "longRecovery": false
+  },
+  "grave_type": "0",
+  "achievementData": [
+    {
+      "completedLevels": [
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ],
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ],
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ]
+      ],
+      "rewardedLevels": [
+        false,
+        false,
+        false
+      ],
+      "startedLevels": [
+        false,
+        false,
+        false
+      ]
+    },
+    {
+      "completedLevels": [
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ],
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ],
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ]
+      ],
+      "rewardedLevels": [
+        false,
+        false,
+        false
+      ],
+      "startedLevels": [
+        false,
+        false,
+        false
+      ]
+    },
+    {
+      "completedLevels": [
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ],
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ],
+        [
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false,
+          false
+        ]
+      ],
+      "rewardedLevels": [
+        false,
+        false,
+        false
+      ],
+      "startedLevels": [
+        false,
+        false,
+        false
+      ]
+    }
+  ],
+  "treasureTrails": {
+    "completedClues": [
+      "0",
+      "0",
+      "0"
+    ]
+  },
+  "houseData": {
+    "rooms": [],
+    "location": "0",
+    "style": "0"
+  },
+  "statistics": [
+    {
+      "index": "0",
+      "value": "0"
+    },
+    {
+      "index": "0",
+      "value": "0"
+    },
+    {
+      "index": "0",
+      "value": "0"
+    },
+    {
+      "index": "0",
+      "value": "0"
+    },
+    {
+      "index": "0",
+      "value": "0"
+    },
+    {
+      "index": "0",
+      "value": "0"
+    },
+    {
+      "index": "0",
+      "value": "0"
+    }
+  ]
+}
Index: Server/src/main/java/Server/core/game/container/Container.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.container;\r\n\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.item.GroundItemManager;\r\nimport core.game.node.item.Item;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.*;\r\n\r\n/**\r\n * Represents a container which contains items.\r\n *\r\n * @author Emperor\r\n */\r\npublic class Container {\r\n\r\n    /**\r\n     * The item array. A crystalline\r\n     */\r\n    private Item[] items;\r\n\r\n    /**\r\n     * The capacity.\r\n     */\r\n    private final int capacity;\r\n\r\n    /**\r\n     * The current sort type.\r\n     */\r\n    private SortType sortType;\r\n\r\n    /**\r\n     * The current container type.\r\n     */\r\n    private final ContainerType type;\r\n\r\n    /**\r\n     * The current container event.\r\n     */\r\n    private ContainerEvent event;\r\n\r\n    /**\r\n     * The container listeners.\r\n     */\r\n    private final List<ContainerListener> listeners = new ArrayList<>();\r\n\r\n    /**\r\n     * Constructs a new {@code Container} {@code Object}.\r\n     *\r\n     * @param capacity The capacity.\r\n     */\r\n    public Container(int capacity) {\r\n        this(capacity, ContainerType.DEFAULT);\r\n    }\r\n\r\n    /**\r\n     * Constructs a new {@code Container.java} {@code Object}.\r\n     *\r\n     * @param capacity the capacity.\r\n     * @param items    the items to add.\r\n     */\r\n    public Container(int capacity, Item... items) {\r\n        this(capacity);\r\n        add(items);\r\n    }\r\n\r\n    /**\r\n     * Constructs a new {@code Container} {@code Object}.\r\n     *\r\n     * @param capacity The capacity.\r\n     * @param type     The container type.\r\n     */\r\n    public Container(int capacity, ContainerType type) {\r\n        this(capacity, type, SortType.ID);\r\n    }\r\n\r\n    /**\r\n     * Constructs a new {@code Container} {@code Object}.\r\n     *\r\n     * @param capacity The capacity.\r\n     * @param type     The container type.\r\n     * @param sortType The sort type.\r\n     */\r\n    public Container(int capacity, ContainerType type, SortType sortType) {\r\n        this.capacity = capacity;\r\n        this.type = type;\r\n        this.items = new Item[capacity];\r\n        this.sortType = sortType;\r\n        this.event = new ContainerEvent(capacity);\r\n    }\r\n\r\n    /**\r\n     * Registers a container listener.\r\n     *\r\n     * @param listener The container listener.\r\n     * @return This container instance, for chaining.\r\n     */\r\n    public Container register(ContainerListener listener) {\r\n        listeners.add(listener);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds the items.\r\n     *\r\n     * @param items The items to add.\r\n     * @return {@code True} if successfully added <b>all</b> items.\r\n     */\r\n    public boolean add(Item... items) {\r\n        boolean addedAll = true;\r\n        for (Item item : items) {\r\n            if (item == null) {\r\n                continue;\r\n            }\r\n            if (!add(item, false)) {\r\n                addedAll = false;\r\n                break;\r\n            }\r\n        }\r\n        update();\r\n        return addedAll;\r\n    }\r\n\r\n    public void addList(List<Item> items){\r\n        items.stream().filter(Objects::nonNull).forEach(this::add);\r\n        update();\r\n    }\r\n\r\n    /**\r\n     * Inserts an item into a specific slot.\r\n     *\r\n     * @param fromSlot The original slot of the item.\r\n     * @param toSlot   The slot to insert into.\r\n     */\r\n    public void insert(int fromSlot, int toSlot) {\r\n        insert(fromSlot, toSlot, true);\r\n    }\r\n\r\n    /**\r\n     * Inserts an item into a specific slot.\r\n     *\r\n     * @param fromSlot The original slot of the item.\r\n     * @param toSlot   The slot to insert into.\r\n     * @param update   If the container packets should be sent.\r\n     */\r\n    public void insert(int fromSlot, int toSlot, boolean update) {\r\n        Item temp = items[fromSlot];\r\n        if (toSlot > fromSlot) {\r\n            for (int i = fromSlot; i < toSlot; i++) {\r\n                replace(get(i + 1), i, false);\r\n            }\r\n        } else if (fromSlot > toSlot) {\r\n            for (int i = fromSlot; i > toSlot; i--) {\r\n                replace(get(i - 1), i, false);\r\n            }\r\n        }\r\n        replace(temp, toSlot, update);\r\n    }\r\n\r\n    /**\r\n     * Adds an item to this container if full it goes to ground.\r\n     *\r\n     * @param item   the item.\r\n     * @param player the player.\r\n     * @param ground\r\n     * @return {@code True} if added.\r\n     */\r\n    public boolean add(final Item item, final Player player) {\r\n        if (!add(item, true, -1)) {\r\n            GroundItemManager.create(item, player);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public boolean addIfDoesntHave(final Item item) {\r\n        if (containsItem(item)) {\r\n            return false;\r\n        } else {\r\n            return add(item);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds an item to this container.\r\n     *\r\n     * @param item The item.\r\n     * @return {@code True} if the item got added.\r\n     */\r\n    public boolean add(Item item) {\r\n        return add(item, true, -1);\r\n    }\r\n\r\n    /**\r\n     * Adds an item to this container.\r\n     *\r\n     * @param item          The item to add.\r\n     * @param fireListener  If we should update.\r\n     * @param preferredSlot The slot to add the item in, when possible.\r\n     * @return {@code True} if the item got added.\r\n     */\r\n    public boolean add(Item item, boolean fireListener) {\r\n        return add(item, fireListener, -1);\r\n    }\r\n\r\n    /**\r\n     * Adds an item to this container.\r\n     *\r\n     * @param item          The item to add.\r\n     * @param fireListener  If we should update.\r\n     * @param preferredSlot The slot to add the item in, when possible.\r\n     * @return {@code True} if the item got added.\r\n     */\r\n    public boolean add(Item item, boolean fireListener, int preferredSlot) {\r\n        item = item.copy();\r\n        int maximum = getMaximumAdd(item);\r\n        if (maximum == 0) {\r\n            return false;\r\n        }\r\n//\t\tif (preferredSlot > -1 && items[preferredSlot] != null) {\r\n//\t\t\tpreferredSlot = -1;\r\n//\t\t}\r\n        if (item.getAmount() > maximum) {\r\n            item.setAmount(maximum);\r\n        }\r\n        if (type != ContainerType.NEVER_STACK && (item.getDefinition().isStackable() || type == ContainerType.ALWAYS_STACK || type == ContainerType.SHOP)) {\r\n            boolean hashBased = sortType == SortType.HASH;\r\n            for (int i = 0; i < items.length; i++) {\r\n                if (items[i] != null) {\r\n                    if ((hashBased && items[i].getIdHash() == item.getIdHash()) || (!hashBased && items[i].getId() == item.getId())) {\r\n                        int totalCount = item.getAmount() + items[i].getAmount();\r\n                        items[i] = new Item(items[i].getId(), totalCount, item.getCharge());\r\n                        items[i].setIndex(i);\r\n                        event.flag(i, items[i]);\r\n                        if (fireListener) {\r\n                            update();\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            int slot = preferredSlot > -1 ? preferredSlot : freeSlot();\r\n            if (slot == -1) {\r\n                return false;\r\n            }\r\n            items[slot] = item;\r\n            item.setIndex(slot);\r\n            event.flag(slot, item);\r\n            if (fireListener) {\r\n                update();\r\n            }\r\n            return true;\r\n        }\r\n        int slots = freeSlots();\r\n        if (slots >= item.getAmount()) {\r\n            for (int i = 0; i < item.getAmount(); i++) {\r\n                int slot = i == 0 && preferredSlot > -1 ? preferredSlot : freeSlot();\r\n                items[slot] = new Item(item.getId(), 1, item.getCharge());\r\n                items[slot].setIndex(slot);\r\n                event.flag(slot, items[slot]);\r\n            }\r\n            if (fireListener) {\r\n                update();\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes a set of items.\r\n     *\r\n     * @param items The set of items.\r\n     * @return {@code True} if all items got successfully removed.\r\n     */\r\n    public boolean remove(Item... items) {\r\n        boolean removedAll = true;\r\n        for (Item item : items) {\r\n            if (!remove(item, false)) {\r\n                removedAll = false;\r\n            }\r\n        }\r\n        update();\r\n        return removedAll;\r\n    }\r\n\r\n    /**\r\n     * Removes an item.\r\n     *\r\n     * @param item The item.\r\n     * @return {@code True} if the item got removed, {@code false} if not.\r\n     */\r\n    public boolean remove(Item item) {\r\n        return remove(item, true);\r\n    }\r\n\r\n    /**\r\n     * Removes an item.\r\n     *\r\n     * @param item         The item to remove.\r\n     * @param fireListener If the fire listener should be \"notified\".\r\n     * @return {@code True} if the item got removed, <br> {@code false} if not.\r\n     */\r\n    public boolean remove(Item item, boolean fireListener) {\r\n        int slot = getSlot(item);\r\n        if (slot != -1) {\r\n            return remove(item, slot, fireListener);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes an item from this container.\r\n     *\r\n     * @param item         The item.\r\n     * @param slot         The item slot.\r\n     * @param fireListener If the fire listener should be \"notified\".\r\n     * @return {@code True} if the item got removed, <br> {@code false} if the\r\n     * item on the slot was null or the ids didn't match.\r\n     */\r\n    public boolean remove(Item item, int slot, boolean fireListener) {\r\n        Item oldItem = items[slot];\r\n        if (oldItem == null || oldItem.getId() != item.getId()) {\r\n            return false;\r\n        }\r\n        if (item.getAmount() < 1) {\r\n            return true;\r\n        }\r\n        if (oldItem.getDefinition().isStackable() || type.equals(ContainerType.ALWAYS_STACK) || type == ContainerType.SHOP) {\r\n            if (item.getAmount() >= oldItem.getAmount()) {\r\n                items[slot] = null;\r\n                event.flagNull(slot);\r\n                if (fireListener) {\r\n                    update();\r\n                }\r\n                return true;\r\n            }\r\n            items[slot] = new Item(item.getId(), oldItem.getAmount() - item.getAmount(), item.getCharge());\r\n            items[slot].setIndex(slot);\r\n            event.flag(slot, items[slot]);\r\n            if (fireListener) {\r\n                update();\r\n            }\r\n            return true;\r\n        }\r\n        items[slot] = null;\r\n        event.flagNull(slot);\r\n        int removed = 1;\r\n        for (int i = removed; i < item.getAmount(); i++) {\r\n            slot = getSlot(item);\r\n            if (slot != -1) {\r\n                items[slot] = null;\r\n                event.flagNull(slot);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (fireListener) {\r\n            update();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Replaces the item on the given slot with the argued item.\r\n     *\r\n     * @param item The item.\r\n     * @param slot The slot.\r\n     * @return The old item.\r\n     */\r\n    public Item replace(Item item, int slot) {\r\n        return replace(item, slot, true);\r\n    }\r\n\r\n    /**\r\n     * Replaces the item on the given slot with the argued item.\r\n     *\r\n     * @param item         The item.\r\n     * @param slot         The slot.\r\n     * @param fireListener If the listener should be \"notified\".\r\n     * @return The old item.\r\n     */\r\n    public Item replace(Item item, int slot, boolean fireListener) {\r\n        if (item != null) {\r\n            if (item.getAmount() < 1 && type != ContainerType.SHOP) {\r\n                item = null;\r\n            } else {\r\n                item = item.copy();\r\n            }\r\n        }\r\n        Item oldItem = items[slot];\r\n        items[slot] = item;\r\n        if (item == null) {\r\n            event.flagNull(slot);\r\n        } else {\r\n            item.setIndex(slot);\r\n            event.flag(slot, item);\r\n        }\r\n        if (fireListener) {\r\n            update();\r\n        }\r\n        return oldItem;\r\n    }\r\n\r\n    /**\r\n     * Updates the container.\r\n     */\r\n    public void update() {\r\n        if (event.getChangeCount() < 1 && !event.isClear()) {\r\n            return;\r\n        }\r\n        for (ContainerListener listener : listeners) {\r\n            listener.update(this, event);\r\n        }\r\n        event.setClear(false);\r\n        event = new ContainerEvent(capacity);\r\n    }\r\n\r\n    /**\r\n     * Updates the container.\r\n     */\r\n    public void update(boolean force) {\r\n        if (event.getChangeCount() < 1 && !force) {\r\n            return;\r\n        }\r\n        for (ContainerListener listener : listeners) {\r\n            listener.update(this, event);\r\n        }\r\n        event = new ContainerEvent(capacity);\r\n    }\r\n\r\n    /**\r\n     * Refreshes the entire container.\r\n     */\r\n    public void refresh() {\r\n        for (ContainerListener listener : listeners) {\r\n            listener.refresh(this);\r\n        }\r\n        event = new ContainerEvent(capacity);\r\n    }\r\n    \r\n    public void refresh(ContainerListener listener) {\r\n    \tlistener.refresh(this);\r\n    \tevent = new ContainerEvent(capacity);\r\n    }\r\n\r\n    /**\r\n     * Gets the item on the given slot.\r\n     *\r\n     * @param slot The slot.\r\n     * @return The id of the item on the slot, or 0 if the item wasn't there.\r\n     */\r\n    public int getAsId(int slot) {\r\n        if (slot < 0 || slot >= items.length || items[slot] == null) {\r\n            return 0;\r\n        }\r\n        return items[slot].getId();\r\n    }\r\n\r\n\r\n    /**\r\n     * Gets the item on the given slot.\r\n     *\r\n     * @param slot The slot.\r\n     * @return The item on the slot, or {@code null} if the item wasn't there.\r\n     */\r\n    public Item get(int slot) {\r\n        if (slot < 0 || slot >= items.length) {\r\n            return null;\r\n        }\r\n        return items[slot];\r\n    }\r\n\r\n    /**\r\n     * Gets the item on the given slot.\r\n     *\r\n     * @param slot The slot.\r\n     * @return The item on the slot, or a new constructed item with id 0 if the\r\n     * item wasn't there.\r\n     */\r\n    public Item getNew(int slot) {\r\n        Item item = items[slot];\r\n        if (item != null) {\r\n            return item;\r\n        }\r\n        return new Item(0);\r\n    }\r\n\r\n    /**\r\n     * Gets the item id on the given slot.\r\n     *\r\n     * @param slot The slot.\r\n     * @return The id of the item on the slot.\r\n     */\r\n    public int getId(int slot) {\r\n        if (slot >= items.length) {\r\n            return -1;\r\n        }\r\n        Item item = items[slot];\r\n        if (item != null) {\r\n            return item.getId();\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Parses the container data from the byte buffer.\r\n     *\r\n     * @param buffer The byte buffer.\r\n     * @return The total value of all items (G.E price > Store price > High\r\n     * alchemy price).\r\n     */\r\n    public int parse(ByteBuffer buffer) {\r\n        int slot;\r\n        int total = 0;\r\n        while ((slot = buffer.getShort()) != -1) {\r\n            int id = buffer.getShort() & 0xFFFF;\r\n            int amount = buffer.getInt();\r\n            int charge = buffer.getInt();\r\n            if (id >= ItemDefinition.getDefinitions().size() || id < 0 || slot >= items.length || slot < 0) {\r\n                continue;\r\n            }\r\n            Item item = items[slot] = new Item(id, amount, charge);\r\n            item.setIndex(slot);\r\n            total += item.getValue();\r\n        }\r\n        return total;\r\n    }\r\n\r\n    /**\r\n     * Saves the item data on the byte buffer.\r\n     *\r\n     * @param buffer The byte buffer.\r\n     * @return The total value of all items (G.E price > Store price > High\r\n     * alchemy price).\r\n     */\r\n    public long save(ByteBuffer buffer) {\r\n        long totalValue = 0;\r\n        for (int i = 0; i < items.length; i++) {\r\n            Item item = items[i];\r\n            if (item == null) {\r\n                continue;\r\n            }\r\n            buffer.putShort((short) i);\r\n            buffer.putShort((short) item.getId());\r\n            buffer.putInt(item.getAmount());\r\n            buffer.putInt(item.getCharge());\r\n            totalValue += item.getValue();\r\n        }\r\n        buffer.putShort((short) -1);\r\n        return totalValue;\r\n    }\r\n\r\n    /**\r\n     * Copies the container to this container.\r\n     *\r\n     * @param c The container to copy.\r\n     */\r\n    public void copy(Container c) {\r\n        items = new Item[c.items.length];\r\n        for (int i = 0; i < items.length; i++) {\r\n            Item it = c.items[i];\r\n            if (it == null) {\r\n                continue;\r\n            }\r\n            items[i] = new Item(it.getId(), it.getAmount(), it.getCharge());\r\n            items[i].setIndex(i);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Formats a container for the SQL database.\r\n     *\r\n     * @return the string.\r\n     */\r\n    public String format() {\r\n        String log = \"\";\r\n        Map<Integer, Integer> map = new HashMap<>();\r\n        Integer old = null;\r\n        for (Item item : items) {\r\n            if (item != null) {\r\n                old = map.get(item.getId());\r\n                map.put(item.getId(), old == null ? item.getAmount() : old + item.getAmount());\r\n\r\n            }\r\n        }\r\n        for (int i : map.keySet()) {\r\n            log += i + \",\" + map.get(i) + \"|\";\r\n        }\r\n        if (log.length() > 0 && log.charAt(log.length() - 1) == '|') {\r\n            log = log.substring(0, log.length() - 1);\r\n        }\r\n        return log;\r\n    }\r\n\r\n    /**\r\n     * Checks if the container contains an item.\r\n     *\r\n     * @param item the Item\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean containsItem(Item item) {\r\n        return contains(item.getId(), item.getAmount());\r\n    }\r\n\r\n    /**\r\n     * Checks if the containers contains these items.\r\n     *\r\n     * @param items the items.\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean containsItems(Item... items) {\r\n        for (Item i : items) {\r\n            if (!containsItem(i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Checks if the container contains an item.\r\n     *\r\n     * @param itemId The item id.\r\n     * @param amount The amount.\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean contains(int itemId, int amount) {\r\n        int count = 0;\r\n        for (Item item : items) {\r\n            if (item != null && item.getId() == itemId) {\r\n                if ((count += item.getAmount()) >= amount) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the containers contains ONE item.\r\n     *\r\n     * @param itemId\r\n     * @return\r\n     */\r\n    public boolean containsOneItem(int itemId) {\r\n        for (Item item : items) {\r\n            if (item != null && item.getId() == itemId && item.getAmount() == 1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the container contains all items.\r\n     *\r\n     * @param the itemIds to check\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean containsAll(int... itemIds) {\r\n        for (int i : itemIds) {\r\n            if (!containsOneItem(i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Adds a container to this container.\r\n     *\r\n     * @param container The container.\r\n     */\r\n    public void addAll(Container container) {\r\n        add(container.items);\r\n    }\r\n\r\n    /**\r\n     * Checks the maximum amount of this item we can add.\r\n     *\r\n     * @param item The item.\r\n     * @return The maximum amount we can add.\r\n     */\r\n    public int getMaximumAdd(Item item) {\r\n        if (type != ContainerType.NEVER_STACK) {\r\n            if (item.getDefinition().isStackable() || type == ContainerType.ALWAYS_STACK || type == ContainerType.SHOP) {\r\n                if (contains(item.getId(), 1)) {\r\n                    return Integer.MAX_VALUE - getAmount(item);\r\n                }\r\n                return freeSlots() > 0 ? Integer.MAX_VALUE : 0;\r\n            }\r\n        }\r\n        return freeSlots();\r\n    }\r\n\r\n    /**\r\n     * Checks if the container has space for the item.\r\n     *\r\n     * @param item The item to check.\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean hasSpaceFor(Item item) {\r\n        return item.getAmount() <= getMaximumAdd(item);\r\n    }\r\n\r\n    /**\r\n     * Checks if this container has space to add the other container.\r\n     *\r\n     * @param c The other container.\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean hasSpaceFor(Container c) {\r\n        if (c == null) {\r\n            return false;\r\n        }\r\n        Container check = new Container(capacity, type);\r\n        check.addAll(this);\r\n        for (Item item : c.items) {\r\n            if (item != null) {\r\n                if (!check.add(item, false)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Gets the item slot.\r\n     *\r\n     * @param item The item.\r\n     * @return The slot of the item in this container.\r\n     */\r\n    public int getSlot(Item item) {\r\n        if (item == null) {\r\n            return -1;\r\n        }\r\n        int id = item.getId();\r\n        for (int i = 0; i < items.length; i++) {\r\n            Item it = items[i];\r\n            if (it != null && it.getId() == id) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Gets the item instance.\r\n     *\r\n     * @param item the item.\r\n     * @return the item.\r\n     */\r\n    public Item getItem(Item item) {\r\n        return get(getSlot(item));\r\n    }\r\n\r\n    /**\r\n     * Gets the next free slot.\r\n     *\r\n     * @return The slot, or <code>-1</code> if there are no available slots.\r\n     */\r\n    public int freeSlot() {\r\n        for (int i = 0; i < items.length; i++) {\r\n            if (items[i] == null) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Gets the slot of where to add the item.\r\n     *\r\n     * @param item The item to add.\r\n     * @return The slot where the item will go.\r\n     */\r\n    public int getAddSlot(Item item) {\r\n        if (type != ContainerType.NEVER_STACK && (item.getDefinition().isStackable() || type.equals(ContainerType.ALWAYS_STACK) || type == ContainerType.SHOP)) {\r\n            boolean hashBased = sortType == SortType.HASH;\r\n            for (int i = 0; i < items.length; i++) {\r\n                if (items[i] != null) {\r\n                    if ((hashBased && items[i].getIdHash() == item.getIdHash()) || (!hashBased && items[i].getId() == item.getId())) {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return freeSlot();\r\n    }\r\n\r\n    /**\r\n     * Gets the number of free slots.\r\n     *\r\n     * @return The number of free slots.\r\n     */\r\n    public int freeSlots() {\r\n        return capacity - itemCount();\r\n    }\r\n\r\n    /**\r\n     * Gets the size of this container.\r\n     *\r\n     * @return The size of this container.\r\n     */\r\n    public int itemCount() {\r\n        int size = 0;\r\n        for (int i = 0; i < items.length; i++) {\r\n            if (items[i] != null) {\r\n                size++;\r\n            }\r\n        }\r\n        return size;\r\n    }\r\n\r\n    /**\r\n     * Checks if the player has all the item ids in the inventory.\r\n     *\r\n     * @param itemIds The item ids.\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean containItems(int... itemIds) {\r\n        for (int i = 0; i < itemIds.length; i++) {\r\n            if (!contains(itemIds[i], 1)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Gets the amount of an item.\r\n     *\r\n     * @param item The item.\r\n     * @return The amount of this item in this container.\r\n     */\r\n    public int getAmount(Item item) {\r\n        if (item == null) {\r\n            return 0;\r\n        }\r\n        int count = 0;\r\n        for (Item i : items) {\r\n            if (i != null && i.getId() == item.getId()) {\r\n                count += i.getAmount();\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Gets the amount.\r\n     *\r\n     * @param id the id.\r\n     * @return the amount.\r\n     */\r\n    public int getAmount(int id) {\r\n        return getAmount(new Item(id));\r\n    }\r\n\r\n    /**\r\n     * Shifts the elements in the <b>Container</b> to the appropriate position.\r\n     */\r\n    public void shift() {\r\n        final Item itemss[] = items;\r\n        clear(false);\r\n        for (Item item : itemss) {\r\n            if (item == null) {\r\n                continue;\r\n            }\r\n            add(item, false);\r\n        }\r\n        refresh();\r\n    }\r\n\r\n    /**\r\n     * Checks if the container is empty.\r\n     *\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean isEmpty() {\r\n        for (Item item : items) {\r\n            if (item != null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Checks if the container is full.\r\n     *\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean isFull() {\r\n        return freeSlots() < 1;\r\n    }\r\n\r\n    /**\r\n     * Clears and updates the container.\r\n     */\r\n    public void clear() {\r\n        clear(true);\r\n    }\r\n\r\n    /**\r\n     * Clears the container.\r\n     *\r\n     * @param update If the container should be updated.\r\n     */\r\n    public void clear(boolean update) {\r\n        items = new Item[capacity];\r\n        event.flagEmpty();\r\n        if (update) {\r\n            refresh();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the wealth.\r\n     *\r\n     * @return the wealth.\r\n     */\r\n    public int getWealth() {\r\n        int wealth = 0;\r\n        for (Item i : items) {\r\n            if (i == null) {\r\n                continue;\r\n            }\r\n            wealth += i.getDefinition().getValue() * i.getAmount();\r\n        }\r\n        return wealth;\r\n    }\r\n\r\n    /**\r\n     * Returns an array representing this container.\r\n     *\r\n     * @return The array.\r\n     */\r\n    public Item[] toArray() {\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Gets the listeners.\r\n     *\r\n     * @return The listeners.\r\n     */\r\n    public List<ContainerListener> getListeners() {\r\n        return listeners;\r\n    }\r\n\r\n    /**\r\n     * Gets the capacity.\r\n     *\r\n     * @return The capacity of this container.\r\n     */\r\n    public int capacity() {\r\n        return capacity;\r\n    }\r\n\r\n    /**\r\n     * Gets the event.\r\n     *\r\n     * @return the event.\r\n     */\r\n    public ContainerEvent getEvent() {\r\n        return event;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/container/Container.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/container/Container.java	(date 1597089529744)
@@ -4,9 +4,12 @@
 import core.game.node.entity.player.Player;
 import core.game.node.item.GroundItemManager;
 import core.game.node.item.Item;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 import java.util.*;
+import java.util.concurrent.atomic.AtomicInteger;
 
 /**
  * Represents a container which contains items.
@@ -529,6 +532,23 @@
         return total;
     }
 
+    public void parse(JSONArray itemArray){
+        AtomicInteger total = new AtomicInteger(0);
+        itemArray.forEach(item -> {
+            JSONObject i = (JSONObject) item;
+            int slot = Integer.parseInt(i.get("slot").toString());
+            int id = Integer.parseInt(i.get("id").toString());
+            int amount = Integer.parseInt(i.get("amount").toString());
+            int charge = Integer.parseInt(i.get("charge").toString());
+            if (id >= ItemDefinition.getDefinitions().size() || id < 0 || slot >= items.length) {
+            } else {
+                Item it = items[slot] = new Item(id,amount,charge);
+                it.setIndex(slot);
+                total.set(total.get() + (int)it.getValue());
+            }
+        });
+    }
+
     /**
      * Saves the item data on the byte buffer.
      *
Index: Server/src/main/java/Server/plugin/skill/slayer/SlayerManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.skill.slayer;\r\n\r\nimport core.cache.def.impl.NPCDefinition;\r\nimport core.game.system.config.NPCConfigParser;\r\nimport plugin.skill.Skills;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.entity.player.link.diary.DiaryType;\r\nimport core.tools.RandomFunction;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\n/**\r\n * Manages the players slayer task.\r\n * @author Vexia\r\n * \r\n */\r\npublic final class SlayerManager implements SavingModule {\r\n\r\n\t/**\r\n\t * The player instance.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The current slayer master used.\r\n\t */\r\n\tprivate Master master;\r\n\r\n\t/**\r\n\t * The current task.\r\n\t */\r\n\tprivate Tasks task;\r\n\r\n\t/**\r\n\t * The amount of the hunted killed.\r\n\t */\r\n\tprivate int amount;\r\n\r\n\t/**\r\n\t * The slayer points.\r\n\t */\r\n\tprivate int slayerPoints;\r\n\r\n\t/**\r\n\t * The task streak.\r\n\t */\r\n\tprivate int taskCount;\r\n\r\n\t/**\r\n\t * Total tasks completed\r\n\t */\r\n\tprivate int taskTotal;\r\n\r\n\t/**\r\n\t * The learned rewards.\r\n\t */\r\n\tprivate final boolean[] learned = new boolean[3];\r\n\r\n\t/**\r\n\t * The removed tasks.\r\n\t */\r\n\tprivate final List<Tasks> removed = new ArrayList<>(4);\r\n\r\n\t/**\r\n\t * Constructs a new {@Code SlayerManager} {@Code Object}\r\n\t * @param player The player.\r\n\t */\r\n\tpublic SlayerManager(Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t/**\r\n\t * If the player can earn points (taskTotal > 4)\r\n\t */\r\n\tprivate boolean canEarnPoints = false;\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get() & 0xFF) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tmaster = Master.forId(buffer.getInt());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tint taskId = buffer.getInt();\r\n\t\t\t\tif (taskId > Tasks.values().length -1) {\r\n\t\t\t\t\tSystem.err.println(\"Invalid task i for \" + player.getUsername() + \" taskId = \" + taskId);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ttask = Tasks.values()[taskId];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tamount = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tslayerPoints = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\ttaskCount = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tint size = buffer.get();\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\tlearned[i] = buffer.get() == 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tsize = buffer.get();\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\tremoved.add(Tasks.values()[buffer.getInt()]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\ttaskTotal = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tint pointsEarnable = buffer.getInt();\r\n\t\t\t\tif(pointsEarnable == 1){\r\n\t\t\t\t\tcanEarnPoints = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tSystem.err.println(\"Error parsing Slayer Manager opcode = \" + opcode);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tif (master != null) {\r\n\t\t\tbuffer.put((byte) 1);\r\n\t\t\tbuffer.putInt(master.getNpc());\r\n\t\t}\r\n\t\tif (task != null) {\r\n\t\t\tbuffer.put((byte) 2);\r\n\t\t\tbuffer.putInt(task.ordinal());\r\n\t\t}\r\n\t\tif (task != null) {\r\n\t\t\tbuffer.put((byte) 3);\r\n\t\t\tbuffer.putInt(getAmount());\r\n\t\t}\r\n\t\tif (slayerPoints != 0) {\r\n\t\t\tbuffer.put((byte) 4).putInt(slayerPoints);\r\n\t\t}\r\n\t\tif (taskCount != 0) {\r\n\t\t\tbuffer.put((byte) 5).putInt(taskCount);\r\n\t\t}\r\n\t\tfor (int i = 0; i < learned.length; i++) {\r\n\t\t\tif (learned[i] != false) {\r\n\t\t\t\tbuffer.put((byte) 6).put((byte) learned.length);\r\n\t\t\t\tfor (int k = 0; k < learned.length; k++) {\r\n\t\t\t\t\tbuffer.put((byte) (learned[k] ? 1 : 0));\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!removed.isEmpty()) {\r\n\t\t\tbuffer.put((byte) 7).put((byte) removed.size());\r\n\t\t\tfor (Tasks task : removed)  {\r\n\t\t\t\tbuffer.putInt(task.ordinal());\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (taskTotal != 0){\r\n\t\t\tbuffer.put((byte) 8);\r\n\t\t\tbuffer.putInt(taskTotal);\r\n\t\t}\r\n\t\tif(canEarnPoints){\r\n\t\t\tbuffer.put((byte) 9);\r\n\t\t\tbuffer.putInt(1);\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a hunted creature dies.\r\n\t * @param player The player.\r\n\t * @param npc The NPC. You're currently\r\n\t */\r\n\tpublic void finalizeDeath(Player player, NPC npc) {\r\n\t\tplayer.getSkills().addExperience(Skills.SLAYER, npc.getDefinition().getConfiguration(NPCConfigParser.SLAYER_EXP, (double)npc.getSkills().getStaticLevel(Skills.HITPOINTS)), true);\r\n\t\tdecrementAmount(1);\r\n\t\tif (!hasTask()) {\r\n\t\t\tclear();\r\n\t\t\ttaskCount++;\r\n\t\t\ttaskTotal++;\r\n\t\t\tif ((taskCount > 4 || canEarnPoints ) && master != Master.TURAEL && slayerPoints < 64000) {\r\n\t\t\t\tint points = master.getTaskPoints()[0];\r\n\t\t\t\tif (taskCount % 10 == 0) {\r\n\t\t\t\t\tpoints = master.getTaskPoints()[1];\r\n\t\t\t\t} else if (taskCount % 50 == 0) {\r\n\t\t\t\t\tpoints = master.getTaskPoints()[2];\r\n\t\t\t\t}\r\n\t\t\t\tslayerPoints += points;\r\n\t\t\t\tif (slayerPoints > 64000) {\r\n\t\t\t\t\tslayerPoints = 64000;\r\n\t\t\t\t}\r\n\t\t\t\tplayer.sendMessages(\"You've completed \" + taskCount + \" tasks in a row and received \" + points + \" points, with a total of \" + player.getSlayer().getSlayerPoints(),\"You have completed \" + taskTotal + \" tasks in total. Return to a Slayer master.\");\r\n\t\t\t} else if(taskCount == 4){\r\n\t\t\t\tplayer.sendMessage(\"You've completed your task; you will start gaining points on your next task!\");\r\n\t\t\t\tcanEarnPoints = true;\r\n\t\t\t} else {\r\n\t\t\t\tplayer.sendMessages(\"You've completed your task; Complete \" + (4 - taskCount) + \" more task(s) to start gaining points.\", \"Return to a Slayer master.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//player.sendMessage(\"You're assigned to kill \" + NPCDefinition.forId((player.getSlayer().getTask().getNpcs()[0])).getName().toLowerCase() + \"s; Only \" + getAmount() + \" more to go.\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Assigns a task to the manager.\r\n\t * @param task the task.\r\n\t * @param master the master.\r\n\t */\r\n\tpublic void assign(Tasks task, final Master master) {\r\n\t\tif (master == Master.DURADEL) {\r\n\t\t\tif (!player.getAchievementDiaryManager().getDiary(DiaryType.KARAMJA).isComplete(2, 3)) {\r\n\t\t\t\tplayer.getAchievementDiaryManager().getDiary(DiaryType.KARAMJA).updateTask(player, 2, 3, true);\r\n\t\t\t}\r\n\t\t} else if (master == Master.VANNAKA) {\r\n\t\t\tif (!player.getAchievementDiaryManager().getDiary(DiaryType.VARROCK).isComplete(1, 5)) {\r\n\t\t\t\tplayer.getAchievementDiaryManager().getDiary(DiaryType.VARROCK).updateTask(player, 1, 5, true);\r\n\t\t\t}\r\n\t\t} else if (master == Master.CHAELDAR) {\r\n\t\t\tif (!player.getAchievementDiaryManager().getDiary(DiaryType.LUMBRIDGE).isComplete(1, 7)) {\r\n\t\t\t\tplayer.getAchievementDiaryManager().getDiary(DiaryType.LUMBRIDGE).updateTask(player, 1, 7, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetMaster(master);\r\n\t\tsetTask(task);\r\n\t\tsetAmount(getRandomAmount(master.assignment_range));\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to assign a new task for a player.\r\n\t * @param master the master to give the task.\r\n\t */\r\n\tpublic void generate(Master master) {\r\n\t\tfinal List<Master.Task> tasks = new ArrayList<>();\r\n\t\tfinal int[] taskWeightSum = {0};\r\n\t\tmaster.tasks.stream().filter(task -> canBeAssigned(task.task) && task.task.combatCheck <= player.getProperties().getCurrentCombatLevel()).forEach(task -> {\r\n\t\t\t\t\ttaskWeightSum[0] += task.weight;\r\n\t\t\t\t\ttasks.add(task);\r\n\t\t});\r\n\t\tCollections.shuffle(tasks, RandomFunction.RANDOM);\r\n\t\tint rnd = RandomFunction.random(taskWeightSum[0]);\r\n\t\tfor(Master.Task task : tasks){\r\n\t\t\tif(rnd < task.weight)\r\n\t\t\t\tassign(task.task,master);\r\n\t\t\trnd -= task.weight;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic boolean canBeAssigned(Tasks task){\r\n\t\treturn player.getSkills().getLevel(Skills.SLAYER) >= task.levelReq && !removed.contains(task);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the task.\r\n\t */\r\n\tpublic void clear() {\r\n\t\tsetTask(null);\r\n\t\tsetAmount(0);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a random amount.\r\n\t * @param ranges the ranges.\r\n\t * @return the amt.\r\n\t */\r\n\tprivate int getRandomAmount(int[] ranges) {\r\n\t\treturn RandomFunction.random(ranges[0], ranges[1]);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the task name.\r\n\t * @return the name.\r\n\t */\r\n\tpublic String getTaskName() {\r\n\t\tif (task == null) {\r\n\t\t\treturn \"null\";\r\n\t\t}\r\n\t\tif (task.getNpcs() == null) {\r\n\t\t\treturn \"no npcs report me\";\r\n\t\t}\r\n\t\tif (task.getNpcs().length < 1) {\r\n\t\t\treturn \"npc length to small report me\";\r\n\t\t}\r\n\t\treturn NPCDefinition.forId(task.getNpcs()[0]).getName().toLowerCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the task.\r\n\t * @return The task.\r\n\t */\r\n\tpublic Tasks getTask() {\r\n\t\treturn task;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the task.\r\n\t * @param task The task to set.\r\n\t */\r\n\tpublic void setTask(Tasks task) {\r\n\t\tthis.task = task;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the player.\r\n\t * @return The player.\r\n\t */\r\n\tpublic Player getPlayer() {\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the master.\r\n\t * @return The master.\r\n\t */\r\n\tpublic Master getMaster() {\r\n\t\treturn master;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the master.\r\n\t * @param master The master to set.\r\n\t */\r\n\tpublic void setMaster(Master master) {\r\n\t\tthis.master = master;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a <b>Player</b> contains a task.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasTask() {\r\n\t\tif (task == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (getAmount() == 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to check if the task is completed.\r\n\t * @return <code>True</code> if so.\r\n\t */\r\n\tpublic boolean isCompleted() {\r\n\t\treturn amount <= 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the amount.\r\n\t * @return The amount.\r\n\t */\r\n\tpublic int getAmount() {\r\n\t\treturn amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the amount.\r\n\t * @param amount The amount to set.\r\n\t */\r\n\tpublic void setAmount(int amount) {\r\n\t\tthis.amount = amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to decrement an amount.\r\n\t * @param amount the amount.\r\n\t */\r\n\tpublic void decrementAmount(int amount) {\r\n\t\tthis.amount -= amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to check if the player has started slayer.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasStarted() {\r\n\t\treturn master != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the slayerPoints.\r\n\t * @return the slayerPoints.\r\n\t */\r\n\tpublic int getSlayerPoints() {\r\n\t\treturn slayerPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the slayerPoints.\r\n\t * @param slayerPoints the slayerPoints to set\r\n\t */\r\n\tpublic void setSlayerPoints(int slayerPoints) {\r\n\t\tthis.slayerPoints = slayerPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the taskCount.\r\n\t * @return the taskCount.\r\n\t */\r\n\tpublic int getTaskCount() {\r\n\t\treturn taskCount;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the taskCount.\r\n\t * @param taskCount the taskCount to set\r\n\t */\r\n\tpublic void setTaskCount(int taskCount) {\r\n\t\tthis.taskCount = taskCount;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the learned.\r\n\t * @return the learned.\r\n\t */\r\n\tpublic boolean[] getLearned() {\r\n\t\treturn learned;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the removed.\r\n\t * @return the removed.\r\n\t */\r\n\tpublic List<Tasks> getRemoved() {\r\n\t\treturn removed;\r\n\t}\r\n\r\n\tpublic int getTotalTasks() {return taskTotal;}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/skill/slayer/SlayerManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/skill/slayer/SlayerManager.java	(date 1597089529926)
@@ -2,6 +2,8 @@
 
 import core.cache.def.impl.NPCDefinition;
 import core.game.system.config.NPCConfigParser;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 import plugin.skill.Skills;
 import core.game.node.entity.npc.NPC;
 import core.game.node.entity.player.Player;
@@ -79,6 +81,31 @@
 	 */
 	private boolean canEarnPoints = false;
 
+	public void parse(JSONObject slayerData){
+		Object m = slayerData.get("master");
+		if(m != null) {
+			int master = Integer.parseInt( m.toString());
+			int taskId = Integer.parseInt(slayerData.get("taskId").toString());
+				this.master = Master.forId(master);
+				task = Tasks.values()[taskId];
+				amount = Integer.parseInt(slayerData.get("taskAmount").toString());
+		}
+		slayerPoints = Integer.parseInt( slayerData.get("points").toString());
+		taskCount = Integer.parseInt( slayerData.get("taskStreak").toString());
+		JSONArray learnedArray = (JSONArray) slayerData.get("learned_rewards");
+		for(int i = 0; i < learnedArray.size(); i++){
+			learned[i] = (boolean) learnedArray.get(i);
+ 		}
+		JSONArray removedTasks = (JSONArray) slayerData.get("removedTasks");
+		if(removedTasks != null){
+			for(int i = 0; i < removedTasks.size(); i++){
+				removed.add(Tasks.values()[Integer.parseInt(removedTasks.get(i).toString())]);
+			}
+		}
+		taskTotal = Integer.parseInt( slayerData.get("totalTasks").toString());
+		canEarnPoints = (boolean) slayerData.get("canEarnPoints");
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
@@ -439,4 +466,8 @@
 
 	public int getTotalTasks() {return taskTotal;}
 
+	public boolean isCanEarnPoints(){
+		return canEarnPoints;
+	}
+
 }
Index: Client/libs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Client/libs	(date 1597089529720)
+++ Client/libs	(date 1597089529720)
@@ -0,0 +1,1 @@
+../libs
\ No newline at end of file
Index: Management-Server/libs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Management-Server/libs	(date 1597089529726)
+++ Management-Server/libs	(date 1597089529726)
@@ -0,0 +1,1 @@
+../libs
\ No newline at end of file
Index: Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerSaveParser.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerSaveParser.kt	(date 1597089529751)
+++ Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerSaveParser.kt	(date 1597089529751)
@@ -0,0 +1,303 @@
+package core.game.node.entity.player.info.login
+
+import core.game.node.entity.combat.CombatSpell
+import core.game.node.entity.player.Player
+import core.game.node.entity.player.link.IronmanMode
+import core.game.node.entity.player.link.SpellBookManager
+import core.game.node.entity.player.link.emote.Emotes
+import core.game.node.entity.player.link.grave.GraveType
+import core.game.node.entity.player.link.music.MusicEntry
+import core.game.node.entity.state.EntityState
+import core.game.system.SystemLogger
+import core.game.world.map.Location
+import org.json.simple.JSONArray
+import org.json.simple.JSONObject
+import org.json.simple.parser.JSONParser
+import plugin.ame.AntiMacroHandler
+import plugin.interaction.item.brawling_gloves.BrawlingGloves
+import java.io.FileReader
+
+/**
+ * Class used for parsing JSON player saves.
+ * @author Ceikry
+ * @param player: The player we are parsing.
+ */
+class PlayerSaveParser(val player: Player) {
+    var parser = JSONParser()
+    var reader: FileReader? = FileReader("data/players/${player.name.toLowerCase()}.json")
+    var saveFile: JSONObject? = null
+    var read = true
+
+    init {
+        reader ?: SystemLogger.log("Couldn't find save file for ${player.name}, or save is corrupted.").also { read = false }
+        if(read){
+            saveFile = parser.parse(reader) as JSONObject
+        }
+    }
+
+    fun parse() {
+        if(read) {
+            parseCore()
+            parseSkills()
+            parseSettings()
+            parseSlayer()
+            parseQuests()
+            parseAppearance()
+            parseGrave()
+            parseSpellbook()
+            parseGrandExchange()
+            parseSavedData()
+            //TODO: PARSE PREVIOUS COMMUNICATION INFO (FOR SOME FUCKING REASON XD)
+            parseAutocastSpell()
+            parseFarming()
+            parseConfigs()
+            parseMonitor()
+            parseMusic()
+            parseFamiliars()
+            parseBarCrawl()
+            parseStates()
+            parseAntiMacro()
+            parseTT()
+            parseBankPin()
+            parseHouse()
+            parseAchievements()
+            parseIronman()
+            parseEmoteManager()
+            parseStatistics()
+            parseBrawlingGloves()
+        }
+    }
+
+    fun parseBrawlingGloves() {
+        if(saveFile!!.containsKey("brawlingGloves")){
+            val bgData: JSONArray = saveFile!!["brawlingGloves"] as JSONArray
+            for(bg in bgData){
+                val glove = bg as JSONObject
+                player.brawlingGlovesManager.registerGlove(BrawlingGloves.forIndicator(glove.get("gloveId") as Byte).id, glove.get("charges") as Int)
+            }
+        }
+    }
+
+    fun parseStatistics(){
+        if(saveFile!!.containsKey("statistics")){
+            val stats: JSONArray = saveFile!!["statistics"] as JSONArray
+            for(stat in stats){
+                val s = stat as JSONObject
+                val index = (s.get("index") as String).toInt()
+                val value = (s.get("value") as String).toInt()
+                player.statisticsManager.statistics.get(index).statisticalAmount = value
+            }
+        }
+    }
+
+    fun parseEmoteManager(){
+        if(saveFile!!.containsKey("emoteData")){
+            val emoteData: JSONArray = saveFile!!["emoteData"] as JSONArray
+            for(emote in emoteData){
+                val e = Emotes.values()[(emote as String).toInt()]
+                if(!player.emoteManager.emotes.contains(e)){
+                    player.emoteManager.emotes.add(e)
+                }
+            }
+        }
+    }
+
+    fun parseIronman() {
+        if(saveFile!!.containsKey("ironManMode")){
+            val ironmanMode = (saveFile!!["ironManMode"] as String).toInt()
+            player.ironmanManager.mode = IronmanMode.values()[ironmanMode]
+        }
+    }
+
+    fun parseAchievements(){
+        val achvData = saveFile!!["achievementData"] as JSONArray
+        player.achievementDiaryManager.parse(achvData)
+    }
+
+    fun parseHouse(){
+        val houseData = saveFile!!["houseData"] as JSONObject
+        player.houseManager.parse(houseData)
+    }
+
+    fun parseBankPin(){
+        val bpData = saveFile!!["bankPinManager"] as JSONObject
+        player.bankPinManager.parse(bpData)
+    }
+
+    fun parseTT(){
+        val ttData = saveFile!!["treasureTrails"] as JSONObject
+        player.treasureTrailManager.parse(ttData)
+    }
+
+    fun parseAntiMacro(){
+        if(saveFile!!.containsKey("antiMacroEvent")){
+            val event: JSONObject = saveFile!!["antiMacroEvent"] as JSONObject
+            val ame = AntiMacroHandler.EVENTS.get(event.get("eventName") as String)
+            ame?.create(player)
+        }
+    }
+
+    fun parseStates(){
+        if(saveFile!!.containsKey("states")){
+            val states: JSONArray = saveFile!!["states"] as JSONArray
+            for(state in states){
+                val s = state as JSONObject
+                val stateId = (s.get("stateId") as String).toInt()
+                val active = s.get("isActive") as Boolean
+                if(active)
+                    player.stateManager.register(EntityState.values()[stateId],true)
+            }
+        }
+    }
+
+    fun parseBarCrawl(){
+        val barCrawlData = saveFile!!["barCrawl"] as JSONObject
+        player.barcrawlManager.parse(barCrawlData)
+    }
+
+    fun parseFamiliars(){
+        val familiarData = saveFile!!["familiarManager"] as JSONObject
+        player.familiarManager.parse(familiarData)
+    }
+
+    fun parseMusic(){
+        val unlockedSongs = saveFile!!["unlockedMusic"] as JSONArray
+        for(song in unlockedSongs){
+            val s = (song as String).toInt()
+            val entry = MusicEntry.forId(s)
+            player.musicPlayer.unlocked.put(entry.index,entry)
+        }
+    }
+
+    fun parseMonitor(){
+        val monitorData = saveFile!!["playerMonitor"] as JSONObject
+        if(monitorData.containsKey("duplicationFlag")){
+            val duplicationFlag: Int = (monitorData.get("duplicationFlag") as String).toInt()
+            player.monitor.duplicationLog.flag(duplicationFlag)
+        }
+        if(monitorData.containsKey("macroFlag")){
+            val macroFlag: Int = (monitorData.get("macroFlag") as String).toInt()
+            player.monitor.macroFlag = macroFlag
+        }
+        if(monitorData.containsKey("lastIncreaseFlag")){
+            val lastIncreaseFlag: Long = (monitorData.get("lastIncreaseFlag") as String).toLong()
+            player.monitor.duplicationLog.lastIncreaseFlag = lastIncreaseFlag
+        }
+    }
+
+    fun parseConfigs(){
+        val configs = saveFile!!["configs"] as JSONArray
+        for(config in configs){
+            val c = config as JSONObject
+            val index = (c.get("index") as String).toInt()
+            val value = (c.get("value") as String).toInt()
+            player.configManager.savedConfigurations[index] = value
+        }
+    }
+
+    fun parseFarming(){
+        val farmingData = saveFile!!["farming"] as JSONObject
+        if(farmingData.containsKey("equipment")){
+            val equipmentData: JSONArray? = farmingData.get("equipment") as JSONArray
+            player.farmingManager.equipment.container.parse(equipmentData)
+        }
+        if(farmingData.containsKey("bins")){
+            val compostData: JSONArray? = farmingData.get("bins") as JSONArray
+            player.farmingManager.compostManager.parse(compostData)
+        }
+        if(farmingData.containsKey("wrappers")){
+            val wrapperData: JSONArray? = farmingData.get("wrappers") as JSONArray
+            player.farmingManager.parseWrappers(wrapperData)
+        }
+    }
+
+    fun parseAutocastSpell(){
+        val autocastRaw = saveFile!!["autocastSpell"]
+        autocastRaw ?: return
+        val autocast = autocastRaw as JSONObject
+        val book = (autocast.get("book") as String).toInt()
+        val spellId = (autocast.get("spellId") as String).toInt()
+        player.properties.autocastSpell = SpellBookManager.SpellBook.values()[book].getSpell(spellId) as CombatSpell
+    }
+
+    fun parseSavedData(){
+        val activityData = saveFile!!["activityData"] as JSONObject
+        val questData = saveFile!!["questData"] as JSONObject
+        val globalData = saveFile!!["globalData"] as JSONObject
+        player.savedData.activityData.parse(activityData)
+        player.savedData.questData.parse(questData)
+        player.savedData.globalData.parse(globalData)
+    }
+
+    fun parseGrandExchange(){
+        val geData: Any? = saveFile!!["grand_exchange"]
+        var ge: JSONObject ?= null
+        if(geData != null){ge = geData as JSONObject; player.grandExchange.parse(ge)}
+
+    }
+
+    fun parseSpellbook(){
+        val spellbookData = (saveFile!!["spellbook"] as String).toInt()
+        player.spellBookManager.setSpellBook(SpellBookManager.SpellBook.forInterface(spellbookData))
+    }
+
+    fun parseGrave() {
+        saveFile?: return
+        val graveData = (saveFile!!["grave_type"] as String ).toInt()
+        player.graveManager.type = GraveType.values()[graveData]
+    }
+
+    fun parseAppearance(){
+        saveFile ?: return
+        val appearanceData = saveFile!!["appearance"] as JSONObject
+        player.appearance.parse(appearanceData)
+    }
+
+    fun parseQuests() {
+        saveFile ?: return
+        val questData = saveFile!!["quests"] as JSONObject
+        player.questRepository.parse(questData)
+    }
+
+    fun parseSlayer() {
+        saveFile ?: return
+        val slayerData = saveFile!!["slayer"] as JSONObject
+        player.slayer.parse(slayerData)
+    }
+
+    fun parseCore(){
+        saveFile ?: return
+        val coreData = saveFile!!["core_data"] as JSONObject
+        val inventory = coreData["inventory"] as JSONArray
+        val bank = coreData["bank"] as JSONArray
+        val equipment = coreData["equipment"] as JSONArray
+        val location = coreData["location"] as String
+        val loctokens = location.toString().split(",").map { it -> it.toInt() }
+        val loc = Location(loctokens[0],loctokens[1],loctokens[2])
+        player.inventory.parse(inventory)
+        player.bank.parse(bank)
+        player.equipment.parse(equipment)
+        player.location = loc
+    }
+
+    fun parseSkills() {
+        saveFile ?: return
+        val skillData = saveFile!!["skills"] as JSONArray
+        player.skills.parse(skillData)
+        player.skills.experienceGained = saveFile!!["totalEXP"].toString().toDouble()
+        player.skills.experienceMutiplier = saveFile!!["exp_multiplier"].toString().toDouble()
+        if(saveFile!!.containsKey("milestone")){
+            val milestone: JSONObject = saveFile!!["milestone"] as JSONObject
+            player.skills.combatMilestone = (milestone.get("combatMilestone")).toString().toInt()
+            player.skills.skillMilestone = (milestone.get("skillMilestone")).toString().toInt()
+        }
+    }
+
+    fun parseSettings() {
+        saveFile ?: return
+        val settingsData = saveFile!!["settings"] as JSONObject
+        player.settings.parse(settingsData)
+    }
+
+
+}
\ No newline at end of file
Index: Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerSaver.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerSaver.kt	(date 1597089529753)
+++ Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerSaver.kt	(date 1597089529753)
@@ -0,0 +1,750 @@
+package core.game.node.entity.player.info.login
+
+import core.ServerConstants
+import core.game.container.Container
+import core.game.node.entity.player.Player
+import core.game.node.entity.player.link.IronmanMode
+import org.json.simple.JSONArray
+import org.json.simple.JSONObject
+import plugin.interaction.item.brawling_gloves.BrawlingGloves
+import plugin.skill.Skills
+import plugin.skill.summoning.familiar.BurdenBeast
+import plugin.skill.summoning.pet.Pet
+import java.io.FileWriter
+import java.io.IOException
+import java.lang.Math.ceil
+import javax.script.ScriptEngineManager
+
+
+/**
+ * Class used for saving the player's data in JSON format.
+ * Files are saved in the directory defined in ServerConstants.PLAYER_SAVE_PATH
+ * @param player: the player to save for.
+ * @author Ceikry
+ */
+class PlayerSaver (val player: Player){
+    fun save() {
+        val start = System.currentTimeMillis()
+        val saveFile = JSONObject()
+        saveCoreData(saveFile)
+        saveSkills(saveFile)
+        saveSettings(saveFile)
+        saveSlayer(saveFile)
+        saveQuests(saveFile)
+        saveAppearance(saveFile)
+        saveSpellbook(saveFile)
+        saveGraveType(saveFile)
+        saveGrandExchangeData(saveFile)
+        saveSavedData(saveFile)
+        saveAutocast(saveFile)
+        saveFarming(saveFile)
+        saveConfigs(saveFile)
+        savePlayerMonitor(saveFile)
+        saveMusicPlayer(saveFile)
+        saveFamiliarManager(saveFile)
+        saveBarCrawl(saveFile)
+        saveStateManager(saveFile)
+        saveAntiMacroHandler(saveFile)
+        saveTreasureTrails(saveFile)
+        saveBankPinData(saveFile)
+        saveHouseData(saveFile)
+        saveAchievementData(saveFile)
+        saveIronManData(saveFile)
+        saveEmoteData(saveFile)
+        saveStatManager(saveFile)
+        saveBrawlingGloves(saveFile)
+
+        val manager = ScriptEngineManager()
+        val scriptEngine = manager.getEngineByName("JavaScript")
+        scriptEngine.put("jsonString", saveFile.toJSONString())
+        scriptEngine.eval("result = JSON.stringify(JSON.parse(jsonString), null, 2)")
+        val prettyPrintedJson = scriptEngine["result"] as String
+
+        try {
+            FileWriter("${ServerConstants.PLAYER_SAVE_PATH}${player.name}.json").use { file ->
+                file.write(prettyPrintedJson)
+                file.flush()
+            }
+        } catch (e: IOException) {
+            e.printStackTrace()
+        }
+
+        player.gameAttributes.dump(player.name + ".xml")
+    }
+
+    fun saveBrawlingGloves(root: JSONObject){
+        if(player.brawlingGlovesManager.GloveCharges.isNotEmpty()){
+            val brawlingGloves = JSONArray()
+            player.brawlingGlovesManager.GloveCharges.map {
+                val brawlingGlove = JSONObject()
+                brawlingGlove.put("gloveId",BrawlingGloves.forId(it.key).indicator.toString())
+                brawlingGlove.put("charges",it.value.toString())
+                brawlingGloves.add(brawlingGlove)
+            }
+            root.put("brawlingGloves",brawlingGloves)
+        }
+    }
+
+    fun saveStatManager(root: JSONObject){
+        val statistics = JSONArray()
+        var index = 0
+        player.statisticsManager.statistics.map {
+           val statistic = JSONObject()
+            statistic.put("index",index.toString())
+            statistic.put("value",it.statisticalAmount.toString())
+            statistics.add(statistic)
+        }
+        root.put("statistics",statistics)
+    }
+
+    fun saveEmoteData(root: JSONObject){
+        if(player.emoteManager.isSaveRequired) {
+            val emoteData = JSONArray()
+            player.emoteManager.emotes.map {
+                emoteData.add(it.ordinal.toString())
+            }
+            root.put("emoteData",emoteData)
+        }
+    }
+
+    fun saveIronManData(root: JSONObject){
+        if(player.ironmanManager.mode != IronmanMode.NONE){
+            root.put("ironManMode",player.ironmanManager.mode.ordinal.toString())
+        }
+    }
+
+    fun saveAchievementData(root: JSONObject){
+        val achievementData = JSONArray()
+        player.achievementDiaryManager.diarys.map {
+            val diary = JSONObject()
+            val startedLevels = JSONArray()
+            it.started.map {
+                startedLevels.add(it)
+            }
+            diary.put("startedLevels",startedLevels)
+            val completedLevels = JSONArray()
+            it.completed.map {
+                val level = JSONArray()
+                it.map {
+                    level.add(it)
+                }
+                completedLevels.add(level)
+            }
+            diary.put("completedLevels",completedLevels)
+            val rewardedLevels = JSONArray()
+            it.rewarded.map {
+                rewardedLevels.add(it)
+            }
+            diary.put("rewardedLevels",rewardedLevels)
+            achievementData.add(diary)
+        }
+        root.put("achievementData",achievementData)
+    }
+
+    fun saveHouseData(root: JSONObject){
+        val manager = player.houseManager
+        val houseData = JSONObject()
+        houseData.put("location",manager.location.ordinal.toString())
+        houseData.put("style",manager.style.ordinal.toString())
+        if(manager.hasServant()){
+            val servant = JSONObject()
+            servant.put("type",manager.servant.type.ordinal.toString())
+            servant.put("uses",manager.servant.uses.toString())
+            if(manager.servant.item != null){
+                val item = JSONObject()
+                item.put("id",manager.servant.item.id.toString())
+                item.put("amount",manager.servant.item.amount.toString())
+                servant.put("item",item)
+            }
+            servant.put("greet",manager.servant.isGreet)
+            houseData.put("servant",servant)
+        }
+        val rooms = JSONArray()
+        var z = 0
+         for(room in player.houseManager.rooms){
+            var x = 0
+            for(xr in room){
+                var y = 0
+                for(yr in xr){
+                    if(yr != null) {
+                        val r = JSONObject()
+                        r.put("z", z.toString())
+                        r.put("x", x.toString())
+                        r.put("y", y.toString())
+                        r.put("properties", yr.properties.ordinal.toString())
+                        r.put("rotation", yr.rotation.toInteger().toString())
+                        val hotspots = JSONArray()
+                        var hotspotIndex = 0
+                        yr.hotspots.map {
+                            if (it.decorationIndex > -1) {
+                                val hotspot = JSONObject()
+                                hotspot.put("hotspotIndex", hotspotIndex.toString())
+                                hotspot.put("decorationIndex", it.decorationIndex.toString())
+                                hotspots.add(hotspot)
+                            }
+                            hotspotIndex++
+                        }
+                        r.put("hotspots", hotspots)
+                        rooms.add(r)
+                    }
+                    y++
+                }
+                x++
+            }
+            z++
+        }
+        houseData.put("rooms",rooms)
+        root.put("houseData",houseData)
+    }
+
+    fun saveBankPinData(root: JSONObject){
+        val bankPinManager = JSONObject()
+        if(player.bankPinManager.hasPin()){
+            bankPinManager.put("pin",player.bankPinManager.pin.toString())
+        }
+        bankPinManager.put("longRecovery",player.bankPinManager.isLongRecovery)
+        if(player.bankPinManager.status.ordinal != 0){
+            bankPinManager.put("status",player.bankPinManager.status.ordinal.toString())
+        }
+        if(player.bankPinManager.pendingDelay != -1L && player.bankPinManager.pendingDelay > System.currentTimeMillis()){
+            bankPinManager.put("pendingDelay",player.bankPinManager.pendingDelay.toString())
+        }
+        if(player.bankPinManager.tryDelay > System.currentTimeMillis()){
+            bankPinManager.put("tryDelay",player.bankPinManager.tryDelay.toString())
+        }
+        root.put("bankPinManager",bankPinManager)
+    }
+
+    fun saveTreasureTrails(root: JSONObject){
+        val treasureTrailManager = JSONObject()
+        if(player.treasureTrailManager.hasTrail()){
+            val trail = JSONObject()
+            trail.put("clueId",player.treasureTrailManager.clueId.toString())
+            trail.put("length",player.treasureTrailManager.trailLength.toString())
+            trail.put("stage",player.treasureTrailManager.trailStage.toString())
+            treasureTrailManager.put("trail",trail)
+        }
+        val completedClues = JSONArray()
+        player.treasureTrailManager.completedClues.map {
+            completedClues.add(it.toString())
+        }
+        treasureTrailManager.put("completedClues",completedClues)
+        root.put("treasureTrails",treasureTrailManager)
+    }
+
+    fun saveAntiMacroHandler(root: JSONObject){
+        if(player.antiMacroHandler.isSaveRequired){
+            val antiMacroEvent = JSONObject()
+            if(player.antiMacroHandler.hasEvent()){
+                antiMacroEvent.put("eventName",player.antiMacroHandler.event.name)
+                root.put("antiMacroEvent",antiMacroEvent)
+            }
+        }
+    }
+
+    fun saveStateManager(root: JSONObject){
+        if(player.stateManager.isSaveRequired){
+            val states = JSONArray()
+            player.stateManager.states.map {
+                val state = JSONObject()
+                state.put("stateId",it.key.ordinal.toString())
+                state.put("isActive",it.value.isRunning.toString())
+            }
+            root.put("states",states)
+        }
+    }
+
+    fun saveBarCrawl(root: JSONObject){
+        val barCrawl = JSONObject()
+        barCrawl.put("started",player.barcrawlManager.isStarted)
+        val barsVisited = JSONArray()
+        player.barcrawlManager.bars.map {
+            barsVisited.add(it)
+        }
+        barCrawl.put("bars",barsVisited)
+        root.put("barCrawl",barCrawl)
+    }
+
+    fun saveFamiliarManager(root: JSONObject){
+        val familiarManager = JSONObject()
+        val petDetails = JSONArray()
+        player.familiarManager.petDetails.map {
+            val detail = JSONObject()
+            detail.put("petId",it.key.toString())
+            detail.put("hunger",it.value.hunger.toString())
+            detail.put("growth",it.value.growth.toString())
+            detail.put("stage",it.value.stage.toString())
+            petDetails.add(detail)
+        }
+        familiarManager.put("petDetails",petDetails)
+        if(player.familiarManager.hasPet()){
+            familiarManager.put("currentPet",(player.familiarManager.familiar as Pet).pet.babyItemId.toString())
+        } else if (player.familiarManager.hasFamiliar()){
+            val familiar = JSONObject()
+            familiar.put("originalId",player.familiarManager.familiar.originalId.toString())
+            familiar.put("ticks",player.familiarManager.familiar.ticks.toString())
+            familiar.put("specialPoints",player.familiarManager.familiar.specialPoints.toString())
+            if(player.familiarManager.familiar.isBurdenBeast && !(player.familiarManager.familiar as BurdenBeast).container.isEmpty){
+                val familiarInventory = saveContainer((player.familiarManager.familiar as BurdenBeast).container)
+                familiar.put("inventory",familiarInventory)
+            }
+            familiar.put("lifepoints",player.familiarManager.familiar.skills.lifepoints)
+            familiarManager.put("familiar",familiar)
+        }
+        if(player.familiarManager.insuredPets.size > 0){
+            val insuredPets = JSONArray()
+            player.familiarManager.insuredPets.map {
+                insuredPets.add(it.babyItemId.toString())
+            }
+            familiarManager.put("insuredPets",insuredPets)
+        }
+        root.put("familiarManager",familiarManager)
+    }
+
+    fun saveMusicPlayer(root: JSONObject){
+        val unlockedMusic = JSONArray()
+        player.musicPlayer.unlocked.values.map {
+            unlockedMusic.add(it.id.toString())
+        }
+        root.put("unlockedMusic",unlockedMusic)
+    }
+
+    fun savePlayerMonitor(root: JSONObject){
+        val playerMonitor = JSONObject()
+        if(player.monitor.duplicationLog != null && player.monitor.duplicationLog.flag != 0){
+            playerMonitor.put("duplicationFlag",player.monitor.duplicationLog.flag.toString())
+        }
+        if(player.monitor.macroFlag != 0){
+            playerMonitor.put("macroFlag",player.monitor.macroFlag.toString())
+        }
+        if(player.monitor.duplicationLog != null && player.monitor.duplicationLog.isLoggingFlagged){
+            playerMonitor.put("lastIncreaseFlag",player.monitor.duplicationLog.lastIncreaseFlag.toString())
+        }
+        root.put("playerMonitor",playerMonitor)
+    }
+
+    fun saveConfigs(root: JSONObject){
+        val configs = JSONArray()
+        var idx = 0
+        player.configManager.savedConfigurations.map {
+            if(it != 0){
+                val config = JSONObject()
+                config.put("index",idx.toString())
+                config.put("value",it.toString())
+                configs.add(config)
+            }
+            idx++
+        }
+        root.put("configs",configs)
+    }
+
+    fun saveFarming(root: JSONObject){
+        val farming = JSONObject()
+        if(player.farmingManager.equipment.container.itemCount() != 0) {
+            val equipment = saveContainer(player.farmingManager.equipment.container)
+            farming.put("equipment",equipment)
+        }
+        if(player.farmingManager.compostManager.bins.size != 0){
+            val bins = JSONArray()
+            player.farmingManager.compostManager.bins.map { compostBin ->
+                val bin = JSONObject()
+                bin.put("wrapperId",compostBin.wrapperId.toString())
+                if(compostBin.timeStamp != 0L){
+                    bin.put("timeStamp",compostBin.timeStamp.toString())
+                }
+                if(compostBin.compostLevel > 0) {
+                    bin.put("compostLevel",compostBin.compostLevel.toString())
+                }
+                if(compostBin.container.itemCount() > 0) {
+                    val compostContainer = saveContainer(compostBin.container)
+                    bin.put("compostContainer", compostContainer)
+                }
+                bins.add(bin)
+            }
+            farming.put("bins",bins)
+        }
+
+        if(player.farmingManager.patches.size != 0){
+            val wrappers = JSONArray()
+            player.farmingManager.patches.map {
+                val wrapper = JSONObject()
+                wrapper.put("wrapperId",it.wrapperId.toString())
+                val cycle = JSONObject()
+                cycle.put("compostThreshold",it.cycle.compostThreshold.toString())
+                cycle.put("growthTime",it.cycle.growthTime.toString())
+                cycle.put("harvestAmount",it.cycle.harvestAmount.toString())
+                cycle.put("protection",it.cycle.isProtected)
+                wrapper.put("cycle",cycle)
+                if(it.node != null){
+                    wrapper.put("nodeId",it.patch.getNodePosition(it.node).toString())
+                }
+                wrappers.add(wrapper)
+            }
+            farming.put("wrappers",wrappers)
+        }
+
+        root.put("farming",farming)
+    }
+
+    fun saveAutocast(root: JSONObject){
+        player.properties.autocastSpell ?: return
+        val spell = JSONObject()
+        spell.put("book",player.properties.autocastSpell.book.ordinal.toString())
+        spell.put("spellId",player.properties.autocastSpell.spellId.toString())
+        root.put("autocastSpell",spell)
+    }
+
+    fun saveSavedData(root: JSONObject) {
+        saveActivityData(root)
+        saveQuestData(root)
+        saveGlobalData(root)
+    }
+
+    fun saveGlobalData(root: JSONObject){
+        val globalData = JSONObject()
+        globalData.put("tutorialStage",player.savedData.globalData.tutorialStage.toString())
+        globalData.put("homeTeleportDelay",player.savedData.globalData.homeTeleportDelay.toString())
+        globalData.put("lumbridgeRope",player.savedData.globalData.hasTiedLumbridgeRope())
+        globalData.put("apprentice",player.savedData.globalData.hasSpokenToApprentice())
+        globalData.put("assistTime",player.savedData.globalData.assistTime.toString())
+        val assistExperience = JSONArray()
+        player.savedData.globalData.assistExperience.map {
+            assistExperience.add(it.toString())
+        }
+        globalData.put("assistExperience",assistExperience)
+        val strongholdRewards = JSONArray()
+        player.savedData.globalData.strongHoldRewards.map {
+            strongholdRewards.add(it)
+        }
+        globalData.put("strongHoldRewards",strongholdRewards)
+        globalData.put("chatPing",player.savedData.globalData.chatPing.toString())
+        globalData.put("tutorClaim",player.savedData.globalData.tutorClaim.toString())
+        globalData.put("luthasTask",player.savedData.globalData.isLuthasTask)
+        globalData.put("karamjaBananas",player.savedData.globalData.karamjaBananas.toString())
+        globalData.put("silkSteal",player.savedData.globalData.silkSteal.toString())
+        globalData.put("zafAmount",player.savedData.globalData.zaffAmount.toString())
+        globalData.put("zafTime",player.savedData.globalData.zafTime.toString())
+        globalData.put("fritzGlass",player.savedData.globalData.isFritzGlass)
+        globalData.put("wydinEmployee",player.savedData.globalData.isWydinEmployee)
+        globalData.put("draynorRecording",player.savedData.globalData.isDraynorRecording)
+        globalData.put("geTutorial",player.savedData.globalData.isGeTutorial)
+        globalData.put("essenceTeleporter",player.savedData.globalData.essenceTeleporter.toString())
+        globalData.put("recoilDamage",player.savedData.globalData.recoilDamage.toString())
+        globalData.put("doubleExpDelay",player.savedData.globalData.doubleExpDelay.toString())
+        globalData.put("joinedMonastery",player.savedData.globalData.isJoinedMonastery)
+        val readPlaques = JSONArray()
+        player.savedData.globalData.readPlaques.map {
+            readPlaques.add(it)
+        }
+        globalData.put("readPlaques",readPlaques)
+        globalData.put("forgingUses",player.savedData.globalData.forgingUses.toString())
+        globalData.put("ectoCharges",player.savedData.globalData.ectoCharges.toString())
+        globalData.put("braceletClayUses",player.savedData.globalData.braceletClayUses.toString())
+        globalData.put("dropDelay",player.savedData.globalData.dropDelay.toString())
+        val abyssData = JSONArray()
+        player.savedData.globalData.abyssData.map {
+            abyssData.add(it)
+        }
+        globalData.put("abyssData",abyssData)
+        val rcDecays = JSONArray()
+        player.savedData.globalData.rcDecays.map {
+            rcDecays.add(it.toString())
+        }
+        globalData.put("rcDecays",rcDecays)
+        globalData.put("disableDeathScreen",player.savedData.globalData.isDeathScreenDisabled)
+        globalData.put("playerTestStage",player.savedData.globalData.playerTestStage.toString())
+        globalData.put("charmingDelay",player.savedData.globalData.charmingDelay.toString())
+        val travelLogs = JSONArray()
+        player.savedData.globalData.travelLogs.map {
+            travelLogs.add(it)
+        }
+        globalData.put("travelLogs",travelLogs)
+        val godBooks = JSONArray()
+        player.savedData.globalData.godBooks.map {
+            godBooks.add(it)
+        }
+        globalData.put("godBooks",godBooks)
+        globalData.put("disableNews",player.savedData.globalData.isDisableNews)
+        val godPages = JSONArray()
+        player.savedData.globalData.godPages.map {
+            godPages.add(it)
+        }
+        globalData.put("godPages",godPages)
+        globalData.put("overChargeDelay",player.savedData.globalData.overChargeDelay.toString())
+        val bossCounters = JSONArray()
+        player.savedData.globalData.bossCounters.map {
+            bossCounters.add(it.toString())
+        }
+        globalData.put("bossCounters",bossCounters)
+        globalData.put("barrowsLoots",player.savedData.globalData.barrowsLoots.toString())
+        globalData.put("lootSharePoints",player.savedData.globalData.lootSharePoints.toString())
+        globalData.put("lootShareDelay",player.savedData.globalData.lootShareDelay.toString())
+        globalData.put("doubleExp",player.savedData.globalData.doubleExp.toString())
+        globalData.put("avasDevice",player.savedData.globalData.isAvasDisabled)
+        globalData.put("globalTeleporterDelay",player.savedData.globalData.globalTeleporterDelay.toString())
+        globalData.put("starSpriteDelay",player.savedData.globalData.starSpriteDelay.toString())
+        globalData.put("runReplenishDelay",player.savedData.globalData.runReplenishDelay.toString())
+        globalData.put("runReplenishCharges",player.savedData.globalData.runReplenishCharges.toString())
+        globalData.put("lowAlchemyCharges",player.savedData.globalData.lowAlchemyCharges.toString())
+        globalData.put("lowAlchemyDelay",player.savedData.globalData.lowAlchemyDelay.toString())
+        globalData.put("magicSkillCapeDelay",player.savedData.globalData.magicSkillCapeDelay.toString())
+        globalData.put("hunterCapeDelay",player.savedData.globalData.hunterCapeDelay.toString())
+        globalData.put("hunterCapeCharges",player.savedData.globalData.hunterCapeCharges.toString())
+        globalData.put("taskAmount",player.savedData.globalData.taskAmount.toString())
+        globalData.put("taskPoints",player.savedData.globalData.taskPoints.toString())
+        globalData.put("macroDisabled",player.savedData.globalData.macroDisabled)
+        root.put("globalData",globalData)
+    }
+
+    fun saveQuestData(root: JSONObject){
+        val questData = JSONObject()
+        val draynorLever = JSONArray()
+        player.savedData.questData.draynorLever.map {
+            draynorLever.add(it)
+        }
+        questData.put("draynorLever",draynorLever)
+        val dslayer = JSONArray()
+        player.savedData.questData.dragonSlayer.map {
+            dslayer.add(it)
+        }
+        questData.put("dragonSlayer",dslayer)
+        questData.put("dragonSlayerPlanks",player.savedData.questData.dragonSlayerPlanks.toString())
+        val demonSlayer = JSONArray()
+        player.savedData.questData.demonSlayer.map {
+            demonSlayer.add(it)
+        }
+        questData.put("demonSlayer",demonSlayer)
+        val cooksAssistant = JSONArray()
+        player.savedData.questData.cooksAssistant.map {
+            cooksAssistant.add(it)
+        }
+        questData.put("cooksAssistant",cooksAssistant)
+        questData.put("gardenerAttack",player.savedData.questData.isGardenerAttack)
+        questData.put("talkedDrezel",player.savedData.questData.isTalkedDrezel)
+        val desertTreasureNode = JSONArray()
+        player.savedData.questData.desertTreasure.map {
+            val item = JSONObject()
+            item.put("id",it.id.toString())
+            item.put("amount",it.amount.toString())
+            desertTreasureNode.add(item)
+        }
+        questData.put("desertTreasureNode",desertTreasureNode)
+        questData.put("witchsExperimentStage",player.savedData.questData.witchsExerimentStage.toString())
+        questData.put("witchsExperimentKilled",player.savedData.questData.isWitchsExerimentKilled)
+        root.put("questData",questData)
+    }
+
+    fun saveActivityData(root: JSONObject){
+        val activityData = JSONObject()
+        activityData.put("pestPoints",player.savedData.activityData.pestPoints.toString())
+        activityData.put("warriorGuildTokens",player.savedData.activityData.warriorGuildTokens.toString())
+        activityData.put("bountyHunterRate",player.savedData.activityData.bountyHunterRate.toString())
+        activityData.put("bountyRogueRate",player.savedData.activityData.bountyRogueRate.toString())
+        activityData.put("barrowKills",player.savedData.activityData.barrowKills.toString())
+        val barrowBrothers = JSONArray()
+        player.savedData.activityData.barrowBrothers.map {
+            barrowBrothers.add(it)
+        }
+        activityData.put("barrowBrothers",barrowBrothers)
+        activityData.put("barrowTunnelIndex",player.savedData.activityData.barrowTunnelIndex.toString())
+        activityData.put("kolodionStage",player.savedData.activityData.kolodionStage.toString())
+        val godCasts = JSONArray()
+        player.savedData.activityData.godCasts.map {
+            godCasts.add(it.toString())
+        }
+        activityData.put("godCasts",godCasts)
+        activityData.put("kolodionBoss",player.savedData.activityData.kolodionBoss.toString())
+        activityData.put("elnockSupplies",player.savedData.activityData.isElnockSupplies)
+        activityData.put("lastBorkBattle",player.savedData.activityData.lastBorkBattle.toString())
+        activityData.put("startedMta",player.savedData.activityData.isStartedMta)
+        activityData.put("lostCannon",player.savedData.activityData.isLostCannon)
+        val pizazzPoints = JSONArray()
+        player.savedData.activityData.pizazzPoints.map {
+            pizazzPoints.add(it.toString())
+        }
+        activityData.put("pizazzPoints",pizazzPoints)
+        activityData.put("bonesToPeaches",player.savedData.activityData.isBonesToPeaches)
+        activityData.put("solvedMazes",player.savedData.activityData.solvedMazes.toString())
+        activityData.put("fogRating",player.savedData.activityData.fogRating.toString())
+        activityData.put("borkKills",player.savedData.activityData.borkKills.toString())
+        activityData.put("hardcoreDeath",player.savedData.activityData.hardcoreDeath)
+        activityData.put("topGrabbed",player.savedData.activityData.isTopGrabbed)
+        root.put("activityData",activityData)
+    }
+
+
+    fun saveGrandExchangeData(root: JSONObject){
+        val grandExchange = JSONObject()
+        if(player.grandExchange.hasActiveOffer()){
+            val offers = JSONArray()
+            player.grandExchange.offers.map {
+                if(it != null){
+                    val offer = JSONObject()
+                    offer.put("offerIndex",it.index.toString())
+                    offer.put("offerUID",it.uid.toString())
+                    offers.add(offer)
+                }
+            }
+            val history = JSONArray()
+            player.grandExchange.history.map {
+                if(it != null){
+                    val historyEntry = JSONObject()
+                    historyEntry.put("isSell",it.isSell)
+                    historyEntry.put("itemId",it.itemId.toString())
+                    historyEntry.put("totalCoinExchange",it.totalCoinExchange.toString())
+                    historyEntry.put("completedAmount",it.completedAmount.toString())
+                    history.add(historyEntry)
+                }
+            }
+            grandExchange.put("offers",offers)
+            grandExchange.put("history",history)
+            root.put("grand_exchange",grandExchange)
+        }
+    }
+
+    fun saveGraveType(root: JSONObject){
+        root.put("grave_type",player.graveManager.type.ordinal.toString())
+    }
+
+    fun saveSpellbook(root: JSONObject){
+        root.put("spellbook",player.spellBookManager.spellBook.toString())
+    }
+
+    fun saveAppearance(root: JSONObject){
+        val appearance = JSONObject()
+        appearance.put("gender",player.appearance.gender.toByte().toString())
+        val appearanceCache = JSONArray()
+        player.appearance.appearanceCache.map {
+            val bodyPart = JSONObject()
+            bodyPart.put("look",it.look.toString())
+            bodyPart.put("color",it.color.toString())
+            appearanceCache.add(bodyPart)
+        }
+        appearance.put("appearance_cache", appearanceCache)
+        root.put("appearance",appearance)
+    }
+
+    fun saveQuests(root: JSONObject){
+        val quests = JSONObject()
+        quests.put("points",player.questRepository.points.toString())
+        val questStages = JSONArray()
+        player.questRepository.questList.map {
+            val quest = JSONObject()
+            quest.put("questId",it.key.toString())
+            quest.put("questStage",it.value.toString())
+            questStages.add(quest)
+        }
+        quests.put("questStages",questStages)
+        root.put("quests",quests)
+    }
+
+    fun saveSlayer(root: JSONObject){
+        val slayer = JSONObject()
+        val slayerManager = player.slayer
+        if(slayerManager.hasTask()){
+            slayer.put("master",slayerManager.master.npc.toString())
+            slayer.put("taskId",slayerManager.task.ordinal.toString())
+            slayer.put("taskAmount",slayerManager.amount.toString())
+        }
+        slayer.put("points",slayerManager.slayerPoints.toString())
+        slayer.put("taskStreak",slayerManager.taskCount.toString())
+        val learnedRewards = JSONArray()
+        slayerManager.learned.map {
+            learnedRewards.add(it)
+        }
+        slayer.put("learned_rewards",learnedRewards)
+        if(slayerManager.removed.isNotEmpty()) {
+            val removedTasks = JSONArray()
+            slayerManager.removed.map {
+                removedTasks.add(it.ordinal.toString())
+            }
+            slayer.put("removedTasks",removedTasks)
+        }
+        slayer.put("totalTasks",slayerManager.totalTasks.toString())
+        slayer.put("canEarnPoints",slayerManager.isCanEarnPoints)
+        root.put("slayer",slayer)
+    }
+
+    fun saveSettings(root: JSONObject){
+        val settings = JSONObject()
+        settings.put("brightness",player.settings.brightness.toString())
+        settings.put("musicVolume",player.settings.musicVolume.toString())
+        settings.put("soundEffectVolume",player.settings.soundEffectVolume.toString())
+        settings.put("areaSoundVolume",player.settings.areaSoundVolume.toString())
+        settings.put("publicChatSetting",player.settings.publicChatSetting.toString())
+        settings.put("privateChatSetting",player.settings.privateChatSetting.toString())
+        settings.put("clanChatSetting",player.settings.clanChatSetting.toString())
+        settings.put("tradeSetting",player.settings.tradeSetting.toString())
+        settings.put("assistSetting",player.settings.assistSetting.toString())
+        settings.put("runEnergy",player.settings.runEnergy.toString())
+        settings.put("specialEnergy",player.settings.specialEnergy.toString())
+        settings.put("attackStyle",player.settings.attackStyleIndex.toString())
+        settings.put("singleMouse",player.settings.isSingleMouseButton)
+        settings.put("disableChatEffects",player.settings.isDisableChatEffects)
+        settings.put("splitPrivate",player.settings.isSplitPrivateChat)
+        settings.put("acceptAid",player.settings.isAcceptAid)
+        settings.put("runToggled",player.settings.isRunToggled)
+        settings.put("retaliation",player.properties.isRetaliating)
+        root.put("settings",settings)
+    }
+
+    fun saveSkills(root: JSONObject){
+        val skills = JSONArray()
+        for(i in 0 until 24){
+            val skill = JSONObject()
+            skill.put("id",i.toString())
+            skill.put("static",player.skills.staticLevels[i].toString())
+            if(i == Skills.HITPOINTS){
+                skill.put("dynamic",player.skills.lifepoints.toString())
+            } else if (i == Skills.PRAYER){
+                skill.put("dynamic",ceil(player.skills.prayerPoints).toInt().toString())
+            } else {
+                skill.put("dynamic",player.skills.dynamicLevels[i].toString())
+            }
+            skill.put("experience",player.skills.getExperience(i).toString())
+            skills.add(skill)
+        }
+        root.put("skills",skills)
+        root.put("totalEXP",player.skills.experienceGained.toString())
+        root.put("exp_multiplier",player.skills.experienceMutiplier.toString())
+        if(player.skills.combatMilestone > 0 || player.skills.skillMilestone > 0){
+            val milestone = JSONObject()
+            milestone.put("combatMilestone",player.skills.combatMilestone.toString())
+            milestone.put("skillMilestone",player.skills.skillMilestone.toString())
+            root.put("milestone",milestone)
+        }
+    }
+
+    fun saveContainer(container: Container): JSONArray {
+        val json = JSONArray()
+        container.toArray().map{
+            if (it != null) {
+                val item = JSONObject()
+                item.put("slot", it.slot.toString())
+                item.put("id", it.id.toString())
+                item.put("amount", it.amount.toString())
+                item.put("charge", it.charge.toString())
+                json.add(item)
+            }
+        }
+        return json
+    }
+
+    fun saveCoreData(root: JSONObject){
+        val coreData = JSONObject()
+        val inventory = saveContainer(player.inventory)
+        coreData.put("inventory",inventory)
+
+        val bank = saveContainer(player.bank)
+        coreData.put("bank",bank)
+
+        val equipment = saveContainer(player.equipment)
+        coreData.put("equipment",equipment)
+
+        val loctemp = player.location
+        val locStr = "${loctemp.x},${loctemp.y},${loctemp.z}"
+        coreData.put("location",locStr)
+
+        root.put("core_data",coreData)
+    }
+}
Index: Server/libs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/libs	(date 1597089529741)
+++ Server/libs	(date 1597089529741)
@@ -0,0 +1,1 @@
+../libs
\ No newline at end of file
Index: Server/src/main/java/Server/core/game/node/entity/player/link/diary/AchievementDiary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link.diary;\r\n\r\nimport core.cache.def.impl.NPCDefinition;\r\nimport core.game.component.Component;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Represents an achievement diary.\r\n * @author Vexia\r\n */\r\npublic class AchievementDiary implements SavingModule {\r\n\r\n\t/**\r\n\t * The component id of the diary.\r\n\t */\r\n\tpublic static final int DIARY_COMPONENT = 275;\r\n\r\n\t/**\r\n\t * Represents the red color code string.\r\n\t */\r\n\tprivate static final String RED = \"<col=8A0808>\";\r\n\r\n\t/**\r\n\t * Represents the blue color code string.\r\n\t */\r\n\tprivate static final String BLUE = \"<col=08088A>\";\r\n\r\n\t/**\r\n\t * Represents the yellow color code string.\r\n\t */\r\n\tprivate static final String YELLOW = \"<col=F7FE2E>\";\r\n\r\n\t/**\r\n\t * Represets the green color code string.\r\n\t */\r\n\tprivate static final String GREEN = \"<col=3ADF00>\";\r\n\r\n\t/**\r\n\t * The diary type.\r\n\t */\r\n\tprivate final DiaryType type;\r\n\r\n\t/**\r\n\t * The task types started.\r\n\t */\r\n\tprivate final boolean[] started = new boolean[3];\r\n\r\n\t/**\r\n\t * If the rewards have been given.\r\n\t */\r\n\tprivate final boolean[] rewarded = new boolean[3];\r\n\r\n\t/**\r\n\t * The completed achievements.\r\n\t */\r\n\tprivate final boolean[][] completed;\r\n\r\n\t/**\r\n\t * Constructs a new {@code AchievementDiary} {@code Object}\r\n\t * @param type the diary type.\r\n\t * @param name the name.\r\n\t */\r\n\tpublic AchievementDiary(DiaryType type) {\r\n\t\tthis.type = type;\r\n\t\tthis.completed = new boolean[type.getAchievements().length][50];\r\n\t}\r\n\r\n\t/**\r\n\t * Open the achievement diary.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void open(Player player) {\r\n\t\tclear(player);\r\n\t\tsendString(player, \"<red>Achievement Diary - \" + type.getName(), 2);\r\n\t\tsendString(player, (isComplete() ? GREEN : hasStarted() ? YELLOW : \"<red>\") + type.getName() + \" Area Tasks\", 11);\r\n\t\tboolean complete;\r\n\t\tString line = \"\";\r\n\t\tint child = 13;\r\n\t\tfor (int level = 0; level < type.getAchievements().length; level++) {\r\n\t\t\tsendString(player, getStatus(level) + getLevel(level) + \"\", child);\r\n\t\t\tchild++;\r\n\t\t\tfor (int i = 0; i < type.getAchievements(level).length; i++) {\r\n\t\t\t\tcomplete = isComplete(level, i);\r\n\t\t\t\tline = (complete ? \"<str>\" : \"\") + (complete ? \"<str>\" + type.getAchievements(level)[i] : type.getAchievements(level)[i]);\r\n\t\t\t\tif (line.contains(\"<br><br>\")) {\r\n\t\t\t\t\tString[] lines = line.split(\"<br><br>\");\r\n\t\t\t\t\tfor (String l : lines) {\r\n\t\t\t\t\t\tsendString(player, l, child);\r\n\t\t\t\t\t\tchild++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsendString(player, line, child);\r\n\t\t\t\t\tchild++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tchild++;\r\n\t\t}\r\n\t\t//\tsendString(player, builder.toString(), 11);\r\n\t\t//Changes the size of the scroll bar\r\n\t\t//player.getPacketDispatch().sendRunScript(1207, \"i\", new Object[] { 330 });\r\n\t\t//sendString(player, builder.toString(), 11);\r\n\t\tif (!player.getInterfaceManager().isOpened()) {\r\n\t\t\tplayer.getInterfaceManager().open(new Component(DIARY_COMPONENT));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the diary screen.\r\n\t * @param player the player.\r\n\t */\r\n\tprivate void clear(Player player) {\r\n\t\tfor (int i = 0; i < 311; i++) {\r\n\t\t\tplayer.getPacketDispatch().sendString(\"\", DIARY_COMPONENT, i);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tbuffer.put((byte) 1);\r\n\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\tbuffer.put((byte) (started[i] ? 1 : 0));\r\n\t\t}\r\n\t\tbuffer.put((byte) 2).put((byte) completed.length);\r\n\t\tfor (int i = 0; i < completed.length; i++) {\r\n\t\t\tbuffer.put((byte) type.getAchievements(i).length);\r\n\t\t\tfor (int x = 0; x < type.getAchievements(i).length; x++) {\r\n\t\t\t\tbuffer.put((byte) (completed[i][x] ? 1 : 0));\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuffer.put((byte) 3).put((byte) rewarded.length);\r\n\t\tfor (int i = 0; i < rewarded.length; i++) {\r\n\t\t\tbuffer.put((byte) (rewarded[i] ? 1 : 0));\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode, size;\r\n\t\twhile ((opcode = buffer.get()) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\t\t\tstarted[i] = buffer.get() == 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tsize = buffer.get() & 0xFF;\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\tint size_ = buffer.get() & 0xFF;\r\n\t\t\t\t\tfor (int x = 0; x < size_; x++) {\r\n\t\t\t\t\t\tcompleted[i][x] = buffer.get() == 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tsize = buffer.get() & 0xFF;\r\n\t\t\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\t\t\trewarded[i] = buffer.get() == 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the status of the diary.\r\n\t * @param player the player.\r\n\t */\r\n\tpublic void drawStatus(Player player) {\r\n\t\tif (hasStarted()) {\r\n\t\t\tplayer.getPacketDispatch().sendString((isComplete() ? GREEN : YELLOW) + type.getName(), 259, type.getChild());\r\n\t\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\t\tplayer.getPacketDispatch().sendString((isComplete(i) ? GREEN : hasStarted(i) ? YELLOW : \"<col=FF0000>\") + getLevel(i), 259, type.getChild() + (i + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Induces a task update.\r\n\t * @param player the player.\r\n\t * @param level the level.\r\n\t * @param index the index of the task.\r\n\t * @param complete if it's completed.\r\n\t */\r\n\tpublic void updateTask(Player player, int level, int index, boolean complete) {\r\n\t\tif (!started[level]) {\r\n\t\t\tstarted[level] = true;\r\n\t\t}\r\n\t\tif (!complete) {\r\n\t\t\tplayer.sendMessage(\"<col=0040ff>Well done! A \" + type.getName() + \" task has been updated.\");\r\n\t\t} else {\r\n\t\t\tcompleted[level][index] = true;\r\n\t\t\tplayer.sendMessages(\"<col=dc143c>Well done! You have completed \" + (level == 0 ? \"an easy\" : level == 1 ? \"a medium\" : \"a hard\") + \" task in the \" + type.getName() + \" area. Your\", \"<col=dc143c>Achievement Diary has been updated.\");\r\n\t\t}\r\n\t\tif (isComplete(level)) {\r\n\t\t\tplayer.sendMessages(\"<col=dc143c>You have completed all of the \" + getLevel(level).toLowerCase() + \" tasks in the \" + type.getName() + \" area.\", \"<col=dc143c>Speak to \" + NPCDefinition.forId(type.getNpc(level)).getName() + \" to claim your reward.\");\r\n\t\t}\r\n\t\tdrawStatus(player);\r\n\t}\r\n\r\n\t/**\r\n\t * Sends a string on the diary interface.\r\n\t * @param player the player.\r\n\t * @param string the string.\r\n\t * @param child the child.\r\n\t */\r\n\tprivate void sendString(Player player, String string, int child) {\r\n\t\tplayer.getPacketDispatch().sendString(string.replace(\"<blue>\", BLUE).replace(\"<red>\", RED), DIARY_COMPONENT, child);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the diary for the level as started.\r\n\t * @param level the level.\r\n\t */\r\n\tpublic void setStarted(int level) {\r\n\t\tthis.started[level] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets an achievement as completed.\r\n\t * @param level the level.\r\n\t * @param index the index.\r\n\t */\r\n\tpublic void setCompleted(int level, int index) {\r\n\t\tthis.completed[level][index] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the achievement level is completed.\r\n\t * @param level the level.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isComplete(int level) {\r\n\t\tfor (int i = 0; i < type.getAchievements(level).length; i++) {\r\n\t\t\tif (!completed[level][i]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if an achievement is complete.\r\n\t * @param level the level.\r\n\t * @param index the index.\r\n\t * @return {@code True} if an achievement is completed.\r\n\t */\r\n\tpublic boolean isComplete(int level, int index) {\r\n\t\treturn completed[level][index];\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if an achievement diary is complete.\r\n\t * @return {@code True} if completed.\r\n\t */\r\n\tpublic boolean isComplete() {\r\n\t\tfor (int i = 0; i < completed.length; i++) {\r\n\t\t\tfor (int x = 0; x < type.getAchievements(i).length; x++) {\r\n\t\t\t\tif (!completed[i][x]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the level of completion.\r\n\t * @return the level.\r\n\t */\r\n\tpublic int getLevel() {\r\n\t\treturn isComplete(2) ? 2 : isComplete(1) ? 1 : isComplete(0) ? 0 : -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the level string.\r\n\t * @param level the level.\r\n\t * @return the string format.\r\n\t */\r\n\tpublic String getLevel(int level) {\r\n\t\treturn level == 0 ? \"Easy\" : level == 1 ? \"Medium\" : \"Hard\";\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the status for a level of completion of the achievement.\r\n\t * @param level the level.\r\n\t * @return the string color status.\r\n\t */\r\n\tpublic String getStatus(int level) {\r\n\t\treturn !hasStarted(level) ? RED : isComplete(level) ? GREEN : YELLOW;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a diary is started.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasStarted() {\r\n\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\tif (started[i]) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the achievement level has been started.\r\n\t * @param level the level.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasStarted(int level) {\r\n\t\treturn started[level];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the level as rewarded.\r\n\t * @param level the level.\r\n\t */\r\n\tpublic void setRewarded(int level) {\r\n\t\tthis.rewarded[level] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the reward has been given.\r\n\t * @param level the level.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasReward(int level) {\r\n\t\treturn rewarded[level];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the completed.\r\n\t * @return the completed\r\n\t */\r\n\tpublic boolean[][] getCompleted() {\r\n\t\treturn completed;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the type.\r\n\t * @return the type\r\n\t */\r\n\tpublic DiaryType getType() {\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the started.\r\n\t * @return the started\r\n\t */\r\n\tpublic boolean[] getStarted() {\r\n\t\treturn started;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the rewarded.\r\n\t * @return the rewarded\r\n\t */\r\n\tpublic boolean[] getRewarded() {\r\n\t\treturn rewarded;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/diary/AchievementDiary.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/diary/AchievementDiary.java	(date 1597089529778)
@@ -4,6 +4,8 @@
 import core.game.component.Component;
 import core.game.node.entity.player.Player;
 import core.game.node.entity.player.info.login.SavingModule;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 
@@ -137,6 +139,24 @@
 		buffer.put((byte) 0);
 	}
 
+	public void parse(JSONObject data){
+		JSONArray startedArray = (JSONArray) data.get("startedLevels");
+		for(int i = 0; i < startedArray.size(); i++){
+			started[i] = (boolean) startedArray.get(i);
+		}
+		JSONArray completedArray = (JSONArray) data.get("completedLevels");
+		for(int i = 0; i < completedArray.size(); i++){
+			JSONArray level = (JSONArray) completedArray.get(i);
+			for(int j = 0; j < level.size(); j++){
+				completed[i][j] = (boolean) level.get(j);
+			}
+		}
+		JSONArray rewardedArray = (JSONArray) data.get("rewardedLevels");
+		for(int i = 0; i < rewardedArray.size(); i++){
+			rewarded[i] = (boolean) rewardedArray.get(i);
+		}
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode, size;
Index: Server/src/main/java/Server/core/game/node/entity/player/link/diary/AchievementDiaryManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link.diary;\r\n\r\nimport core.game.component.Component;\r\nimport core.game.container.impl.EquipmentContainer;\r\nimport plugin.skill.smithing.smelting.Bar;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.item.Item;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Manages the achievement diary of a player.\r\n * @author Vexia\r\n */\r\npublic class AchievementDiaryManager implements SavingModule {\r\n\r\n    /**\r\n     * The achievement diarys.\r\n     */\r\n    private final AchievementDiary[] diarys = new AchievementDiary[] { new AchievementDiary(DiaryType.KARAMJA), new AchievementDiary(DiaryType.VARROCK), new AchievementDiary(DiaryType.LUMBRIDGE) };\r\n\r\n\t/**\r\n\t * The player instance.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * Constructs a new {@Code AchievementDiary} {@Code Object}\r\n\t * @param player the player.\r\n\t */\r\n\tpublic AchievementDiaryManager(Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tbuffer.put((byte) 1).put(((byte) diarys.length));\r\n\t\tfor (AchievementDiary diary : diarys) {\r\n\t\t\tdiary.save(buffer);\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get()) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tint length = buffer.get() & 0xFF;\r\n\t\t\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\t\t\tdiarys[i].parse(buffer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the achievement diary tab.\r\n\t */\r\n\tpublic void openTab() {\r\n\t\tplayer.getInterfaceManager().openTab(2, new Component(259));\r\n\t\tfor (AchievementDiary diary : diarys) {\r\n\t\t\tdiary.drawStatus(player);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Induces a task update.\r\n\t * @param player the player.\r\n\t * @param type the diary type.\r\n\t * @param level the level.\r\n\t * @param index the index of the task.\r\n\t * @param complete if it's completed.\r\n\t */\r\n\tpublic void updateTask(Player player, DiaryType type, int level, int index, boolean complete) {\r\n\t\tgetDiary(type).updateTask(player, level, index, complete);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a task has been completed.\r\n\t * @param type the diary type.\r\n\t * @param level the level.\r\n\t * @param index the index.\r\n\t * @return {@code True} if completed.\r\n\t */\r\n\tpublic boolean hasCompletedTask(DiaryType type, int level, int index) {\r\n\t\treturn getDiary(type).isComplete(level, index);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the diary at a level as started.\r\n\t * @param type the type of diary.\r\n\t * @param level the level.\r\n\t */\r\n\tpublic void setStarted(DiaryType type, int level) {\r\n\t\tgetDiary(type).setStarted(level);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the diarys achievement as completed.\r\n\t * @param type the type.\r\n\t * @param level the level.\r\n\t * @param index the index.\r\n\t */\r\n\tpublic void setCompleted(DiaryType type, int level, int index) {\r\n\t\tgetDiary(type).setCompleted(level, index);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the achievement diary for the type.\r\n\t * @param type the type.\r\n\t * @return the diary object.\r\n\t */\r\n\tpublic AchievementDiary getDiary(DiaryType type) {\r\n\t\tif (type == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tfor (AchievementDiary diary : diarys) {\r\n\t\t\tif (diary.getType() == type) {\r\n\t\t\t\treturn diary;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the karamaja glove level.\r\n\t * @return the level of the glove.\r\n\t */\r\n\tpublic int getKaramjaGlove() {\r\n\t\tif (!hasGlove()) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\tif (player.getEquipment().containsItem(DiaryType.KARAMJA.getRewards()[i][0])) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the varrock armour level.\r\n\t * @return the level of the armour.\r\n\t */\r\n\tpublic int getArmour() {\r\n\t\tif (!hasArmour()) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\tif (player.getEquipment().containsItem(DiaryType.VARROCK.getRewards()[i][0])) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks the if the reward is valid for double.\r\n\t * @param reward the reward.\r\n\t * @return {@code True} if validated.\r\n\t */\r\n\tpublic boolean checkMiningReward(int reward) {\r\n\t\tint level = player.getAchievementDiaryManager().getArmour();\r\n\t\tif (level == -1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (reward == 453) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn level == 0 && reward <= 442 || level == 1 && reward <= 447 || level == 2 && reward <= 449;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks the if the reward is valid for double.\r\n\t * @param type the bar type.\r\n\t * @return {@code True} if validated.\r\n\t */\r\n\tpublic boolean checkSmithReward(Bar type) {\r\n\t\tint level = player.getAchievementDiaryManager().getArmour();\r\n\t\tif (level == -1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn level == 0 && type.ordinal() <= Bar.STEEL.ordinal() || level == 1 && type.ordinal() <= Bar.MITHRIL.ordinal() || level == 2 && type.ordinal() <= Bar.ADAMANT.ordinal();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has karamaja gloves.\r\n\t * @return the gloves.\r\n\t */\r\n\tpublic boolean hasGlove() {\r\n\t\tItem glove = player.getEquipment().get(EquipmentContainer.SLOT_HANDS);\r\n\t\treturn glove != null && (glove.getId() == DiaryType.KARAMJA.getRewards()[0][0].getId() || glove.getId() == DiaryType.KARAMJA.getRewards()[1][0].getId() || glove.getId() == DiaryType.KARAMJA.getRewards()[2][0].getId());\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has varrock armour.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasArmour() {\r\n\t\tItem plate = player.getEquipment().get(EquipmentContainer.SLOT_CHEST);\r\n\t\treturn plate != null && (plate.getId() == DiaryType.VARROCK.getRewards()[0][0].getId() || plate.getId() == DiaryType.VARROCK.getRewards()[1][0].getId() || plate.getId() == DiaryType.VARROCK.getRewards()[2][0].getId());\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a diary is complete.\r\n\t * @param type the diary type.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isComplete(DiaryType type) {\r\n\t\treturn diarys[type.ordinal()].isComplete();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the player.\r\n\t * @return the player\r\n\t */\r\n\tpublic Player getPlayer() {\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the diarys.\r\n\t * @return the diarys\r\n\t */\r\n\tpublic AchievementDiary[] getDiarys() {\r\n\t\treturn diarys;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/diary/AchievementDiaryManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/diary/AchievementDiaryManager.java	(date 1597089529780)
@@ -2,6 +2,8 @@
 
 import core.game.component.Component;
 import core.game.container.impl.EquipmentContainer;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 import plugin.skill.smithing.smelting.Bar;
 import core.game.node.entity.player.Player;
 import core.game.node.entity.player.info.login.SavingModule;
@@ -42,6 +44,12 @@
 		buffer.put((byte) 0);
 	}
 
+	public void parse(JSONArray data){
+		for(int i = 0; i < data.size(); i++){
+			diarys[i].parse((JSONObject) data.get(i));
+		}
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
Index: Server/src/main/java/Server/plugin/ge/GrandExchange.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.ge;\r\n\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.game.component.CloseEvent;\r\nimport core.game.component.Component;\r\nimport core.game.component.InterfaceType;\r\nimport core.game.container.Container;\r\nimport core.game.container.ContainerEvent;\r\nimport core.game.container.ContainerListener;\r\nimport core.game.container.access.BitregisterAssembler;\r\nimport core.game.container.access.InterfaceContainer;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.game.node.entity.player.link.audio.Audio;\r\nimport core.game.node.item.Item;\r\nimport core.game.system.monitor.PlayerMonitor;\r\nimport core.net.packet.PacketRepository;\r\nimport core.net.packet.context.GrandExchangeContext;\r\nimport core.net.packet.out.GrandExchangePacket;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.text.DecimalFormat;\r\nimport java.text.NumberFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\n/**\r\n * Handles a player's Grand Exchange.\r\n *\r\n * @author Emperor\r\n */\r\npublic final class GrandExchange implements SavingModule {\r\n\r\n    /**\r\n     * The player.\r\n     */\r\n    private final Player player;\r\n\r\n    /**\r\n     * The grand exchange offers.\r\n     */\r\n    private final GrandExchangeOffer[] offers = new GrandExchangeOffer[6];\r\n\r\n    /**\r\n     * The offer the player is currently constructing.\r\n     */\r\n    private GrandExchangeOffer temporaryOffer;\r\n\r\n    /**\r\n     * The grand exchange offer history.\r\n     */\r\n    private GrandExchangeOffer[] history = new GrandExchangeOffer[5];\r\n\r\n    /**\r\n     * The currently opened index.\r\n     */\r\n    private int openedIndex = -1;\r\n\r\n    /**\r\n     * Constructs a new {@code GrandExchange} {@code Object}.\r\n     *\r\n     * @param player The player.\r\n     */\r\n    public GrandExchange(Player player) {\r\n        this.player = player;\r\n    }\r\n\r\n    /**\r\n     * Opens the Grand Exchange menu.\r\n     *\r\n     * @NOTICE: The amount of GE boxes is limited at LoginWriteEvent.java (2 or 6 GE boxes, set it 0 for 2, 1 for 6)\r\n     */\r\n    public void open() {\r\n        if (player.getIronmanManager().checkRestriction()) {\r\n            return;\r\n        }\r\n        if (!player.getBankPinManager().isUnlocked()) {\r\n            player.getBankPinManager().openType(4);\r\n            return;\r\n        }\r\n        player.getInterfaceManager().open(new Component(105)).setCloseEvent(new CloseEvent() {\r\n            @Override\r\n            public boolean close(Player player, Component c) {\r\n                temporaryOffer = null;\r\n                player.getPacketDispatch().sendRunScript(571, \"\");\r\n                player.getInterfaceManager().closeChatbox();\r\n                player.getInterfaceManager().closeSingleTab();\r\n                return true;\r\n            }\r\n        });\r\n        player.getPacketDispatch().sendInterfaceConfig(105, 193, true);\r\n        player.getPacketDispatch().sendAccessMask(6, 211, 105, -1, -1);\r\n        player.getPacketDispatch().sendAccessMask(6, 209, 105, -1, -1);\r\n        toMainInterface();\r\n    }\r\n\r\n    /**\r\n     * Opens the collection box.\r\n     */\r\n    public void openCollectionBox() {\r\n        if (!player.getBankPinManager().isUnlocked()) {\r\n            player.getBankPinManager().openType(3);\r\n            return;\r\n        }\r\n        player.getInterfaceManager().openComponent(109);\r\n        player.getPacketDispatch().sendAccessMask(6, 18, 109, 0, 2);\r\n        player.getPacketDispatch().sendAccessMask(6, 23, 109, 0, 2);\r\n        player.getPacketDispatch().sendAccessMask(6, 28, 109, 0, 2);\r\n        player.getPacketDispatch().sendAccessMask(6, 36, 109, 0, 2);\r\n        player.getPacketDispatch().sendAccessMask(6, 44, 109, 0, 2);\r\n        player.getPacketDispatch().sendAccessMask(6, 52, 109, 0, 2);\r\n        for (GrandExchangeOffer offer : player.getGrandExchange().getOffers()) {\r\n            if (offer != null) {\r\n                offer.sendItems();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens the history log.\r\n     *\r\n     * @param p The player to open it for.\r\n     */\r\n    public void openHistoryLog(Player p) {\r\n        p.getInterfaceManager().open(new Component(643));\r\n        for (int i = 0; i < history.length; i++) {\r\n            GrandExchangeOffer o = history[i];\r\n            if (o == null) {\r\n                for (int j = 0; j < 4; j++) {\r\n                    p.getPacketDispatch().sendString(\"-\", 643, 25 + i + (j * 5));\r\n                }\r\n                continue;\r\n            }\r\n            p.getPacketDispatch().sendString(o.isSell() ? \"You sold\" : \"You bought\", 643, 25 + i);\r\n            p.getPacketDispatch().sendString(NumberFormat.getNumberInstance(Locale.US).format(o.getCompletedAmount()), 643, 30 + i);\r\n            p.getPacketDispatch().sendString(ItemDefinition.forId(o.getItemId()).getName(), 643, 35 + i);\r\n            p.getPacketDispatch().sendString(NumberFormat.getNumberInstance(Locale.US).format(o.getTotalCoinExchange()) + \" gp\", 643, 40 + i);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens the item sets interface.\r\n     */\r\n    public void openItemSets() {\r\n        player.getInventory().getListeners().add(new ContainerListener() {\r\n\r\n            @Override\r\n            public void update(Container c, ContainerEvent event) {\r\n                player.setAttribute(\"container-key\", InterfaceContainer.generateItems(player, player.getInventory().toArray(), new String[]{\"Examine\", \"Exchange\", \"Components\"}, 644, 0, 7, 4));\r\n                InterfaceContainer.generateItems(player, GEItemSet.getItemArray(), new String[]{\"Examine\", \"Exchange\", \"Components\"}, 645, 16, 15, 10);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void refresh(Container c) {\r\n                player.setAttribute(\"container-key\", InterfaceContainer.generateItems(player, player.getInventory().toArray(), new String[]{\"Examine\", \"Exchange\", \"Components\"}, 644, 0, 7, 4));\r\n                InterfaceContainer.generateItems(player, GEItemSet.getItemArray(), new String[]{\"Examine\", \"Exchange\", \"Components\"}, 645, 16, 15, 10);\r\n            }\r\n\r\n        });\r\n        player.getInterfaceManager().open(new Component(645)).setCloseEvent(new CloseEvent() {\r\n            @Override\r\n            public boolean close(Player player, Component c) {\r\n                player.getInventory().getListeners().remove(1);\r\n                player.getInterfaceManager().closeSingleTab();\r\n                player.removeAttribute(\"container-key\");\r\n                return true;\r\n            }\r\n        });\r\n        player.getInterfaceManager().openSingleTab(new Component(644)).open(player);\r\n        player.setAttribute(\"container-key\", InterfaceContainer.generateItems(player, player.getInventory().toArray(), new String[]{\"Examine\", \"Exchange\", \"Components\"}, 644, 0, 7, 4));\r\n        InterfaceContainer.generateItems(player, GEItemSet.getItemArray(), new String[]{\"Examine\", \"Exchange\", \"Components\"}, 645, 16, 15, 10);\r\n    }\r\n\r\n    /**\r\n     * Returns to the main interface.\r\n     */\r\n    @SuppressWarnings(\"deprecation\")\r\n    public void toMainInterface() {\r\n        player.getConfigManager().send(1112, -1);\r\n        player.getConfigManager().send(1113, -1);\r\n        player.getInterfaceManager().closeChatbox();\r\n        player.getInterfaceManager().closeSingleTab();\r\n        openedIndex = -1;\r\n    }\r\n\r\n    @Override\r\n    public void save(ByteBuffer buffer) {\r\n        for (GrandExchangeOffer offer : offers) {\r\n            if (offer != null) {\r\n                buffer.put((byte) offer.getIndex());\r\n                buffer.putLong(offer.getUid());\r\n            }\r\n        }\r\n        buffer.put((byte) -1);\r\n        for (GrandExchangeOffer o : history) {\r\n            if (o == null) {\r\n                buffer.put((byte) -1);\r\n                continue;\r\n            }\r\n            buffer.put((byte) (o.isSell() ? 1 : 0));\r\n            buffer.putShort((short) o.getItemId());\r\n            buffer.putInt(o.getTotalCoinExchange());\r\n            buffer.putInt(o.getCompletedAmount());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void parse(ByteBuffer buffer) {\r\n        int index = -1;\r\n        GrandExchangeOffer o;\r\n        while ((index = buffer.get()) != -1) {\r\n            long key = buffer.getLong();\r\n            o = offers[index] = GEOfferDispatch.forUID(key);\r\n            if (o == null) {\r\n                System.out.println(\"Could not locate G.E offer for key \" +\r\n                        key + \"!\");\r\n            } else {\r\n                o.setIndex(index);\r\n            }\r\n        }\r\n        for (int i = 0; i < history.length; i++) {\r\n            int s = buffer.get();\r\n            if (s == -1) {\r\n                continue;\r\n            }\r\n            o = history[i] = new GrandExchangeOffer(buffer.getShort(), s == 1);\r\n            o.setTotalCoinExchange(buffer.getInt());\r\n            o.setCompletedAmount(buffer.getInt());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes the grand exchange.\r\n     */\r\n    public void init() {\r\n        boolean updated = false;\r\n        for (GrandExchangeOffer offer : offers) {\r\n            if (offer != null) {\r\n                offer.setPlayer(player);\r\n                if (!updated && (offer.getWithdraw()[0] != null || offer.getWithdraw()[1] != null)) {\r\n                    updated = true;\r\n                }\r\n            }\r\n        }\r\n        update();\r\n        if (updated) {\r\n            player.getPacketDispatch().sendMessage(\"You have items from the Grand Exchange waiting in your collection box.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the grand exchange data.\r\n     */\r\n    public void update() {\r\n        for (GrandExchangeOffer offer : offers) {\r\n            update(offer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates a grand exchange offer.\r\n     *\r\n     * @param offer The offer to update.\r\n     */\r\n    public void update(GrandExchangeOffer offer) {\r\n        if (offer != null) {\r\n            PacketRepository.send(GrandExchangePacket.class, new GrandExchangeContext(player, offer));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Constructs a new buy offer.\r\n     *\r\n     * @param itemId The item id.\r\n     */\r\n    public void constructBuy(int itemId) {\r\n        if (openedIndex < 0) {\r\n            return;\r\n        }\r\n        temporaryOffer = new GrandExchangeOffer(itemId, false);\r\n        if (temporaryOffer.getEntry() == null) {\r\n            player.getPacketDispatch().sendMessage(\"This item has been blacklisted from the Grand Exchange.\");\r\n            return;\r\n        }\r\n        temporaryOffer.setPlayer(player);\r\n        temporaryOffer.setDefault();\r\n        sendConfiguration(temporaryOffer, false);\r\n    }\r\n\r\n    /**\r\n     * Constructs a new sale offer.\r\n     *\r\n     * @param item The item to sell.\r\n     */\r\n    public void constructSale(Item item) {\r\n        if (openedIndex < 0 || offers[openedIndex] != null) {\r\n            return;\r\n        }\r\n        if (item.getId() == 995) {\r\n            player.getPacketDispatch().sendMessage(\"You can't offer money!\");\r\n            return;\r\n        }\r\n        int id = item.getId();\r\n        if (!item.getDefinition().isUnnoted()) {\r\n            id = item.getNoteChange();\r\n        }\r\n        if (GrandExchangeDatabase.getDatabase().get(id) == null) {\r\n            player.getPacketDispatch().sendMessage(\"This item can't be sold on the Grand Exchange.\");\r\n            return;\r\n        }\r\n        temporaryOffer = new GrandExchangeOffer(id, true);\r\n        temporaryOffer.setPlayer(player);\r\n        temporaryOffer.setDefault();\r\n        temporaryOffer.setAmount(item.getAmount());\r\n        sendConfiguration(temporaryOffer, true);\r\n    }\r\n\r\n    /**\r\n     * Gets the total amount of this item in the inventory (including noted\r\n     * version).\r\n     *\r\n     * @param player The player.\r\n     * @param itemId the item id.\r\n     * @return The amount of items + notes in the inventory.\r\n     */\r\n    public static int getInventoryAmount(Player player, int itemId) {\r\n        Item item = new Item(itemId);\r\n        int amount = player.getInventory().getAmount(item);\r\n        if (item.getDefinition().getNoteId() > -1) {\r\n            amount += player.getInventory().getAmount(new Item(item.getDefinition().getNoteId()));\r\n        }\r\n        return amount;\r\n    }\r\n\r\n    /**\r\n     * Confirms the current offer.\r\n     */\r\n    public void confirmOffer() {\r\n        if (openedIndex < 0 || temporaryOffer == null) {\r\n            return;\r\n        }\r\n        if (temporaryOffer.getOfferedValue() < 1) {\r\n            player.getAudioManager().send(new Audio(4039, 1, 1));\r\n            player.getPacketDispatch().sendMessage(\"You can't make an offer for 0 coins.\");\r\n            return;\r\n        }\r\n        if (temporaryOffer.getAmount() > (Integer.MAX_VALUE / temporaryOffer.getOfferedValue())) {\r\n            player.getAudioManager().send(new Audio(4039, 1, 1));\r\n            player.getPacketDispatch().sendMessage(\"You can't \" + (temporaryOffer.isSell() ? \"sell \" : \"buy \") + \" this much!\");\r\n            return;\r\n        }\r\n        temporaryOffer.setIndex(openedIndex);\r\n        if (temporaryOffer.isSell()) {\r\n            int maxAmount = getInventoryAmount(player, temporaryOffer.getItemId());\r\n            if (temporaryOffer.getAmount() > maxAmount) {\r\n                player.getAudioManager().send(new Audio(4039, 1, 1));\r\n                player.getPacketDispatch().sendMessage(\"You do not have enough of this item in your inventory to cover the\");\r\n                player.getPacketDispatch().sendMessage(\"offer.\");\r\n                return;\r\n            }\r\n            Item item;\r\n            int amountLeft = temporaryOffer.getAmount() - player.getInventory().getAmount(new Item(temporaryOffer.getItemId()));\r\n            boolean remove = player.getInventory().remove(item = new Item(temporaryOffer.getItemId(), temporaryOffer.getAmount()));\r\n            int note;\r\n            if (amountLeft > 0) {\r\n                if ((note = item.getNoteChange()) > 0) {\r\n                    player.getInventory().remove(new Item(note, amountLeft));\r\n                } else if (remove) {\r\n                    player.getInventory().add(new Item(temporaryOffer.getItemId(), temporaryOffer.getAmount() - amountLeft));\r\n                    return;\r\n                }\r\n            }\r\n            if (GEOfferDispatch.dispatch(player, temporaryOffer)) {\r\n                offers[openedIndex] = temporaryOffer;\r\n                GEOfferDispatch.updateOffer(temporaryOffer);\r\n            }\r\n        } else {\r\n            int total = temporaryOffer.getAmount() * temporaryOffer.getOfferedValue();\r\n            if (total > player.getInventory().getAmount(new Item(995))) {\r\n                player.getAudioManager().send(new Audio(4039, 1, 1));\r\n                player.getPacketDispatch().sendMessage(\"You do not have enough coins to cover the offer.\");\r\n                return;\r\n            }\r\n            if (GEOfferDispatch.dispatch(player, temporaryOffer) && player.getInventory().remove(new Item(995, total))) {\r\n                offers[openedIndex] = temporaryOffer;\r\n                GEOfferDispatch.updateOffer(temporaryOffer);\r\n            }\r\n        }\r\n        player.getMonitor().log((temporaryOffer.isSell() ? \"selling\" : \"buying\") + \" offer => item => \" + ItemDefinition.forId(temporaryOffer.getItemId()).getName() + \" => amount => \" + temporaryOffer.getAmount() + \" => price => \" + temporaryOffer.getOfferedValue(), PlayerMonitor.GRAND_EXCHANGE_LOG);\r\n        toMainInterface();\r\n        player.getAudioManager().send(new Audio(4043, 1, 1));\r\n        temporaryOffer = null;\r\n    }\r\n\r\n    /**\r\n     * Aborts an offer.\r\n     *\r\n     * @param index The offer index.\r\n     */\r\n    public void abort(int index) {\r\n        GrandExchangeOffer offer = offers[index];\r\n        player.getPacketDispatch().sendMessage(\"Abort request acknowledged. Please be aware that your offer may\");\r\n        player.getPacketDispatch().sendMessage(\"have already been completed.\");\r\n        if (offer == null || !offer.isActive()) {\r\n            return;\r\n        }\r\n        offer.setState(OfferState.ABORTED);\r\n        if (offer.isSell()) {\r\n            offer.addWithdraw(offer.getItemId(), offer.getAmountLeft(), true);\r\n        } else {\r\n            offer.addWithdraw(995, offer.getAmountLeft() * offer.getOfferedValue(), true);\r\n        }\r\n        player.getGrandExchange().update(offer);\r\n        player.getMonitor().log(\"aborted offer => item => \" + ItemDefinition.forId(offer.getItemId()).getName() + \" => amount => \" + offer.getAmount() + \"\", PlayerMonitor.GRAND_EXCHANGE_LOG);\r\n\r\n        GEOfferDispatch.setDumpDatabase(true);\r\n    }\r\n\r\n    /**\r\n     * Removes an offer.\r\n     *\r\n     * @param index The offer index.\r\n     */\r\n    public boolean remove(int index) {\r\n        GrandExchangeOffer offer;\r\n        if ((offer = offers[index]) == null) {\r\n            return false;\r\n        }\r\n        if (offer.getCompletedAmount() > 0) {\r\n            logHistory(offer);\r\n            player.getMonitor().log(\"offer removed => item => \" + ItemDefinition.forId(offer.getItemId()).getName() + \" =>  amount => \" + offer.getAmount() + \" => amount_left => \" + offer.getAmountLeft() + \" => completed_amount => \" + offer.getCompletedAmount() + \"\", PlayerMonitor.GRAND_EXCHANGE_LOG);\r\n\r\n        }\r\n        offer.setWithdraw(new Item[2]);\r\n        offer.setUid(0);\r\n        offer.setState(OfferState.REMOVED);\r\n        offers[index] = null;\r\n        update(offer);\r\n        toMainInterface();\r\n        return GEOfferDispatch.remove(offer.getUid());\r\n    }\r\n\r\n    /**\r\n     * Adds the completed offer to the log.\r\n     *\r\n     * @param offer The completed offer.\r\n     */\r\n    public void logHistory(GrandExchangeOffer offer) {\r\n        GrandExchangeOffer[] newHistory = new GrandExchangeOffer[5];\r\n        newHistory[0] = offer;\r\n        System.arraycopy(history, 0, newHistory, 1, 4);\r\n        history = newHistory;\r\n    }\r\n\r\n    /**\r\n     * Views a registered offer.\r\n     *\r\n     * @param index The index.\r\n     */\r\n    public void view(int index) {\r\n        if (offers[index] == null) {\r\n            return;\r\n        }\r\n        this.openedIndex = index;\r\n        sendConfiguration(offers[index], false);\r\n    }\r\n\r\n    /**\r\n     * Opens the buying screen.\r\n     *\r\n     * @param index The offer index.\r\n     */\r\n    public void openBuy(int index) {\r\n        this.openedIndex = index;\r\n        sendConfiguration(offers[index], false);\r\n        openSearch();\r\n    }\r\n\r\n    /**\r\n     * Opens the selling screen.\r\n     */\r\n    public void openSell(int index) {\r\n        this.openedIndex = index;\r\n        sendConfiguration(offers[index], true);\r\n        player.getInterfaceManager().openSingleTab(new Component(107)).open(player);\r\n        player.getPacketDispatch().sendRunScript(149, \"IviiiIsssss\", \"\", \"\", \"\", \"Examine\", \"Offer\", -1, 0, 7, 4, 93, 7012370);\r\n        BitregisterAssembler.send(player, 107, 18, 0, 27, new BitregisterAssembler(0, 1));\r\n    }\r\n\r\n    /**\r\n     * Withdraws an item.\r\n     *\r\n     * @param offer The offer to withdraw from.\r\n     * @param index The item index.\r\n     */\r\n    public void withdraw(GrandExchangeOffer offer, int index) {\r\n        Item item = offer.getWithdraw()[index];\r\n        if (item == null) {\r\n            return;\r\n        }\r\n        if (player.getInventory().getMaximumAdd(item) < item.getAmount()) {\r\n            int note = item.getNoteChange();\r\n            if (note == -1 || player.getInventory().getMaximumAdd(new Item(note)) < item.getAmount()) {\r\n                player.getAudioManager().send(new Audio(4039, 1, 1));\r\n                player.getPacketDispatch().sendMessage(\"You do not have enough room in your inventory.\");\r\n                return;\r\n            }\r\n            player.getInventory().add(new Item(note, item.getAmount()));\r\n        } else {\r\n            player.getInventory().add(item);\r\n        }\r\n        offer.getWithdraw()[index] = null;\r\n        if (!offer.isActive() && offer.getWithdraw()[0] == null && offer.getWithdraw()[1] == null) {\r\n            player.getGrandExchange().remove(offer.getIndex());\r\n        }\r\n        player.getAudioManager().send(new Audio(4040, 1, 1));\r\n        offer.sendItems();\r\n        GEOfferDispatch.setDumpDatabase(true);\r\n    }\r\n\r\n    /**\r\n     * Opens the search interface.\r\n     */\r\n    public void openSearch() {\r\n        Component c = new Component(389);\r\n        c.getDefinition().setType(InterfaceType.CS_CHATBOX);\r\n        c.setCloseEvent(new CloseEvent() {\r\n            @Override\r\n            public boolean close(Player player, Component c) {\r\n                player.getPacketDispatch().sendRunScript(571, \"\");\r\n                return true;\r\n            }\r\n        });\r\n        player.getPacketDispatch().sendRunScript(570, \"s\", \"Grand Exchange Item Search\");\r\n        player.getInterfaceManager().openChatbox(c);\r\n    }\r\n\r\n    /**\r\n     * Sends the configuration packets for the offer.\r\n     *\r\n     * @param offer The grand exchange offer.\r\n     * @param sell  If it's a selling offer.\r\n     */\r\n    @SuppressWarnings(\"deprecation\")\r\n    public void sendConfiguration(GrandExchangeOffer offer, boolean sell) {\r\n        boolean construct = offer == null;\r\n        GrandExchangeEntry entry = null;\r\n        String examine = \"\";\r\n        DecimalFormat formatter = new DecimalFormat(\"###,###,###,###\");\r\n        StringBuilder text = new StringBuilder();\r\n        int lowestOfferValue = 0;\r\n        int totalAmounts = 0;\r\n        List<Integer> foundOffers = new ArrayList<>();\r\n        List<Integer> foundAmounts = new ArrayList<>();\r\n        if (!construct) {\r\n            entry = offer.getEntry();\r\n            examine = ItemDefinition.forId(offer.getItemId()).getExamine();\r\n            int count = 0;\r\n            if (!offer.isSell()) {\r\n                for (GrandExchangeOffer o : GEOfferDispatch.getOfferMapping().values()) {\r\n                    if (o != null)\r\n                        if (o.isSell() != offer.isSell() && o.getItemId() == offer.getItemId() && o.isActive()) {\r\n                            foundOffers.add(o.getOfferedValue());\r\n                            foundAmounts.add(o.getAmountLeft());\r\n                            count++;\r\n                            System.out.println(o.toString());\r\n                        }\r\n                }\r\n\r\n                for (GrandExchangeOffer o : GEAutoStock.getStock()) {\r\n                    if (o != null)\r\n                        if (o.isSell() != offer.isSell() && o.getItemId() == offer.getItemId() && o.isActive()) {\r\n                            foundOffers.add(o.getOfferedValue());\r\n                            foundAmounts.add(o.getAmountLeft());\r\n                            count++;\r\n                        }\r\n                }\r\n\r\n                if (!foundOffers.isEmpty()) {\r\n                    lowestOfferValue = Collections.min(foundOffers);\r\n                    totalAmounts = foundAmounts.stream().mapToInt(Integer::intValue).sum();\r\n                }\r\n                if (count == 0)\r\n                    text.append(\"<col=8A0808>There are currently no sell offers for this item.\");\r\n                if (count >= 1)\r\n                    text.append(\"Lowest price: <col=FFFFFF>\").append(formatter.format(lowestOfferValue)).append(\" gp\").append(\"</col><br>Quantity: <col=FFFFFF>\")\r\n                            .append(formatter.format(totalAmounts)).append(\"</col><br>Users: <col=FFFFFF>\").append(formatter.format(count));\r\n            }\r\n        }\r\n\r\n\r\n        player.getPacketDispatch().sendString(offer != null && !offer.isSell() ? text.toString() : examine, 105, 142);\r\n        player.getConfigManager().send(1114, entry == null ? 0 : entry.getValue());\r\n        player.getConfigManager().send(1115, (int) (entry == null ? 0 : entry.getValue() * 0.95));\r\n        player.getConfigManager().send(1116, (int) (entry == null ? 0 : entry.getValue() * 1.05));\r\n        player.getConfigManager().send(1112, openedIndex);\r\n        player.getConfigManager().send(1113, sell ? 1 : 0);\r\n        player.getConfigManager().send(1109, construct ? -1 : offer.getItemId());\r\n        player.getConfigManager().send(1110, construct ? 0 : offer.getAmount());\r\n        player.getConfigManager().send(1111, construct ? 0 : offer.getOfferedValue());\r\n        if (!construct) {\r\n            offer.sendItems();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Formats the grand exchange.\r\n     *\r\n     * @return the formatted offer for the SQL database.\r\n     */\r\n    public String format() {\r\n        String log = \"\";\r\n        for (GrandExchangeOffer offer : offers) {\r\n            if (offer != null) {\r\n                log += offer.getItemId() + \",\" + offer.getAmount() + \",\" + offer.isSell() + \"|\";\r\n            }\r\n        }\r\n        if (log.length() > 0 && log.charAt(log.length() - 1) == '|') {\r\n            log = log.substring(0, log.length() - 1);\r\n        }\r\n        return log;\r\n    }\r\n\r\n    /**\r\n     * Gets the currently opened offer.\r\n     *\r\n     * @return The grand exchange offer currently opened.\r\n     */\r\n    public GrandExchangeOffer getOpenedOffer() {\r\n        if (openedIndex < 0) {\r\n            return null;\r\n        }\r\n        return offers[openedIndex];\r\n    }\r\n\r\n    /**\r\n     * Checks if the player has an active offer.\r\n     *\r\n     * @return {@code True} if so.\r\n     */\r\n    public boolean hasActiveOffer() {\r\n        for (GrandExchangeOffer offer : offers) {\r\n            if (offer != null) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets the offers.\r\n     *\r\n     * @return The offers.\r\n     */\r\n    public GrandExchangeOffer[] getOffers() {\r\n        return offers;\r\n    }\r\n\r\n    public static int getLowestValue(int[] numbers){\r\n        int minValue = numbers[0];\r\n        for(int i=1;i<numbers.length;i++){\r\n            if(numbers[i] < minValue){\r\n                minValue = numbers[i];\r\n            }\r\n        }\r\n        return minValue;\r\n    }\r\n\r\n    /**\r\n     * Gets the openedIndex.\r\n     *\r\n     * @return The openedIndex.\r\n     */\r\n    public int getOpenedIndex() {\r\n        return openedIndex;\r\n    }\r\n\r\n    /**\r\n     * Sets the openedIndex.\r\n     *\r\n     * @param openedIndex The openedIndex to set.\r\n     */\r\n    public void setOpenedIndex(int openedIndex) {\r\n        this.openedIndex = openedIndex;\r\n    }\r\n\r\n    /**\r\n     * Gets the temporaryOffer.\r\n     *\r\n     * @return The temporaryOffer.\r\n     */\r\n    public GrandExchangeOffer getTemporaryOffer() {\r\n        return temporaryOffer;\r\n    }\r\n\r\n    /**\r\n     * Sets the temporaryOffer.\r\n     *\r\n     * @param temporaryOffer The temporaryOffer to set.\r\n     */\r\n    public void setTemporaryOffer(GrandExchangeOffer temporaryOffer) {\r\n        this.temporaryOffer = temporaryOffer;\r\n    }\r\n\r\n    /**\r\n     * Gets the history.\r\n     *\r\n     * @return The history.\r\n     */\r\n    public GrandExchangeOffer[] getHistory() {\r\n        return history;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/ge/GrandExchange.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/ge/GrandExchange.java	(date 1597089529802)
@@ -17,6 +17,8 @@
 import core.net.packet.PacketRepository;
 import core.net.packet.context.GrandExchangeContext;
 import core.net.packet.out.GrandExchangePacket;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 import java.text.DecimalFormat;
@@ -207,6 +209,30 @@
         }
     }
 
+    public void parse(JSONObject geData){
+        Object offersRaw = geData.get("offers");
+        GrandExchangeOffer o;
+
+        if(offersRaw != null){
+            JSONArray offers = (JSONArray) offersRaw;
+            JSONArray history = (JSONArray) geData.get("history");
+            for(int i = 0; i < offers.size(); i++){
+                JSONObject offer = (JSONObject) offers.get(i);
+                int index = (int) offer.get("offerIndex");
+                o = this.offers[index] = GEOfferDispatch.forUID((int) offer.get("offerUID"));
+                o.setIndex(index);
+            }
+            for(int i = 0 ; i < history.size(); i++ ){
+                JSONObject offer = (JSONObject) history.get(i);
+                o = this.history[i] = new GrandExchangeOffer((int)offer.get("itemId"),(boolean) offer.get("isSell"));
+                o.setTotalCoinExchange((int) offer.get("totalCoinExchange"));
+                o.setCompletedAmount((int) offer.get("completedAmount"));
+            }
+        }
+
+
+    }
+
     @Override
     public void parse(ByteBuffer buffer) {
         int index = -1;
Index: Server/src/main/java/Server/plugin/ttrail/TreasureTrailManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.ttrail;\r\n\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\nimport core.tools.RandomFunction;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Handles the treasure trail of a player.\r\n * @author Vexia\r\n */\r\npublic final class TreasureTrailManager implements SavingModule {\r\n\r\n\t/**\r\n\t * The ids of the clues.\r\n\t */\r\n\tprivate static final int[] IDS = new int[] { 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2716, 2719, 2722, 2723, 2725, 2727, 2729, 2731, 2733, 2735, 2737, 2739, 2741, 2743, 2745, 2747, 2773, 2774, 2776, 2778, 2780, 2782, 2783, 2785, 2786, 2788, 2790, 2792, 2793, 2794, 2796, 2797, 2799, 2801, 2803, 2805, 2807, 2809, 2811, 2813, 2815, 2817, 2819, 2821, 2823, 2825, 2827, 2829, 2831, 2833, 2835, 2837, 2839, 2841, 2843, 2845, 2847, 2848, 2849, 2851, 2853, 2855, 2856, 2857, 2858, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3512, 3513, 3514, 3515, 3516, 3518, 3520, 3522, 3524, 3525, 3526, 3528, 3530, 3532, 3534, 3536, 3538, 3540, 3542, 3544, 3546, 3548, 3550, 3552, 3554, 3556, 3558, 3560, 3562, 3564, 3566, 3568, 3570, 3572, 3573, 3574, 3575, 3577, 3579, 3580, 3582, 3584, 3586, 3588, 3590, 3592, 3594, 3596, 3598, 3599, 3601, 3602, 3604, 3605, 3607, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 7236, 7238, 7239, 7241, 7243, 7245, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7258, 7260, 7262, 7264, 7266, 7268, 7270, 7272, 7274, 7276, 7278, 7280, 7282, 7284, 7286, 7288, 7290, 7292, 7294, 7296, 7298, 7300, 7301, 7303, 7304, 7305, 7307, 7309, 7311, 7313, 7315, 7317, 10180, 10182, 10184, 10186, 10188, 10190, 10192, 10194, 10196, 10198, 10200, 10202, 10204, 10206, 10208, 10210, 10212, 10214, 10216, 10218, 10220, 10222, 10224, 10226, 10228, 10230, 10232, 10234, 10236, 10238, 10240, 10242, 10244, 10246, 10248, 10250, 10252, 10254, 10256, 10258, 10260, 10262, 10264, 10266, 10268, 10270, 10272, 10274, 10276, 10278, 13010, 13012, 13014, 13016, 13018, 13020, 13022, 13024, 13026, 13028, 13030, 13032, 13034, 13036, 13038, 13040, 13041, 13042, 13044, 13046, 13048, 13049, 13050, 13051, 13053, 13055, 13056, 13058, 13060, 13061, 13063, 13065, 13067, 13068, 13069, 13070, 13071, 13072, 13074, 13075, 13076, 13078, 13079, 13080 };\r\n\r\n\t/**\r\n\t * The player.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The current clue id.\r\n\t */\r\n\tprivate int clueId;\r\n\r\n\t/**\r\n\t * The clue level.\r\n\t */\r\n\tprivate ClueLevel level;\r\n\r\n\t/**\r\n\t * The trail stage.\r\n\t */\r\n\tprivate int trailStage;\r\n\r\n\t/**\r\n\t * The current length of the trail.\r\n\t */\r\n\tprivate int trailLength;\r\n\r\n\t/**\r\n\t * The amount of completed clues.\r\n\t */\r\n\tprivate final int[] completedClues = new int[3];\r\n\r\n\t/**\r\n\t * Constructs a new {@Code TreasureTrailManager} {@Code\r\n\t * Object}\r\n\t * @param player the player.\r\n\t */\r\n\tpublic TreasureTrailManager(Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tif (hasTrail()) {\r\n\t\t\tbuffer.put((byte) 1);\r\n\t\t\tbuffer.putInt(clueId << 16 | trailLength);\r\n\t\t\tbuffer.put((byte) 2);\r\n\t\t\tbuffer.putInt(trailStage);\r\n\t\t}\r\n\t\tif (completedClues[0] != 0 || completedClues[1] != 0 || completedClues[2] != 0) {\r\n\t\t\tbuffer.put((byte) 4);\r\n\t\t\tfor (int i = 0; i < completedClues.length; i++) {\r\n\t\t\t\tbuffer.putInt(completedClues[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get() & 0xFFFF) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tint hash = buffer.getInt();\r\n\t\t\t\tclueId = hash >> 16 & 0xFFFF;\r\n\t\t\t\ttrailLength = hash & 0xFFFF;\r\n\t\t\t\tClueScrollPlugin p = ClueScrollPlugin.getClueScrolls().get(clueId);\r\n\t\t\t\tif (p != null) {\r\n\t\t\t\t\tlevel = p.getLevel();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttrailStage = buffer.getInt();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tbuffer.getInt();// old\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tfor (int i = 0; i < completedClues.length; i++) {\r\n\t\t\t\t\tcompletedClues[i] = buffer.getInt();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Starts a treasure trail.\r\n\t * @param clue the clue.\r\n\t */\r\n\tpublic void startTrail(ClueScrollPlugin clue) {\r\n\t\tsetClue(clue);\r\n\t\ttrailLength = RandomFunction.random(clue.getLevel().getMinimumLength(), clue.getLevel().getMaximumLength());\r\n\t\ttrailStage = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the trail.\r\n\t */\r\n\tpublic void clearTrail() {\r\n\t\tclueId = 0;\r\n\t\tlevel = null;\r\n\t\ttrailLength = 0;\r\n\t\ttrailStage = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current clue.\r\n\t * @param clue the clue.\r\n\t */\r\n\tpublic void setClue(ClueScrollPlugin clue) {\r\n\t\tclueId = clue.getClueId();\r\n\t\tlevel = clue.getLevel();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has a clue.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasClue() {\r\n\t\tif (player == null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (player.hasItem(ClueLevel.EASY.getCasket()) || player.hasItem(ClueLevel.MEDIUM.getCasket()) || player.hasItem(ClueLevel.HARD.getCasket())) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (int id : IDS) {\r\n\t\t\tif (player.getInventory().contains(id, 1) || player.getBank().contains(id, 1)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Increments a trail stage.\r\n\t */\r\n\tpublic void incrementStage() {\r\n\t\ttrailStage += 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the trail is completed.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isCompleted() {\r\n\t\treturn trailStage != 0 && trailLength != 0 && trailStage >= trailLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the player has an active trail.\r\n\t * @return the trail.\r\n\t */\r\n\tpublic boolean hasTrail() {\r\n\t\treturn clueId != 0 && level != null & trailLength != 0 && trailStage != 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Incremented the clues.\r\n\t */\r\n\tpublic void incrementClues(ClueLevel level) {\r\n\t\tcompletedClues[level.ordinal()]++;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the amount of completed clues for the level.\r\n\t * @param level the level.\r\n\t * @return the amount.\r\n\t */\r\n\tpublic int getCompletedClues(ClueLevel level) {\r\n\t\treturn completedClues[level.ordinal()];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the completed clue amount.\r\n\t * @return the completed clues.\r\n\t */\r\n\tpublic int[] getCompletedClues() {\r\n\t\treturn completedClues;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bclueId.\r\n\t * @return the clueId\r\n\t */\r\n\tpublic int getClueId() {\r\n\t\treturn clueId;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the baclueId.\r\n\t * @param clueId the clueId to set.\r\n\t */\r\n\tpublic void setClueId(int clueId) {\r\n\t\tthis.clueId = clueId;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the blevel.\r\n\t * @return the level\r\n\t */\r\n\tpublic ClueLevel getLevel() {\r\n\t\treturn level;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the balevel.\r\n\t * @param level the level to set.\r\n\t */\r\n\tpublic void setLevel(ClueLevel level) {\r\n\t\tthis.level = level;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the bplayer.\r\n\t * @return the player\r\n\t */\r\n\tpublic Player getPlayer() {\r\n\t\treturn player;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the btrailLength.\r\n\t * @return the trailLength\r\n\t */\r\n\tpublic int getTrailLength() {\r\n\t\treturn trailLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the batrailLength.\r\n\t * @param trailLength the trailLength to set.\r\n\t */\r\n\tpublic void setTrailLength(int trailLength) {\r\n\t\tthis.trailLength = trailLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the btrailStage.\r\n\t * @return the trailStage\r\n\t */\r\n\tpublic int getTrailStage() {\r\n\t\treturn trailStage;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the batrailStage.\r\n\t * @param trailStage the trailStage to set.\r\n\t */\r\n\tpublic void setTrailStage(int trailStage) {\r\n\t\tthis.trailStage = trailStage;\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/ttrail/TreasureTrailManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/ttrail/TreasureTrailManager.java	(date 1597089529816)
@@ -3,6 +3,8 @@
 import core.game.node.entity.player.Player;
 import core.game.node.entity.player.info.login.SavingModule;
 import core.tools.RandomFunction;
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
 
 import java.nio.ByteBuffer;
 
@@ -73,6 +75,20 @@
 		buffer.put((byte) 0);
 	}
 
+	public void parse(JSONObject data){
+		JSONArray cc = (JSONArray) data.get("completedClues");
+		for(int i = 0; i < cc.size(); i++){
+			completedClues[i] = Integer.parseInt(cc.get(i).toString());
+		}
+
+		if(data.containsKey("trail")){
+			JSONObject trail = (JSONObject) data.get("trail");
+			clueId = Integer.parseInt(trail.get("clueId").toString());
+			trailLength = Integer.parseInt(trail.get("length").toString());
+			trailStage = Integer.parseInt(trail.get("stage").toString());
+		}
+	}
+
 	@Override
 	public void parse(ByteBuffer buffer) {
 		int opcode;
Index: Server/src/main/java/Server/plugin/ai/pvmbots/CombatBotAssembler.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.ai.pvmbots\r\n\r\nimport core.game.node.item.Item\r\nimport core.game.world.map.Location\r\nimport core.tools.ItemNames\r\nimport core.tools.RandomFunction\r\nimport plugin.ai.AIPlayer\r\nimport plugin.skill.Skills\r\n\r\nclass CombatBotAssembler {\r\n    enum class Type{\r\n        RANGE,\r\n        MAGE,\r\n        MELEE\r\n    }\r\n    enum class Tier{\r\n        LOW,\r\n        MED,\r\n        HIGH\r\n    }\r\n        fun produce(type: Type, tier: Tier, location: Location): AIPlayer? {\r\n            return when (type) {\r\n                Type.RANGE -> assembleRangedBot(tier, location)\r\n                Type.MELEE -> assembleMeleeBot(tier,location)\r\n                Type.MAGE -> assembleMeleeBot(tier,location)\r\n            }\r\n        }\r\n\r\n        fun assembleRangedBot(tier: Tier, location: Location): CombatBot {\r\n            val bot = CombatBot(location)\r\n\r\n            generateStats(bot, tier, Skills.RANGE, Skills.DEFENCE)\r\n            gearRangedBot(bot)\r\n            return bot\r\n        }\r\n\r\n        fun assembleMeleeBot(tier: Tier, location: Location): CombatBot {\r\n            val bot = CombatBot(location)\r\n\r\n            generateStats(bot, tier, Skills.ATTACK, Skills.STRENGTH, Skills.DEFENCE)\r\n            gearMeleeBot(bot)\r\n            return bot\r\n        }\r\n\r\n        fun gearRangedBot(bot: AIPlayer) {\r\n            equipHighest(bot, RANGE_HELMS)\r\n            equipHighest(bot, RANGE_TOPS)\r\n            equipHighest(bot, RANGE_LEGS)\r\n            equipHighest(bot, BOWS)\r\n            bot.equipment.add(Item(ItemNames.BRONZE_ARROW,Integer.MAX_VALUE),13,false,false)\r\n            bot.equipment.refresh()\r\n        }\r\n\r\n        fun gearMeleeBot(bot: AIPlayer){\r\n            equipHighest(bot, MELEE_HELMS)\r\n            equipHighest(bot, MELEE_LEG)\r\n            equipHighest(bot, MELEE_SHIELD)\r\n            equipHighest(bot, MELEE_TOP)\r\n            equipHighest(bot, MELEE_WEP)\r\n            bot.equipment.refresh()\r\n        }\r\n\r\n        fun gearRichMeleeBot(bot: AIPlayer){\r\n            equipHighest(bot, MELEE_HELMS)\r\n            bot.equipment.refresh()\r\n        }\r\n\r\n\r\n        fun generateStats(bot: AIPlayer, tier: Tier, vararg skills: Int) {\r\n            var totalXPAdd = 0.0\r\n            var skillAmt = 0.0\r\n            val variance = 0.50\r\n            var max = 0\r\n            val initial = when (tier) {\r\n                Tier.LOW -> RandomFunction.random(33).also { max = 33 }\r\n                Tier.MED -> RandomFunction.random(33, 66).also { max = 66 }\r\n                Tier.HIGH -> RandomFunction.random(66, 99).also { max = 99 }\r\n            }\r\n            for (skill in skills.indices) {\r\n                val perc = RandomFunction.random(-variance,variance)\r\n                var level = initial +  (perc * 33).toInt()\r\n                if(level < 1)\r\n                    level = 1\r\n                if(level > max)\r\n                    level = max\r\n                bot.skills.setLevel(skills[skill], level).also { totalXPAdd += bot.skills.getExperience(skills[skill]) }\r\n                bot.skills.setStaticLevel(skills[skill], level)\r\n                skillAmt++\r\n            }\r\n            bot.skills.addExperience(Skills.HITPOINTS, (totalXPAdd / skillAmt) * 0.2)\r\n            bot.skills.updateCombatLevel()\r\n            bot.fullRestore()\r\n        }\r\n\r\n        private fun equipHighest(bot: AIPlayer, set: Array<Int>) {\r\n            val highestItems = ArrayList<Item>()\r\n            var highest: Item? = null\r\n            for (i in set.indices) {\r\n                val item = Item(set[i])\r\n                var canEquip = true\r\n                (item.definition.configurations.getOrDefault(\"requirements\",null) as HashMap<Int,Int>?)?.let { map ->\r\n                    map.map {\r\n                        if (bot.skills.getLevel(it.key) < it.value)\r\n                            canEquip = false\r\n                    }\r\n                }\r\n                if (canEquip) {\r\n                    if (highest == null) {\r\n                        highest = item\r\n                        highestItems.add(item)\r\n                        continue\r\n                    }\r\n                    if (item.lvlAvg() > highest.lvlAvg()) {\r\n                        highest = item\r\n                        highestItems.clear()\r\n                        highestItems.add(item)\r\n                    } else if(item.lvlAvg() == highest.lvlAvg()){\r\n                        highestItems.add(item)\r\n                    }\r\n                }\r\n            }\r\n            bot.equipment.add(highestItems.random(), highest!!.definition!!.configurations[\"equipment_slot\"] as Int, false, false)\r\n        }\r\n\r\n        fun Item.lvlAvg(): Int {\r\n            var total = 1\r\n            var count = 1\r\n            (definition.configurations.getOrDefault(\"requirements\",null) as HashMap<Int,Int>?)?.let { map ->\r\n                map.map {\r\n                    total += it.value\r\n                    count++\r\n                }\r\n            }\r\n            return total / count\r\n        }\r\n\r\n\r\n        val RANGE_HELMS = arrayOf(1167, 4732, 12936)\r\n        val RANGE_TOPS = arrayOf(1129, 1131)\r\n        val RANGE_LEGS = arrayOf(1095, 1097, 1099)\r\n        val BOWS = arrayOf(841, 843, 847, 853)\r\n\r\n        val MELEE_HELMS = arrayOf(1137,1139, 1141, 6621, 1143,1145,1147,1149,1151,1153, 6623, 1159,1163,1165,3748, 3751, 10828, 11335, 3753, 4716,4724, 4745, 4753)\r\n        val MELEE_TOP = arrayOf(1101,1103,1105,1107,1109,1111,1113,2513,1115,1117,1119,1121,1123,1125,1127,4720,4728)\r\n        val MELEE_LEG = arrayOf(1081,1083,1085,1087,1089,1091,1093,4759,1067,1069,1071,1073,1075,1077,1079,4722,4751)\r\n        val MELEE_SHIELD = arrayOf(1171,1173,1175,1177,1179,1181,1183,1185,1187,1189,1191,1193,1195,1197,1199,1201)\r\n        val MELEE_WEP = arrayOf(1277,1279,1281,1283,1285,1287,1289,1291,1293,1295,1297,1299,1301,1303,1305,1321,1323,1325,1327,1329,1331,1333,4587,4151,1363,1365,1367,1369,1371,1373,1375,1377)\r\n\r\n        val RICH_MELEE_HELMS = arrayOf(2587, 2595, 2605, 2613, 2619, 2627, 2657, 2665, 2673, 3486, 10350)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/ai/pvmbots/CombatBotAssembler.kt	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/ai/pvmbots/CombatBotAssembler.kt	(date 1597089529798)
@@ -7,6 +7,10 @@
 import plugin.ai.AIPlayer
 import plugin.skill.Skills
 
+/**
+ * Produces combat bots
+ * @author Ceikry
+ */
 class CombatBotAssembler {
     enum class Type{
         RANGE,
Index: Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerParser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.info.login;\r\n\r\nimport core.ServerConstants;\r\nimport core.game.node.entity.combat.CombatSpell;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.link.SpellBookManager;\r\nimport core.game.node.entity.player.link.emote.Emotes;\r\nimport core.game.world.map.Location;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.io.RandomAccessFile;\r\nimport java.nio.ByteBuffer;\r\nimport java.nio.channels.FileChannel;\r\nimport java.nio.channels.FileChannel.MapMode;\r\nimport java.util.Arrays;\r\n\r\n/**\r\n * Handles the parsing and dumping of a player's character file.\r\n * @author Emperor\r\n */\r\npublic final class PlayerParser {\r\n\r\n\t/**\r\n\t * Parses a player's character file.\r\n\t * @param player The player.\r\n\t */\r\n\t@SuppressWarnings(\"deprecation\")\r\n\tpublic static void parse(Player player) {\r\n\t\tplayer.getGameAttributes().parse(player.getName() + \".xml\");\r\n\t\tfinal File file = new File((ServerConstants.PLAYER_SAVE_PATH + player.getName() + \".save\"));\r\n\r\n\r\n\t\tif (!file.exists()) {\r\n\t\t\tdump(player);\r\n\t\t}\r\n\t\ttry (RandomAccessFile raf = new RandomAccessFile(file, \"r\"); FileChannel channel = raf.getChannel()) {\r\n\t\t\tByteBuffer buffer = channel.map(MapMode.READ_ONLY, 0, channel.size());\r\n\t\t\tint opcode;\r\n\t\t\tlong networth = 0;\r\n\t\t\tint[] opcodeLog = new int[5];\r\n\t\t\twhile ((opcode = buffer.get() & 0xFF) != 0) {\r\n\t\t\t\tswitch (opcode) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tplayer.setLocation(Location.create(buffer.getShort() & 0xFFFF, buffer.getShort() & 0xFFFF, buffer.get() & 0xF));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnetworth += player.getInventory().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tnetworth += player.getEquipment().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tnetworth += player.getBank().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\tplayer.getSkills().parse(buffer);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\tplayer.getSettings().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 7://old emotes\r\n\t\t\t\t\t\tint op;\r\n\t\t\t\t\t\twhile ((op = buffer.get() & 0xFF) != 0) {\r\n\t\t\t\t\t\t\tswitch (op) {\r\n\t\t\t\t\t\t\t\tdefault: // Opcodes 22-40 are used for locked emotes.\r\n\t\t\t\t\t\t\t\t\tplayer.getEmoteManager().unlock(Emotes.values()[op]);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 10:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 14:\r\n\t\t\t\t\t\tplayer.getSlayer().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 17:\r\n\t\t\t\t\t\tplayer.getQuestRepository().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 21:\r\n\t\t\t\t\t\tplayer.getAppearance().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 23:\r\n\t\t\t\t\t\tplayer.getGraveManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 25:\r\n\t\t\t\t\t\tplayer.getSpellBookManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 26:\r\n\t\t\t\t\t\tplayer.getGrandExchange().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\tplayer.getSavedData().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 28:\r\n\t\t\t\t\t\tplayer.getDetails().getCommunication().parsePrevious(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 29:\r\n\t\t\t\t\t\tint spellBook = buffer.get();\r\n\t\t\t\t\t\tint spellId = buffer.get() & 0xFF;\r\n\t\t\t\t\t\tplayer.getProperties().setAutocastSpell((CombatSpell) SpellBookManager.SpellBook.values()[spellBook].getSpell(spellId));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 30:\r\n\t\t\t\t\t\tplayer.getFarmingManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 31:\r\n\t\t\t\t\t\tplayer.getConfigManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\tplayer.getWarningMessages().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 33:\r\n\t\t\t\t\t\tplayer.getMonitor().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 34:\r\n\t\t\t\t\t\tplayer.getMusicPlayer().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 35:\r\n\t\t\t\t\t\tplayer.getFamiliarManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 36:\r\n\t\t\t\t\t\tplayer.getBarcrawlManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\tplayer.getStateManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\tplayer.getAntiMacroHandler().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\tplayer.getTreasureTrailManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\tplayer.getBankPinManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 41:\r\n\t\t\t\t\t\tplayer.getHouseManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 42:\r\n\t\t\t\t\t\tplayer.getAchievementDiaryManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 43:\r\n\t\t\t\t\t\tplayer.getIronmanManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 44:\r\n\t\t\t\t\t\tplayer.getEmoteManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 45:\r\n\t\t\t\t\t\tplayer.getSkills().setCombatMilestone(buffer.get() & 0xFF);\r\n\t\t\t\t\t\tplayer.getSkills().setSkillMilestone(buffer.get() & 0xFF);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 46:\r\n\t\t\t\t\t\tplayer.getSkills().parseExpRate(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 47:\r\n\t\t\t\t\t\tplayer.getStatisticsManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 48:\r\n\t\t\t\t\t\tplayer.getBrawlingGlovesManager().parse(buffer);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tSystem.err.println(\"[Player parsing] Unhandled opcode: \" + opcode + \" for \" + player.getName() + \" - [log=\" + Arrays.toString(opcodeLog) + \"].\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tfor (int i = opcodeLog.length - 2; i >= 0; i--) {\r\n\t\t\t\t\topcodeLog[i + 1] = opcodeLog[i];\r\n\t\t\t\t}\r\n\t\t\t\topcodeLog[0] = opcode;\r\n\t\t\t}\r\n\t\t\tplayer.getMonitor().setNetworth(networth);\r\n\t\t\traf.close();\r\n\t\t\tchannel.close();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\tplayer.setAttribute(\"protect_data\", true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dumps the player's details to the character file.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic static void dump(Player player) {\r\n\t\tdump(player, \"data/\");\r\n\t}\r\n\r\n\t/**\r\n\t * Dumps the player's details to the character file.\r\n\t * @param player The player.\r\n\t * @param directory The saving directory.\r\n\t */\r\n\tpublic static void dump(Player player, String directory) {\r\n\t\tif (player.getAttribute(\"protect_data\", false)) {\r\n\t\t\tSystem.err.println(\"Saving player \" + player.getName() + \" not allowed - data is corrupt due to exception in parsing!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tByteBuffer buffer = ByteBuffer.allocate(4096 << 2);\r\n\t\tlong networth = 0;\r\n\t\t// Location\r\n\t\tbuffer.put((byte) 1).putShort((short) player.getLocation().getX()).putShort((short) player.getLocation().getY()).put((byte) player.getLocation().getZ());\r\n\r\n\t\t// Inventory\r\n\t\tif (!player.getInventory().isEmpty()) {\r\n\t\t\tnetworth += player.getInventory().save(buffer.put((byte) 2));\r\n\t\t}\r\n\t\t// Equipment\r\n\t\tif (!player.getEquipment().isEmpty()) {\r\n\t\t\tnetworth += player.getEquipment().save(buffer.put((byte) 3));\r\n\t\t}\r\n\t\t// Bank\r\n\t\tif (!player.getBank().isEmpty()) {\r\n\t\t\tnetworth += player.getBank().save(buffer.put((byte) 4));\r\n\t\t}\r\n\t\t// Skills\r\n\t\tplayer.getSkills().save(buffer.put((byte) 5));\r\n\r\n\t\t// Settings\r\n\t\tplayer.getSettings().save(buffer.put((byte) 6));\r\n\r\n\t\t// Attributes\r\n\t\tplayer.getGameAttributes().dump(player.getName() + \".xml\");\r\n\r\n\t\t// Slayer\r\n\t\tplayer.getSlayer().save(buffer.put((byte) 14));\r\n\r\n\t\t// Quests\r\n\t\tplayer.getQuestRepository().save(buffer.put((byte) 17));\r\n\r\n\t\t// Appearance\r\n\t\tplayer.getAppearance().save(buffer.put((byte) 21));\r\n\r\n\t\t// Gravestones\r\n\t\tplayer.getGraveManager().save(buffer.put((byte) 23));\r\n\r\n\t\t// Spellbook\r\n\t\tif (player.getSpellBookManager().getSpellBook() != 192) {\r\n\t\t\tplayer.getSpellBookManager().save(buffer.put((byte) 25));\r\n\t\t}\r\n\t\t// Grand exchange\r\n\t\tif (player.getGrandExchange().hasActiveOffer()) {\r\n\t\t\tplayer.getGrandExchange().save(buffer.put((byte) 26));\r\n\t\t}\r\n\t\t// Activity\r\n\t\tplayer.getSavedData().save(buffer.put((byte) 27));\r\n\r\n\t\t// 28 was used for communication!\r\n\r\n\t\t// Autocasting\r\n\t\tif (player.getProperties().getAutocastSpell() != null) {\r\n\t\t\tCombatSpell spell = player.getProperties().getAutocastSpell();\r\n\t\t\tbuffer.put((byte) 29).put((byte) spell.getBook().ordinal()).put((byte) spell.getSpellId());\r\n\t\t}\r\n\t\t// Farming\r\n\t\tplayer.getFarmingManager().save(buffer.put((byte) 30));\r\n\r\n\t\t// Configurations\r\n\t\tplayer.getConfigManager().save(buffer.put((byte) 31));\r\n\r\n\t\t// Warning messages\r\n\t\tplayer.getWarningMessages().save(buffer.put((byte) 32));\r\n\r\n\t\t// Player monitor data\r\n\t\tplayer.getMonitor().checkNetworth(player, networth);\r\n\t\tplayer.getMonitor().save(buffer.put((byte) 33));\r\n\r\n\t\t// Music\r\n\t\tplayer.getMusicPlayer().save(buffer.put((byte) 34));\r\n\r\n\t\t// Familiar/pet data\r\n\t\tplayer.getFamiliarManager().save(buffer.put((byte) 35));\r\n\r\n\t\t// Barcrawl miniquest.\r\n\t\tplayer.getBarcrawlManager().save(buffer.put((byte) 36));\r\n\r\n\t\t// States (poison/skull/...)\r\n\t\tif (player.getStateManager().isSaveRequired()) {\r\n\t\t\tplayer.getStateManager().save(buffer.put((byte) 37));\r\n\t\t}\r\n\r\n\t\t// Anti-macro event saving.\r\n\t\tif (player.getAntiMacroHandler().isSaveRequired()) {\r\n\t\t\tplayer.getAntiMacroHandler().save(buffer.put((byte) 38));\r\n\t\t}\r\n\r\n\t\t// Treasure trail saving\r\n\t\tplayer.getTreasureTrailManager().save(buffer.put((byte) 39));\r\n\r\n\t\t// Bank pin\r\n\t\tplayer.getBankPinManager().save(buffer.put((byte) 40));\r\n\r\n\t\t// Construction saving.\r\n\t\tif (player.getHouseManager().hasHouse()) {\r\n\t\t\tplayer.getHouseManager().save(buffer.put((byte) 41));\r\n\t\t}\r\n\r\n\t\t// Achievement Diary\r\n\t\tplayer.getAchievementDiaryManager().save(buffer.put((byte) 42));\r\n\r\n\t\t// Ironman Manager\r\n\t\tplayer.getIronmanManager().save(buffer.put((byte) 43));\r\n\r\n\t\t//Emotes\r\n\t\tif (player.getEmoteManager().isSaveRequired()) {\r\n\t\t\tplayer.getEmoteManager().save(buffer.put((byte) 44));\r\n\t\t}\r\n\r\n\t\t//Milestones\r\n\t\tif (player.getSkills().getCombatMilestone() > 0 || player.getSkills().getSkillMilestone() > 0) {\r\n\t\t\tbuffer.put((byte) 45).put((byte) player.getSkills().getCombatMilestone()).put((byte) player.getSkills().getSkillMilestone());\r\n\t\t}\r\n\r\n\t\t//xp rate\r\n\t\tplayer.getSkills().saveExpRate(buffer.put((byte) 46));\r\n\r\n\t\t//stat manager\r\n\t\tplayer.getStatisticsManager().save(buffer.put((byte)47));\r\n\r\n\t\t//Brawling Gloves manager\r\n\t\tplayer.getBrawlingGlovesManager().save(buffer.put((byte)48));\r\n\r\n\t\tbuffer.put((byte) 0); // EOF opcode\r\n\t\tbuffer.flip();\r\n\t\tFile file = new File(directory + \"players/\" + player.getName() + \".save\");\r\n\t\ttry (RandomAccessFile raf = new RandomAccessFile(file, \"rw\"); FileChannel channel = raf.getChannel()) {\r\n\t\t\tchannel.write(buffer);\r\n\t\t\traf.close();\r\n\t\t\tchannel.close();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerParser.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/info/login/PlayerParser.java	(date 1597089529749)
@@ -5,35 +5,45 @@
 import core.game.node.entity.player.Player;
 import core.game.node.entity.player.link.SpellBookManager;
 import core.game.node.entity.player.link.emote.Emotes;
+import core.game.system.SystemLogger;
 import core.game.world.map.Location;
 
-import java.io.File;
-import java.io.IOException;
-import java.io.RandomAccessFile;
+import java.io.*;
 import java.nio.ByteBuffer;
 import java.nio.channels.FileChannel;
 import java.nio.channels.FileChannel.MapMode;
 import java.util.Arrays;
 
 /**
- * Handles the parsing and dumping of a player's character file.
- * @author Emperor
+ * Class used to abstract the process of loading a player save.
+ * @author Ceikry
  */
 public final class PlayerParser {
-
 	/**
-	 * Parses a player's character file.
+	 * Parses or creates the player's save file depending on whether or not it exists.
 	 * @param player The player.
 	 */
-	@SuppressWarnings("deprecation")
 	public static void parse(Player player) {
-		player.getGameAttributes().parse(player.getName() + ".xml");
-		final File file = new File((ServerConstants.PLAYER_SAVE_PATH + player.getName() + ".save"));
+		player.getGameAttributes().parse(player.getName() + ".xml"); //TODO: Re-merge the attributes back into the player save now that it's non-binary.
+		File JSON = new File(ServerConstants.PLAYER_SAVE_PATH + player.getName() + ".json");
+		File BIN = new File(ServerConstants.PLAYER_SAVE_PATH + player.getName() + ".save"); //for backwards compatibility.
 
+		if(JSON.exists()) { //parse the new JSON type.
+			new PlayerSaveParser(player).parse();
+		} else if (BIN.exists()){ //parse the old BINARY type.
+			parseBinary(BIN,player);
+		} else { //Create new save
+			makeFromTemplate(player);
+		}
+	}
 
-		if (!file.exists()) {
-			dump(player);
-		}
+	/**
+	 * Parses the old binary format for the sake of backwards compatibility with old saves.
+	 * @author Emperor (legacy) (legacy)
+	 * @param file the binary file to be parsed.
+	 * @param player the player we are parsing the file for.
+	 */
+	public static void parseBinary(File file, Player player){
 		try (RandomAccessFile raf = new RandomAccessFile(file, "r"); FileChannel channel = raf.getChannel()) {
 			ByteBuffer buffer = channel.map(MapMode.READ_ONLY, 0, channel.size());
 			int opcode;
@@ -63,11 +73,8 @@
 					case 7://old emotes
 						int op;
 						while ((op = buffer.get() & 0xFF) != 0) {
-							switch (op) {
-								default: // Opcodes 22-40 are used for locked emotes.
-									player.getEmoteManager().unlock(Emotes.values()[op]);
-									break;
-							}
+							// Opcodes 22-40 are used for locked emotes.
+							player.getEmoteManager().unlock(Emotes.values()[op]);
 						}
 						break;
 					case 10:
@@ -163,171 +170,49 @@
 						System.err.println("[Player parsing] Unhandled opcode: " + opcode + " for " + player.getName() + " - [log=" + Arrays.toString(opcodeLog) + "].");
 						break;
 				}
-				for (int i = opcodeLog.length - 2; i >= 0; i--) {
-					opcodeLog[i + 1] = opcodeLog[i];
-				}
+				System.arraycopy(opcodeLog, 0, opcodeLog, 1, opcodeLog.length - 2 + 1);
 				opcodeLog[0] = opcode;
 			}
 			player.getMonitor().setNetworth(networth);
-			raf.close();
-			channel.close();
-		} catch (IOException e) {
-			e.printStackTrace();
+		} catch (IOException f) {
+			f.printStackTrace();
 			player.setAttribute("protect_data", true);
 		}
 	}
 
 	/**
-	 * Dumps the player's details to the character file.
+	 * Saves the player's details to the character file at data/players/player_name.json
 	 * @param player The player.
 	 */
-	public static void dump(Player player) {
-		dump(player, "data/");
+	public static void save(Player player) {
+		new PlayerSaver(player).save();
 	}
 
 	/**
-	 * Dumps the player's details to the character file.
-	 * @param player The player.
-	 * @param directory The saving directory.
+	 * Copies the template at data/players/template/template.json to data/players/player_name.json
+	 * @param player the player to copy the template for.
 	 */
-	public static void dump(Player player, String directory) {
-		if (player.getAttribute("protect_data", false)) {
-			System.err.println("Saving player " + player.getName() + " not allowed - data is corrupt due to exception in parsing!");
-			return;
-		}
-		ByteBuffer buffer = ByteBuffer.allocate(4096 << 2);
-		long networth = 0;
-		// Location
-		buffer.put((byte) 1).putShort((short) player.getLocation().getX()).putShort((short) player.getLocation().getY()).put((byte) player.getLocation().getZ());
-
-		// Inventory
-		if (!player.getInventory().isEmpty()) {
-			networth += player.getInventory().save(buffer.put((byte) 2));
-		}
-		// Equipment
-		if (!player.getEquipment().isEmpty()) {
-			networth += player.getEquipment().save(buffer.put((byte) 3));
+	public static void makeFromTemplate(Player player){
+		InputStream is = null;
+		OutputStream os = null;
+		try {
+			is = new FileInputStream("data/players/template/template.json");
+			os = new FileOutputStream("data/players/" + player.getName() + ".json");
+			byte[] buffer = new byte[1024];
+			int length;
+			while ((length = is.read(buffer)) > 0) {
+				os.write(buffer, 0, length);
+			}
+		} catch (Exception ignored){
+		} finally {
+			try {
+				assert is != null;
+				is.close();
+				assert os != null;
+				os.close();
+			} catch (Exception f){
+				SystemLogger.log("Unable to close file copiers.");
+			}
 		}
-		// Bank
-		if (!player.getBank().isEmpty()) {
-			networth += player.getBank().save(buffer.put((byte) 4));
-		}
-		// Skills
-		player.getSkills().save(buffer.put((byte) 5));
-
-		// Settings
-		player.getSettings().save(buffer.put((byte) 6));
-
-		// Attributes
-		player.getGameAttributes().dump(player.getName() + ".xml");
-
-		// Slayer
-		player.getSlayer().save(buffer.put((byte) 14));
-
-		// Quests
-		player.getQuestRepository().save(buffer.put((byte) 17));
-
-		// Appearance
-		player.getAppearance().save(buffer.put((byte) 21));
-
-		// Gravestones
-		player.getGraveManager().save(buffer.put((byte) 23));
-
-		// Spellbook
-		if (player.getSpellBookManager().getSpellBook() != 192) {
-			player.getSpellBookManager().save(buffer.put((byte) 25));
-		}
-		// Grand exchange
-		if (player.getGrandExchange().hasActiveOffer()) {
-			player.getGrandExchange().save(buffer.put((byte) 26));
-		}
-		// Activity
-		player.getSavedData().save(buffer.put((byte) 27));
-
-		// 28 was used for communication!
-
-		// Autocasting
-		if (player.getProperties().getAutocastSpell() != null) {
-			CombatSpell spell = player.getProperties().getAutocastSpell();
-			buffer.put((byte) 29).put((byte) spell.getBook().ordinal()).put((byte) spell.getSpellId());
-		}
-		// Farming
-		player.getFarmingManager().save(buffer.put((byte) 30));
-
-		// Configurations
-		player.getConfigManager().save(buffer.put((byte) 31));
-
-		// Warning messages
-		player.getWarningMessages().save(buffer.put((byte) 32));
-
-		// Player monitor data
-		player.getMonitor().checkNetworth(player, networth);
-		player.getMonitor().save(buffer.put((byte) 33));
-
-		// Music
-		player.getMusicPlayer().save(buffer.put((byte) 34));
-
-		// Familiar/pet data
-		player.getFamiliarManager().save(buffer.put((byte) 35));
-
-		// Barcrawl miniquest.
-		player.getBarcrawlManager().save(buffer.put((byte) 36));
-
-		// States (poison/skull/...)
-		if (player.getStateManager().isSaveRequired()) {
-			player.getStateManager().save(buffer.put((byte) 37));
-		}
-
-		// Anti-macro event saving.
-		if (player.getAntiMacroHandler().isSaveRequired()) {
-			player.getAntiMacroHandler().save(buffer.put((byte) 38));
-		}
-
-		// Treasure trail saving
-		player.getTreasureTrailManager().save(buffer.put((byte) 39));
-
-		// Bank pin
-		player.getBankPinManager().save(buffer.put((byte) 40));
-
-		// Construction saving.
-		if (player.getHouseManager().hasHouse()) {
-			player.getHouseManager().save(buffer.put((byte) 41));
-		}
-
-		// Achievement Diary
-		player.getAchievementDiaryManager().save(buffer.put((byte) 42));
-
-		// Ironman Manager
-		player.getIronmanManager().save(buffer.put((byte) 43));
-
-		//Emotes
-		if (player.getEmoteManager().isSaveRequired()) {
-			player.getEmoteManager().save(buffer.put((byte) 44));
-		}
-
-		//Milestones
-		if (player.getSkills().getCombatMilestone() > 0 || player.getSkills().getSkillMilestone() > 0) {
-			buffer.put((byte) 45).put((byte) player.getSkills().getCombatMilestone()).put((byte) player.getSkills().getSkillMilestone());
-		}
-
-		//xp rate
-		player.getSkills().saveExpRate(buffer.put((byte) 46));
-
-		//stat manager
-		player.getStatisticsManager().save(buffer.put((byte)47));
-
-		//Brawling Gloves manager
-		player.getBrawlingGlovesManager().save(buffer.put((byte)48));
-
-		buffer.put((byte) 0); // EOF opcode
-		buffer.flip();
-		File file = new File(directory + "players/" + player.getName() + ".save");
-		try (RandomAccessFile raf = new RandomAccessFile(file, "rw"); FileChannel channel = raf.getChannel()) {
-			channel.write(buffer);
-			raf.close();
-			channel.close();
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
 	}
 }
\ No newline at end of file
Index: Server/src/main/java/Server/core/game/node/entity/state/StateManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.state;\r\n\r\nimport core.game.node.entity.Entity;\r\nimport core.game.node.entity.player.info.login.SavingModule;\r\n\r\nimport java.nio.ByteBuffer;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * Handles an entity's status (eg. poisoned, stunned, frozen, skulled, ...)\r\n * @author Emperor\r\n */\r\npublic final class StateManager implements SavingModule {\r\n\r\n\t/**\r\n\t * The entity.\r\n\t */\r\n\tprivate final Entity entity;\r\n\r\n\t/**\r\n\t * The entity's current states.\r\n\t */\r\n\tprivate final Map<EntityState, StatePulse> states = new HashMap<>();\r\n\r\n\t/**\r\n\t * Constructs a new {@code StateManager} {@code Object}.\r\n\t * @param entity The entity.\r\n\t */\r\n\tpublic StateManager(Entity entity) {\r\n\t\tthis.entity = entity;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tfor (EntityState state : states.keySet()) {\r\n\t\t\tStatePulse pulse = states.get(state);\r\n\t\t\tif (pulse == null) {\r\n\t\t\t\tSystem.out.println(\"Pulse for state \" + state + \" is null!\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (pulse.isSaveRequired()) {\r\n\t\t\t\tbuffer.put((byte) state.ordinal());\r\n\t\t\t\tpulse.save(buffer);\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuffer.put((byte) -1);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint ordinal = 0;\r\n\t\twhile ((ordinal = buffer.get()) != -1) {\r\n\t\t\tEntityState state = EntityState.values()[ordinal];\r\n\t\t\tStatePulse pulse = state.getPulse().parse(entity, buffer);\r\n\t\t\tif (pulse == null) {\r\n\t\t\t\tSystem.out.println(\"Pulse for state \" + state + \" is null!\");\r\n\t\t\t}\r\n\t\t\tstates.put(state, pulse);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the pulses.\r\n\t */\r\n\tpublic void init() {\r\n\t\tfor (StatePulse pulse : states.values()) {\r\n\t\t\tpulse.run();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a save is required.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isSaveRequired() {\r\n\t\treturn !states.isEmpty();\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a state.\r\n\t * @param state The state.\r\n\t * @param args The arguments.\r\n\t */\r\n\tpublic void set(EntityState state, Object... args) {\r\n\t\tregister(state, true, args);\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a state.\r\n\t * @param state The state.\r\n\t * @param override If the previous pulse (if any) should be overriden.\r\n\t * @param args The arguments.\r\n\t */\r\n\tpublic void register(EntityState state, boolean override, Object... args) {\r\n\t\tif (!state.getPulse().canRun(entity)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tStatePulse pulse = states.get(state);\r\n\t\tif (pulse != null) {\r\n\t\t\tif (!override) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tpulse.stop();\r\n\t\t}\r\n\t\tpulse = state.getPulse().create(entity, args);\r\n\t\tpulse.run();\r\n\t\tstates.put(state, pulse);\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all the states.\r\n\t */\r\n\tpublic void reset() {\r\n\t\tfor (StatePulse pulse : states.values()) {\r\n\t\t\tif (pulse.isRunning()) {\r\n\t\t\t\tpulse.remove();\r\n\t\t\t\tpulse.stop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tstates.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the state pulse.\r\n\t * @param state The state.\r\n\t */\r\n\tpublic void remove(EntityState state) {\r\n\t\tStatePulse pulse = states.get(state);\r\n\t\tif (pulse != null && pulse.isRunning()) {\r\n\t\t\tpulse.remove();\r\n\t\t\tpulse.stop();\r\n\t\t}\r\n\t\tstates.remove(state);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the entity has a pulse running for the given state.\r\n\t * @param state The state.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean hasState(EntityState state) {\r\n\t\tStatePulse pulse = states.get(state);\r\n\t\treturn pulse != null && pulse.isRunning();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the pulse for the given state.\r\n\t * @param state The state to get the pulse for.\r\n\t * @return The state pulse.\r\n\t */\r\n\tpublic StatePulse get(EntityState state) {\r\n\t\treturn states.get(state);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the entity.\r\n\t * @return The entity.\r\n\t */\r\n\tpublic Entity getEntity() {\r\n\t\treturn entity;\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/state/StateManager.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/state/StateManager.java	(date 1597089529786)
@@ -160,4 +160,8 @@
 	public Entity getEntity() {
 		return entity;
 	}
+
+	public Map<EntityState, StatePulse> getStates() {
+		return states;
+	}
 }
\ No newline at end of file
Index: Server/src/main/java/Server/plugin/command/DeveloperCommandPlugin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package plugin.command;\r\n\r\nimport core.ServerConstants;\r\nimport core.cache.Cache;\r\nimport core.cache.def.impl.ItemDefinition;\r\nimport core.cache.def.impl.NPCDefinition;\r\nimport core.game.container.Container;\r\nimport core.game.container.impl.EquipmentContainer;\r\nimport core.game.content.eco.EconomyManagement;\r\nimport core.game.content.global.shop.Shop;\r\nimport core.game.content.holiday.HolidayItem;\r\nimport core.game.content.holiday.ItemLimitation;\r\nimport core.game.node.entity.combat.ImpactHandler.HitsplatType;\r\nimport core.game.node.entity.npc.NPC;\r\nimport core.game.node.entity.npc.drop.DropTables;\r\nimport core.game.node.entity.npc.drop.RareDropTable;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.entity.player.info.PlayerDetails;\r\nimport core.game.node.entity.player.info.login.PlayerParser;\r\nimport core.game.node.entity.player.link.IronmanMode;\r\nimport core.game.node.entity.player.link.music.MusicEntry;\r\nimport core.game.node.entity.player.link.quest.Quest;\r\nimport core.game.node.entity.player.link.skillertasks.Difficulty;\r\nimport core.game.node.entity.state.EntityState;\r\nimport core.game.node.item.Item;\r\nimport core.game.node.object.GameObject;\r\nimport core.game.system.command.CommandPlugin;\r\nimport core.game.system.command.CommandSet;\r\nimport core.game.system.mysql.SQLManager;\r\nimport core.game.system.script.ScriptManager;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.game.world.map.Location;\r\nimport core.game.world.map.RegionManager;\r\nimport core.game.world.map.RegionPlane;\r\nimport core.game.world.map.path.Pathfinder;\r\nimport core.game.world.map.zone.RegionZone;\r\nimport core.game.world.repository.Repository;\r\nimport core.game.world.update.flag.context.Animation;\r\nimport core.game.world.update.flag.context.Graphics;\r\nimport core.plugin.InitializablePlugin;\r\nimport core.plugin.Plugin;\r\nimport core.plugin.PluginManager;\r\nimport core.tools.ItemNames;\r\nimport core.tools.RandomFunction;\r\nimport core.tools.StringUtils;\r\nimport plugin.ai.resource.ResourceAIPManager;\r\nimport plugin.skill.Skills;\r\nimport plugin.skill.construction.HouseLocation;\r\nimport plugin.skill.herblore.PotionDecantingPlugin;\r\nimport plugin.skill.smithing.smelting.Bar;\r\nimport plugin.skill.summoning.pet.Pets;\r\nimport plugin.tutorial.TutorialSession;\r\n\r\nimport java.awt.*;\r\nimport java.awt.datatransfer.Clipboard;\r\nimport java.awt.datatransfer.StringSelection;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Map.Entry;\r\nimport java.util.concurrent.Executors;\r\n\r\n/**\r\n * Handles the developer commands.\r\n *\r\n * @author Vexia\r\n */\r\n@InitializablePlugin\r\npublic final class DeveloperCommandPlugin extends CommandPlugin {\r\n\r\n    @Override\r\n    public Plugin<Object> newInstance(Object arg) throws Throwable {\r\n        link(CommandSet.ADMINISTRATOR);\r\n        return this;\r\n    }\r\n\r\n    public static class SpawnSearch extends Shop {\r\n\r\n        public SpawnSearch() {\r\n            super(\"Spawn Search\", false);\r\n        }\r\n\r\n        @Override\r\n        public void open(Player player) {\r\n            super.open(player);\r\n            player.getPacketDispatch().sendInterfaceConfig(620, 29, true);\r\n            player.getPacketDispatch().sendInterfaceConfig(620, 26, true);\r\n        }\r\n\r\n        @Override\r\n        public boolean canSell(Player player, Item item, ItemDefinition def) {\r\n            player.sendMessage(\"You cannot sell items to this store.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    @SuppressWarnings(\"deprecation\")\r\n    @Override\r\n    public boolean parse(final Player player, String name, String[] args) {\r\n        switch (name) {\r\n        \tcase \"unlockmusic\":\r\n        \t\tfor (MusicEntry me : MusicEntry.getSongs().values()) {\r\n        \t\t\tplayer.getMusicPlayer().unlock(me.getId());\r\n        \t\t}\r\n        \t\t\r\n        \tbreak;\r\n        \t\r\n        \tcase \"setlevel\":\r\n        \t\tplayer.getSkills().setLevel(Integer.parseInt(args[1]), Integer.parseInt(args[2]));\r\n        \t\tplayer.getSkills().setStaticLevel(Integer.parseInt(args[1]), Integer.parseInt(args[2]));\r\n        \t\tbreak;\r\n            case \"attr\":\r\n                player.setAttribute(\"/save:test\",true);\r\n                break;\r\n            case \"testattr\":\r\n                if(player.getAttribute(\"test\",false)){\r\n                    player.sendMessage(\"Attribute success\");\r\n                } else {\r\n                    player.sendMessage(\"Attribute failed\" + \" attribute value seen: \" + player.getAttribute(\"test\"));\r\n                }\r\n                break;\r\n            case \"remattr\":\r\n                player.removeAttribute(\"test\");\r\n                break;\r\n        \tcase \"playsong\":\r\n        \t\tplayer.getMusicPlayer().play(MusicEntry.getSongs().get(Integer.parseInt(args[1])));\r\n        \t\tplayer.sendMessage(\"Playing song: \" + MusicEntry.getSongs().get(Integer.parseInt(args[1])).getName());\r\n        \t\tbreak;\r\n            case \"doyellow\":\r\n                player.sendMessage(\"Running quest..\");\r\n                player.getQuestRepository().getQuest(\"What Quest\").finish(player);\r\n                break;\r\n            case \"find\":\r\n                try {\r\n                    player.getAttributes().put(\"spawning_items\", true);\r\n                    String itemName = \"\";\r\n                    for (int i = 1; i < args.length; i++)\r\n                        itemName += args[i] + ((i == args.length - 1) ? \"\" : \" \");\r\n                    int count = 0;\r\n                    player.getAttributes().computeIfAbsent(\"found_items\", k -> new HashMap<Integer, Integer>());\r\n                    player.getAttributes().remove(\"found_items\");\r\n                    Container storeItems = new Container(1200);\r\n                    for (int i = 0; i < ItemDefinition.getDefinitions().size(); i++) {\r\n                        ItemDefinition definition = ItemDefinition.forId(i);\r\n                        itemName = itemName.toLowerCase();\r\n                        String output = definition.getName().toLowerCase();\r\n                        int itemId = definition.getId();\r\n                        if (output.contains(itemName)) {\r\n                            storeItems.add(new Item(itemId, 1));\r\n                            player.getAttributes().put(\"\" + count, itemId);\r\n                            count++;\r\n                        }\r\n                    }\r\n\r\n                    SpawnSearch shop = new SpawnSearch();\r\n                    shop.getContainer(0).copy(storeItems);\r\n                    shop.open(player);\r\n\r\n                } catch (NumberFormatException e) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case \"tut\":\r\n                System.out.println(\"TUT\");\r\n                if (player.getInventory().isEmpty()) {\r\n                    player.getPacketDispatch().sendMessage(\"You have nothing to deposit.\");\r\n                } else {\r\n                    dump(player, player.getInventory());\r\n                }\r\n                if (player.getEquipment().isEmpty()) {\r\n                    player.getPacketDispatch().sendMessage(\"You have nothing to deposit.\");\r\n                } else {\r\n                    dump(player, player.getEquipment());\r\n                }\r\n                TutorialSession.extend(player);\r\n                GameWorld.Pulser.submit(new Pulse(1, player) {\r\n                    @Override\r\n                    public boolean pulse() {\r\n                        TutorialSession.getExtension(player).init();\r\n                        return true;\r\n                    }\r\n                });\r\n                break;\r\n            case \"stask\":\r\n                player.getSkillTasks().getNewTask(player, Difficulty.NOVICE);\r\n                player.sendMessage(\"Your current task is \" + player.getSkillTasks().getCurrentTask().getAssignment() + \".\");\r\n                player.sendMessage(player.getSkillTasks().getCurrentTask().getDescription());\r\n                break;\r\n            case \"taskamount\":\r\n                player.sendMessage(\"You have \" + player.getSkillTasks().getTaskAmount() + \" more to go!\");\r\n                break;\r\n\r\n            case \"poison\":\r\n                player.getStateManager().set(EntityState.POISONED, 200, player);\r\n                player.getConfigManager().set(102, 1);\r\n                player.sendMessage(\"Poisoned...\");\r\n                break;\r\n\r\n            case \"reloaddb\":\r\n                SQLManager.init();\r\n                player.sendMessage(\"[MySQl] The database has been reloaded.\");\r\n                break;\r\n            case \"g\":\r\n                Location l = player.getLocation();\r\n                int xz = l.getX();\r\n                int yz = l.getY();\r\n                int er = Integer.parseInt(args[1]);\r\n                for (int w = 10; w > 0; w--) {\r\n                    Graphics gfx = new Graphics(er + w);\r\n                    Graphics.send(gfx, new Location(xz - (w > 5 ? -(w - 5) : 5 - w), yz));\r\n                }\r\n            case \"v\":\r\n                Map<Integer, ArrayList<NPC>> zz = new HashMap<>();\r\n                for (NPC n : Repository.getNpcs()) {\r\n                    if (n == null) {\r\n                        continue;\r\n                    }\r\n                    if (n.getAttribute(\"spawned:npc\", false) && n.getName().startsWith(\"Kalphite\") && n.getViewport().getRegion().getId() == 14939) {\r\n                        if (!zz.containsKey(n.getId())) {\r\n                            ArrayList<NPC> ooo = new ArrayList<NPC>();\r\n                            ooo.add(n);\r\n                            zz.put(n.getId(), ooo);\r\n                        } else {\r\n                            ArrayList<NPC> nn = zz.get(n.getId());\r\n                            nn.add(n);\r\n                            zz.put(n.getId(), nn);\r\n                        }\r\n                    }\r\n                }\r\n                for (Entry<Integer, ArrayList<NPC>> e : zz.entrySet()) {\r\n                    System.out.println(\"--- npc -> \" + e.getKey() + \"   ----\");\r\n                    List<NPC> bn = e.getValue();\r\n                    String ll = \"\";\r\n                    for (NPC n : bn) {\r\n                        Location hu = n.getProperties().getSpawnLocation();\r\n                        ll += \"{\" + hu.getX() + \",\" + hu.getY() + \",\" + hu.getZ() + \",\" + (n.isWalks() ? \"1\" : \"0\") + \",\" + n.getDirection().toInteger() + \"}-\";\r\n                    }\r\n                    System.out.println(ll);\r\n                }\r\n                break;\r\n            case \"fillbank\":\r\n                for (int zy = 0; zy < 100; zy++) {\r\n                    player.getBank().add(new Item(zy + 2000));\r\n                }\r\n                break;\r\n            case \"chins\":\r\n                player.getInventory().add(new Item(ItemNames.RED_CHINCHOMPA_10034,Integer.MAX_VALUE));\r\n                break;\r\n            case \"shop\":\r\n                int npc = Integer.parseInt(args[1]);\r\n                new NPC(npc).openShop(player);\r\n                break;\r\n            case \"simdrops\":\r\n                Executors.newSingleThreadExecutor().execute(()->{\r\n                    int npc_id = Integer.parseInt(args[1]);\r\n                    int npc_amt = Integer.parseInt(args[2]);\r\n                    player.getDropLog().clear();\r\n                    for(int i = 0; i < npc_amt; i++){\r\n                        DropTables.forId(npc_id).getDrops().forEach(drop -> {\r\n                            if(drop.getId() == RareDropTable.SLOT_ITEM_ID){\r\n                                drop = RareDropTable.retrieve();\r\n                            }\r\n                            if(drop.getId() != 0) {\r\n                                player.getDropLog().add(drop);\r\n                            }\r\n                        });\r\n                    }\r\n                    player.getDropLog().open();\r\n                });\r\n                break;\r\n            case \"anim\":\r\n                player.animate(new Animation(Integer.parseInt(args[1])));\r\n                break;\r\n            case \"em\":\r\n                final int[] y = new int[]{16044, 16045, 16256, 16259, 16260, 16334, 16381, 16556, 16564, 16638, 16642, 16673, 16710, 16713, 16715, 16722, 16796, 16797, 16805, 16831, 16886, 16890, 16926, 16938, 16942};\r\n                GameWorld.Pulser.submit(new Pulse(3) {\r\n                    int anim = 0;\r\n\r\n                    @Override\r\n                    public boolean pulse() {\r\n                        if (anim == (y.length - 1)) {\r\n                            player.sendChat(\"Done\");\r\n                            return true;\r\n                        }\r\n                        player.animate(new Animation(y[anim]));\r\n                        player.sendChat(\"Animation: \" + y[anim]);\r\n                        anim++;\r\n                        return false;\r\n                    }\r\n\r\n                });\r\n                break;\r\n               \r\n            case \"tempsound\":\r\n            \tplayer.getPacketDispatch().sendTempMusic(Integer.parseInt(args[1]));\r\n            \tbreak;\r\n            case \"loopsounds\":\r\n                GameWorld.Pulser.submit(new Pulse(5) {\r\n            \t\tint i = Integer.parseInt(args[2]);\r\n            \t\tint j = Integer.parseInt(args[1]);\r\n            \t\t@Override\r\n            \t\tpublic boolean pulse() {\r\n                \t\tplayer.sendMessage(\"Sound: \" + i);\r\n                \t\tplayer.getPacketDispatch().sendTempMusic(i);\r\n            \t\t\ti++;\r\n            \t\t\tif (i >= j) {\r\n            \t\t\t\treturn true;\r\n            \t\t\t}\r\n            \t\t\treturn false;\r\n            \t\t}\r\n            \t});\r\n            \tbreak;\r\n                \r\n            case \"c\":\r\n                for (Bar bar : Bar.values()) {\r\n                    System.out.println(bar.getProduct().getId() + \",\");\r\n                }\r\n                break;\r\n            /*\tcase \"zulrahzone\":\r\n\t\t\tDynamicRegion y = DynamicRegion.create(9007, 9008);\r\n\t\t\tif (y != null) {\r\n\t\t\t\tLocation l = y.getBaseLocation();\r\n\t\t\t\tint xOffset = 2240 - l.getX();\r\n\t\t\t\tint yOffset = 3008 - l.getY();\r\n\t\t\t\tSystem.out.println(y.getBaseLocation());\r\n\t\t\t\tplayer.teleport(y.getBaseLocation());\r\n\t\t\t\tZulrahPattern.startZulrahSpawn(ZulrahPattern.getPatterns().get(0), player, xOffset, yOffset);\r\n\t\t\t} else {\r\n\t\t\t\tSystem.out.println(\"No zone\");\r\n\t\t\t}\r\n\t\t\tbreak;*/\r\n            case \"damage\":\r\n                player.getImpactHandler().manualHit(player, 5, HitsplatType.VENOM);\r\n                break;\r\n            case \"region\":\r\n                System.out.println(\"You're in region: \" + player.getLocation().getRegionId() + \" \" + player.getLocation().getLocalX() + \" \" + player.getLocation().getLocalY());\r\n                player.getPacketDispatch().sendMessage(\"You're in region: \" + player.getLocation().getRegionId() + \" \" + player.getLocation().getRegionX() + \" \" + player.getLocation().getRegionY());\r\n                break;\r\n            case \"pots\":\r\n                for (int i = 0; i < ItemDefinition.getDefinitions().size(); i++) {\r\n                    if (ItemDefinition.getDefinitions().get(i).getName().contains(\"(1)\")) {\r\n                        System.out.println(ItemDefinition.getDefinitions().get(i).getName());\r\n                    }\r\n                }\r\n                break;\r\n            case \"t\":\r\n\r\n                RegionPlane plane = player.getViewport().getCurrentPlane();\r\n                int replace = 2103;\r\n                System.out.println(\"----------------------\");\r\n                for (GameObject[] o : plane.getObjects()) {\r\n                    if (o == null) {\r\n                        continue;\r\n                    }\r\n                    for (GameObject oo : o) {\r\n                        if (oo == null) {\r\n                            continue;\r\n                        }\r\n                        if (oo.getId() == 42036) {\r\n                            System.out.println(\"{new GameObject(\" + oo.getId() + \",\" + oo.getLocation().getX() + \",\" + oo.getLocation().getY() + \",0,\" + oo.getType() + \",\" + oo.getRotation() + \"),new GameObject(\" + replace + \",\" + oo.getLocation().getX() + \",\" + oo.getLocation().getY() + \",0,\" + oo.getType() + \",\" + oo.getRotation() + \")},\");\r\n                        }\r\n                    }\r\n                }\r\n                System.out.println(\"----------------------\");\r\n                break;\r\n            case \"rp\":\r\n                PluginManager.init();\r\n                player.sendMessage(\"Plugins reloaded\");\r\n                break;\r\n            case \"decant\":\r\n                PotionDecantingPlugin.decant(player);\r\n                break;\r\n            case \"removeiron\":\r\n                Player t = Repository.getPlayer(args[1], true);\r\n                if (t == null) {\r\n                    return true;\r\n                }\r\n                t.getIronmanManager().setMode(IronmanMode.NONE);\r\n                if (t.isActive()) {\r\n                    t.sendMessage(\"Iron man mode removed.\");\r\n                }\r\n                player.sendMessage(\"Removed ironman mode.\");\r\n                PlayerParser.dump(t);\r\n                break;\r\n            case \"holidayitemloc\":\r\n                if (args.length < 1) {\r\n                    player.sendMessage(\"Syntax error - please do ::holidayitemloc itemId\");\r\n                    return true;\r\n                }\r\n                int holidayItemId = Integer.parseInt(args[1]);\r\n                Location itemLoc = HolidayItem.getHolidayItemLocation(holidayItemId);\r\n                player.sendMessage(\"The location of the holiday item is - \" + (itemLoc != null ? itemLoc : \"null\") + \".\");\r\n                return true;\r\n            case \"krakme\":\r\n                player.getFamiliarManager().summon(new Item(14651), true);\r\n                break;\r\n            case \"addpets\":\r\n                player.getFamiliarManager().getInsuredPets().add(Pets.BABY_MOLE);\r\n                player.getFamiliarManager().getInsuredPets().add(Pets.KREE_JR);\r\n                player.getFamiliarManager().getInsuredPets().add(Pets.KQ_FORM_1);\r\n                player.getFamiliarManager().getInsuredPets().add(Pets.TZREK_JAD);\r\n                return true;\r\n            case \"clearpets\":\r\n                player.getFamiliarManager().getInsuredPets().clear();\r\n                return true;\r\n            case \"holidayitemamount\":\r\n                if (args.length < 1) {\r\n                    player.sendMessage(\"Syntax error - please do ::holidayitemamount itemId\");\r\n                    return true;\r\n                }\r\n                int itemAmount = Integer.parseInt(args[1]);\r\n                player.sendMessage(\"There are \" + ItemLimitation.getAmountLeft(itemAmount) + \" left.\");\r\n                return true;\r\n            case \"l\":\r\n                player.sendMessage(\"\" + player.getSavedData().getGlobalData().getLowAlchemyCharges());\r\n                //player.getSavedData().getGlobalData().setLowAlchemyCharges(2);\r\n                break;\r\n            case \"o\":\r\n                String[] stock = {\"Bronze arrow\", \"Iron arrow\", \"Steel arrow\", \"Mithril arrow\", \"Adamant arrow\", \"Bronze bolts\", \"Iron bolts\", \"Steel bolts\", \"Shortbow\", \"Oak shortbow\", \"Willow shortbow\", \"Maple shortbow\", \"Yew shortbow\", \"Magic shortbow\", \"Crossbow\", \"Iron crossbow\", \"Steel crossbow\", \"Mith crossbow\", \"Adamant crossbow\", \"Rune crossbow\", \"Green dragonhide set\", \"Blue dragonhide set\", \"Red dragonhide set\", \"Black dragonhide set\", \"Leather vambraces\", \"Leather chaps\", \"Leather body\", \"Leather body\", \"Hardleather body\", \"Leather cowl\", \"Studded body\", \"Studded chaps\", \"Snakeskin boots\", \"Archer helm\", \"Amulet of accuracy\", \"Dorgeshuun c'bow\", \"Bone bolts\", \"Iron knife\", \"Rune knife\"};\r\n                String output = \"\";\r\n                for (String string : stock) {\r\n                    for (int i = 0; i < Cache.getItemDefinitionsSize(); i++) {\r\n                        if (ItemDefinition.forId(i).getName().toLowerCase().equals(string.toLowerCase())) {\r\n                            output += \"{\" + i + \",10}-\";\r\n                            break;\r\n                        }\r\n                        if (i == Cache.getItemDefinitionsSize() - 1) {\r\n                            System.err.println(\"You failed on \" + string);\r\n                        }\r\n                    }\r\n                }\r\n                System.out.println(output);\r\n                break;\r\n            case \"rls\":\r\n                ScriptManager.load();\r\n                break;\r\n            case \"k\":\r\n                String[] types = {\"Adamant\", \"Rune\", \"Dragon\"};\r\n                String[] items = {\"dagger\", \"spear\", \"pickaxe\", \"sword\", \"longsword\", \"2h sword\", \"scimitar\", \"warhammer\", \"axe\", \"battleaxe\"};\r\n                String out = \"\";\r\n                for (String type : types) {\r\n                    for (String item : items) {\r\n                        for (int i = 0; i < Cache.getItemDefinitionsSize(); i++) {\r\n                            if (ItemDefinition.forId(i).getName().equals(type + \" \" + item)) {\r\n                                out += \"{\" + i + \",10}-\";\r\n                                break;\r\n                            }\r\n                            if (i == Cache.getItemDefinitionsSize()) {\r\n                                System.err.println(\"Could not do \" + type + \", & \" + item);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                System.out.println(out);\r\n                break;\r\n            case \"i\":\r\n                for (int i = 0; i < Cache.getNPCDefinitionsSize(); i++) {\r\n                    if (NPCDefinition.forId(i).getName().equals(\"Gnome traveller\")) {\r\n                        System.out.println(i + \", \" + NPCDefinition.forId(i).getExamine());\r\n                    }\r\n                }\r\n                break;\r\n            case \"setpin\":\r\n                if (args.length < 2) {\r\n                    player.sendMessage(\"Syntax error - ::setpin username 1234\");\r\n                    return true;\r\n                }\r\n                Player p = super.getTarget(args[1], true);\r\n                if (p == null) {\r\n                    player.sendMessage(\"Could not find player \" + args[1] + \"!\");\r\n                    return true;\r\n                }\r\n                String pin = args.length > 2 ? args[2] : null;\r\n                p.getBankPinManager().setPin(pin == \"\" ? null : pin);\r\n                p.sendMessage(\"Your pin has been set by an administrator.\");\r\n                player.sendMessage(\"Set \" + p.getUsername() + \"'s pin to \" + pin + \".\");\r\n                return true;\r\n            case \"special\":\r\n            case \"spec\":\r\n                int amount = args.length > 1 ? Integer.parseInt(args[1]) : 100;\r\n                player.getSettings().setSpecialEnergy(amount);\r\n                return true;\r\n            case \"god\":\r\n                player.setAttribute(\"godMode\", !player.getAttribute(\"godMode\", false));\r\n                player.sendMessage(\"God mode=<col=ff0000>\" + player.getAttribute(\"godMode\", false));\r\n                break;\r\n            case \"1hit\":\r\n                int[] bonuses = new int[15];\r\n                for (int z = 0; z < 15; z++) {\r\n                    if (player.getProperties().getBonuses()[z] > 1000) {\r\n                        EquipmentContainer.updateBonuses(player);\r\n                        break;\r\n                    }\r\n                    bonuses[z] = 10000;\r\n                }\r\n                if (bonuses[1] > 1000) {\r\n                    player.getProperties().setBonuses(bonuses);\r\n                }\r\n                return true;\r\n            case \"home\":\r\n                player.teleport(ServerConstants.HOME_LOCATION);\r\n                return true;\r\n            case \"heal\":\r\n            case \"hp\":\r\n            case \"life\":\r\n                player.getSettings().setSpecialEnergy(100);\r\n                player.getSettings().updateRunEnergy(-100);\r\n                player.getSkills().setLifepointsIncrease(0);\r\n                player.getSkills().rechargePrayerPoints();\r\n                player.getSkills().heal(100);\r\n                player.getSkills().setLevel(Skills.SUMMONING, player.getSkills().getStaticLevel(Skills.SUMMONING));\r\n                player.getStateManager().remove(EntityState.TELEBLOCK);\r\n                if (player.getFamiliarManager().hasFamiliar()) {\r\n                    player.getFamiliarManager().getFamiliar().updateSpecialPoints(-200);\r\n                }\r\n                return true;\r\n            case \"slayerpoints\":\r\n                player.getSlayer().setSlayerPoints(10000);\r\n                return true;\r\n            case \"bank\":\r\n                player.getBank().open();\r\n                return true;\r\n            case \"peekbank\":\r\n            \ttry {\r\n            \t\tPlayer pl = new Player(PlayerDetails.getDetails(args[1]));\r\n            \t\tplayer.sendMessage(\"penis\");\r\n            \t\tPlayerParser.parse(pl);\r\n            \t\tpl.getBank().open(player);\r\n            \t\tplayer.getPacketDispatch().sendString(pl.getUsername()+ \"'s bank.\",762,24);\r\n            \t} catch (Exception e) {player.sendMessage(\"damn\"); e.printStackTrace();}\r\n            \treturn true;\r\n            case \"iii\":\r\n            \tfor (int i = 0; i < Integer.parseInt(args[1]); ++i) {\r\n            \t\tplayer.getPacketDispatch().sendString(\"\" + i, Integer.parseInt(args[2]), i);\r\n            \t}\r\n            \treturn true;\r\n            case \"debugil\":\r\n                for (int itemIdv : ItemLimitation.getItems().keySet()) {\r\n                    player.getPacketDispatch().sendMessage(itemIdv + \": \" + ItemDefinition.forId(itemIdv).getName() + \" is limited to \" + ItemLimitation.getItems().get(itemIdv) + \".\");\r\n                    System.out.println(itemIdv + \": \" + ItemDefinition.forId(itemIdv).getName() + \" is limited to \" + ItemLimitation.getItems().get(itemIdv) + \".\");\r\n                }\r\n                return true;\r\n            case \"setil\":\r\n                if (args.length < 3) {\r\n                    player.getPacketDispatch().sendMessage(\"Syntax is ::setil itemId limit.\");\r\n                    return true;\r\n                }\r\n                player.getPacketDispatch().sendMessage(\"Limited item \" + args[1] + \" to \" + args[2] + \".\");\r\n                ItemLimitation.register(toInteger(args[1]), toInteger(args[2]));\r\n                return true;\r\n            case \"unlock\":\r\n                player.unlock();\r\n                return true;\r\n            case \"task\":\r\n                ResourceAIPManager.get().runTask(player, \"Willow Logs\");\r\n                break;\r\n            case \"gettask\":\r\n                ResourceAIPManager.get().runTask(player, \"Willow Logs\");\r\n                break;\r\n            case \"modroom\":\r\n                player.teleport(new Location(2843, 5214, 0));\r\n                return true;\r\n            case \"poh\":\r\n                if (!player.getHouseManager().hasHouse()) {\r\n                    player.getHouseManager().create(HouseLocation.RIMMINGTON);\r\n                }\r\n                player.getHouseManager().enter(player, true);\r\n                return true;\r\n            case \"resethouse\":\r\n            case \"rh\":\r\n                player.getHouseManager().clearRooms();\r\n                player.getHouseManager().create(HouseLocation.RIMMINGTON);\r\n                player.getHouseManager().enter(player, true);\r\n                return true;\r\n            case \"debug\":\r\n                player.toggleDebug();\r\n                return true;\r\n            case \"copycoords\":\r\n                String coords = player.getLocation().getX() + \", \" + player.getLocation().getY() + \", \" + player.getLocation().getZ();\r\n                Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n                clipboard.setContents(new StringSelection(coords), null);\r\n                break;\r\n            case \"zones\":\r\n                for (RegionZone z : player.getZoneMonitor().getZones()) {\r\n                    player.getPacketDispatch().sendMessage(\"Region zone \" + z.getZone().getName() + \" active...\");\r\n                }\r\n                return true;\r\n            case \"additem\":\r\n            case \"deleteitem\":\r\n            case \"deleteitemb\":\r\n                if (name.equals(\"additem\")) {\r\n                    addItem(player, args);\r\n                } else {\r\n                    deleteItem(player, args);\r\n                }\r\n                break;\r\n            case \"roar\":\r\n                player.getPacketDispatch().sendInterfaceConfig(762, 20, false);\r\n                break;\r\n            case \"setstage\":\r\n                if(args.length < 2) {\r\n                    player.getPacketDispatch().sendMessage(\"Syntax: setstage stage# quest name\");\r\n                } else {\r\n                    int stageId = 0;\r\n                    stageId = toInteger(args[1]);\r\n                    String questName = \"\";\r\n                    for (int i = 2; i < args.length; i++) {\r\n                        questName += (i == 2 ? \"\" : \" \") + args[i];\r\n                    }\r\n                    questName = StringUtils.formatDisplayName(questName);\r\n                    Quest quest = player.getQuestRepository().getQuest(questName);\r\n                    if (quest == null) {\r\n                        player.debug(\"err or: invalid quest - \" + questName);\r\n                        return true;\r\n                    }\r\n                    player.debug(\"Setting quest \" + questName + \" to stage \" + stageId);\r\n                    player.getQuestRepository().setStage(quest,stageId);\r\n                    player.getQuestRepository().syncronizeTab(player);\r\n                }\r\n                break;\r\n            case \"finishtask\":\r\n                player.debug(\"Kill the npc that spawned to finish your task.\");\r\n                player.getSlayer().setAmount(1);\r\n                NPC finisher = new NPC(player.getSlayer().getTask().getNpcs()[0],player.getLocation());\r\n                finisher.setRespawn(false);\r\n                finisher.init();\r\n                break;\r\n            case \"setslayerpoints\":\r\n                player.getSlayer().setSlayerPoints(toInteger(args[1]));\r\n                player.debug(\"Set slayer points to \" + args[1]);\r\n                break;\r\n\r\n            }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Adds an item to a players item.\r\n     *\r\n     * @param player the player.\r\n     * @param args   the args.\r\n     */\r\n    private void addItem(Player player, String[] args) {\r\n        Player t = Repository.getPlayer(args[1]);\r\n        if (t == null) {\r\n            return;\r\n        }\r\n        int id = toInteger(args[2]);\r\n        int amount = toInteger(args[3]);\r\n        Item item = new Item(id, amount);\r\n        t.getInventory().add(item);\r\n        player.getPacketDispatch().sendMessage(\"You just gave \" + t.getUsername() + \" the item - \" + item);\r\n    }\r\n\r\n    /**\r\n     * Deletes an item from a players item.\r\n     *\r\n     * @param player the player.\r\n     * @param args   the args.\r\n     */\r\n    private void deleteItem(Player player, String[] args) {\r\n        Player t = Repository.getPlayer(args[1]);\r\n        if (t == null) {\r\n            return;\r\n        }\r\n        int id = toInteger(args[2]);\r\n        int amount = toInteger(args[3]);\r\n        Item item = new Item(id, amount);\r\n        if (args[0].equals(\"deleteitemb\")) {\r\n            t.getBank().remove(item);\r\n        } else {\r\n            t.getInventory().remove(item);\r\n        }\r\n        player.getPacketDispatch().sendMessage(\"You just removed\" + t.getUsername() + \" the item - \" + item);\r\n    }\r\n\r\n\r\n    private Location generateLocation(Player player) {\r\n        Location random_location = new Location(3075 + RandomFunction.random(-15, 15), 3954 + RandomFunction.random(-15, 15), 0);\r\n        if (!RegionManager.isTeleportPermitted(random_location)) {\r\n            return generateLocation(player);\r\n        }\r\n        if (!Pathfinder.find(player, random_location, false, Pathfinder.DUMB).isSuccessful()) {\r\n            return generateLocation(player);\r\n        }\r\n        if (RegionManager.getObject(random_location) != null) {\r\n            return generateLocation(player);\r\n        }\r\n        return random_location;\r\n    }\r\n\r\n    private void dump(Player player, Container container) {\r\n        for (Item i : container.toArray()) {\r\n            if (i == null) {\r\n                continue;\r\n            }\r\n            if (!player.getBank().canAdd(i)) {\r\n                player.getPacketDispatch().sendMessage(\"A magical force prevents you from banking your equipment.\");\r\n                return;\r\n            }\r\n            if (!player.getBank().hasSpaceFor(i)) {\r\n                player.getPacketDispatch().sendMessage(\"There is not enough space left in your bank.\");\r\n                return;\r\n            }\r\n            if (container.remove(i)) {\r\n                player.getBank().add(i.getDefinition().isUnnoted() ? i : new Item(i.getNoteChange(), i.getAmount()));\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/plugin/command/DeveloperCommandPlugin.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/plugin/command/DeveloperCommandPlugin.java	(date 1597089529800)
@@ -6,7 +6,6 @@
 import core.cache.def.impl.NPCDefinition;
 import core.game.container.Container;
 import core.game.container.impl.EquipmentContainer;
-import core.game.content.eco.EconomyManagement;
 import core.game.content.global.shop.Shop;
 import core.game.content.holiday.HolidayItem;
 import core.game.content.holiday.ItemLimitation;
@@ -55,7 +54,6 @@
 import java.awt.*;
 import java.awt.datatransfer.Clipboard;
 import java.awt.datatransfer.StringSelection;
-import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -383,7 +381,7 @@
                     t.sendMessage("Iron man mode removed.");
                 }
                 player.sendMessage("Removed ironman mode.");
-                PlayerParser.dump(t);
+                PlayerParser.save(t);
                 break;
             case "holidayitemloc":
                 if (args.length < 1) {
Index: Server/worldprops/server1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><worldprops>\r\n\r\n\r\n    <!--Note: Bots are EXTREMELY EXPERIMENTAL, issues are not currently of concern.-->\r\n    <GameSettings\r\n    name=\"Wonderland 2009Scape\"\r\n    debug=\"false\"\r\n    dev=\"false\"\r\n    startGui=\"false\"\r\n    worldID=\"1\"\r\n    countryID=\"0\"\r\n    activity=\"2009scape classic\"\r\n    pvpWorld=\"false\"\r\n    msip=\"127.0.0.1\"\r\n    default_xp_rate=\"5\"\r\n    allow_slayer_reroll=\"false\"\r\n    enable_bots=\"true\"\r\n    autostock_ge=\"true\"\r\n    allow_token_purchase=\"true\"\r\n    />\r\n\r\n    <!--Plugin configuration goes down here-->\r\n    <PluginSetting name=\"Trivia\" enabled=\"false\"/>\r\n    <PluginSetting name=\"RPS\" enabled=\"false\"/>\r\n    <PluginSetting name=\"Boredom\" enabled=\"false\"/>\r\n    <PluginSetting name=\"ShootingStars\" enabled=\"true\"/>\r\n    <PluginSetting name=\"MysteryBox\" enabled=\"true\"/>\r\n    <PluginSetting name=\"PKZone\" enabled=\"false\"/>\r\n    <PluginSetting name=\"ObjectParser\" enabled=\"true\"/>\r\n    <PluginSetting name=\"BlackJack\" enabled=\"false\"/>\r\n\r\n</worldprops>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/worldprops/server1.xml	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/worldprops/server1.xml	(date 1597089529906)
@@ -14,6 +14,7 @@
     msip="127.0.0.1"
     default_xp_rate="5"
     allow_slayer_reroll="false"
+    enable_default_clan="true"
     enable_bots="true"
     autostock_ge="true"
     allow_token_purchase="true"
Index: Server/src/main/java/Server/core/game/node/entity/player/link/request/trade/TradeCloseEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link.request.trade;\r\n\r\nimport core.game.component.CloseEvent;\r\nimport core.game.component.Component;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.item.Item;\r\nimport core.net.packet.PacketRepository;\r\nimport core.net.packet.context.ContainerContext;\r\nimport core.net.packet.out.ContainerPacket;\r\n\r\n/**\r\n * Represents the close event invoked at the closing of a trade interface.\r\n * @author Vexia\r\n */\r\npublic final class TradeCloseEvent implements CloseEvent {\r\n\r\n\t@Override\r\n\tpublic boolean close(Player player, Component c) {\r\n\t\tfinal TradeModule module = TradeModule.getExtension(player);\r\n\t\tplayer.getPacketDispatch().sendRunScript(101, \"\");\r\n\t\tif (module == null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tTradeModule otherModule = TradeModule.getExtension(module.getTarget());\r\n\t\tif (otherModule == null) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (module.isAccepted() && otherModule.isAccepted()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (module.getStage() != 2) {\r\n\t\t\tretainContainer(player);\r\n\t\t\tretainContainer(module.getTarget());\r\n\t\t}\r\n\t\tcloseInterfaces(player);\r\n\t\tcloseInterfaces(module.getTarget());\r\n\t\tmodule.getTarget().getInterfaceManager().close();\r\n\t\tend(player);\r\n\t\tend(module.getTarget());\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to close the trade interface.\r\n\t * @param player the player.\r\n\t */\r\n\tprivate void closeInterfaces(final Player player) {\r\n\t\tplayer.removeExtension(TradeModule.class);\r\n\t\tplayer.getInterfaceManager().closeSingleTab();\r\n\t\tPacketRepository.send(ContainerPacket.class, new ContainerContext(player, -1, 2, 24, new Item[] {}, 27, false));\r\n\t\tPacketRepository.send(ContainerPacket.class, new ContainerContext(player, -1, 2, 23, new Item[] {}, 27, false));\r\n\t\tplayer.getPacketDispatch().sendRunScript(101, \"\");\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to end the trade session.\r\n\t * @param player the player.\r\n\t */\r\n\tprivate void end(final Player player) {\r\n\t\tplayer.getConfigManager().set(1043, 0);\r\n\t\tplayer.getConfigManager().set(1042, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Method used to retain the trade container.\r\n\t * @param player the player.\r\n\t */\r\n\tprivate void retainContainer(final Player player) {\r\n\t\tfinal TradeModule module = TradeModule.getExtension(player);\r\n\t\tif (module == null || module.isRetained()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tmodule.setRetained(true);\r\n\t\tplayer.getInventory().addAll(module.getContainer());\r\n\t}\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/request/trade/TradeCloseEvent.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/request/trade/TradeCloseEvent.java	(date 1597089529784)
@@ -36,7 +36,9 @@
 		closeInterfaces(module.getTarget());
 		module.getTarget().getInterfaceManager().close();
 		end(player);
+		player.getInterfaceManager().openDefaultTabs();
 		end(module.getTarget());
+		module.getTarget().getInterfaceManager().openDefaultTabs();
 		return true;
 	}
 
Index: Management-Server/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'java'\r\nsourceCompatibility = 1.8\r\ntargetCompatibility = 1.8\r\n\r\napply plugin: 'application'\r\n\r\nmainClassName = 'ms.Management'\r\n\r\nrepositories {\r\n    flatDir {\r\n        dirs 'lib'\r\n    }\r\n}\r\n\r\n\r\ndependencies {\r\n    implementation name: 'clientlibs'\r\n    implementation name: 'commons-io-2.4'\r\n    implementation name: 'guava-18.0'\r\n    implementation name: 'javassist-3.20.0-GA'\r\n    implementation name: 'joda-time-2.9.9'\r\n    implementation name: 'json-simple-1.1.1'\r\n    implementation name: 'laf-plugin-7.2.1'\r\n    implementation name: 'laf-widget-7.2.1'\r\n    implementation name: 'mysql-connector-java-5.1.30-bin'\r\n    implementation name: 'reflections-0.9.10'\r\n    implementation name: 'substance-7.2.1'\r\n    implementation name: 'trident-7.2.1'\r\n    implementation name: 'twitter4j-core-4.0.3-SNAPSHOT'\r\n}\r\n\r\n\r\njar {\r\n    archiveBaseName = 'managementserver'\r\n    archiveVersion =  '1.0.0'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Management-Server/build.gradle	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Management-Server/build.gradle	(date 1597089529725)
@@ -8,25 +8,17 @@
 
 repositories {
     flatDir {
-        dirs 'lib'
+        dirs 'libs'
     }
 }
 
 
 dependencies {
     implementation name: 'clientlibs'
-    implementation name: 'commons-io-2.4'
     implementation name: 'guava-18.0'
     implementation name: 'javassist-3.20.0-GA'
-    implementation name: 'joda-time-2.9.9'
-    implementation name: 'json-simple-1.1.1'
-    implementation name: 'laf-plugin-7.2.1'
-    implementation name: 'laf-widget-7.2.1'
     implementation name: 'mysql-connector-java-5.1.30-bin'
     implementation name: 'reflections-0.9.10'
-    implementation name: 'substance-7.2.1'
-    implementation name: 'trident-7.2.1'
-    implementation name: 'twitter4j-core-4.0.3-SNAPSHOT'
 }
 
 
Index: Server/src/main/java/Server/core/game/node/entity/player/link/Settings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package core.game.node.entity.player.link;\r\n\r\nimport core.game.system.config.ItemConfigParser;\r\nimport plugin.tutorial.TutorialSession;\r\nimport core.game.node.entity.player.Player;\r\nimport core.game.node.item.Item;\r\nimport core.game.system.communication.CommunicationInfo;\r\nimport core.game.system.task.Pulse;\r\nimport core.game.world.GameWorld;\r\nimport core.net.packet.IoBuffer;\r\n\r\nimport java.nio.ByteBuffer;\r\n\r\n/**\r\n * Holds a player's settings.\r\n * @author Emperor\r\n */\r\npublic final class Settings {\r\n\r\n\t/**\r\n\t * The player.\r\n\t */\r\n\tprivate final Player player;\r\n\r\n\t/**\r\n\t * The run energy.\r\n\t */\r\n\tprivate double runEnergy = 100.0;\r\n\r\n\t/**\r\n\t * The player's weight.\r\n\t */\r\n\tprivate double weight;\r\n\r\n\t/**\r\n\t * The brightness setting.\r\n\t */\r\n\tprivate int brightness = 2;\r\n\r\n\t/**\r\n\t * The music volume.\r\n\t */\r\n\tprivate int musicVolume;\r\n\r\n\t/**\r\n\t * The sound effects volume.\r\n\t */\r\n\tprivate int soundEffectVolume;\r\n\r\n\t/**\r\n\t * The area sounds volume.\r\n\t */\r\n\tprivate int areaSoundVolume;\r\n\r\n\t/**\r\n\t * If the player has the single mouse button setting enabled.\r\n\t */\r\n\tprivate boolean singleMouseButton;\r\n\r\n\t/**\r\n\t * If the chat effects should be disabled.\r\n\t */\r\n\tprivate boolean disableChatEffects;\r\n\r\n\t/**\r\n\t * If the private chat should be split from public chat.\r\n\t */\r\n\tprivate boolean splitPrivateChat;\r\n\r\n\t/**\r\n\t * If the player has the accept aid setting enabled.\r\n\t */\r\n\tprivate boolean acceptAid;\r\n\r\n\t/**\r\n\t * If the player's run button is toggled.\r\n\t */\r\n\tprivate boolean runToggled;\r\n\r\n\t/**\r\n\t * The public chat setting.\r\n\t */\r\n\tprivate int publicChatSetting = 0;\r\n\r\n\t/**\r\n\t * The private chat setting.\r\n\t */\r\n\tprivate int privateChatSetting = 0;\r\n\r\n\t/**\r\n\t * The clan chat setting.\r\n\t */\r\n\tprivate int clanChatSetting = 0;\r\n\r\n\t/**\r\n\t * The trade setting.\r\n\t */\r\n\tprivate int tradeSetting = 0;\r\n\r\n\t/**\r\n\t * The assist setting.\r\n\t */\r\n\tprivate int assistSetting = 0;\r\n\r\n\t/**\r\n\t * If the special attack is toggled.\r\n\t */\r\n\tprivate boolean specialToggled;\r\n\r\n\t/**\r\n\t * The current special energy the player has left.\r\n\t */\r\n\tprivate int specialEnergy = 100;\r\n\r\n\t/**\r\n\t * The current attack style index.\r\n\t */\r\n\tprivate int attackStyleIndex = 0;\r\n\r\n\t/**\r\n\t * Constructs a new {@code Settings} {@code Object}.\r\n\t * @param player The player.\r\n\t */\r\n\tpublic Settings(Player player) {\r\n\t\tthis.player = player;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the settings.\r\n\t */\r\n\tpublic void update() {\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.BRIGHTNESS, brightness + 1);\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.MUSIC_VOLUME, musicVolume);\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.EFFECT_VOLUME, soundEffectVolume);\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.SURROUNDING_VOLUME, areaSoundVolume);\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.MOUSE_BUTTON, singleMouseButton);\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.CHAT_EFFECT, disableChatEffects);\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.SPLIT_PRIVATE, splitPrivateChat);\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.ACCEPT_AID, acceptAid);\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.RETALIATE, !player.getProperties().isRetaliating());\r\n\t\tplayer.getConfigManager().set(ConfigurationManager.Configuration.RUNNING, runToggled);\r\n\t\tplayer.getConfigManager().set(1054, clanChatSetting);\r\n\t\tplayer.getConfigManager().set(1055, assistSetting);\r\n\t\tplayer.getConfigManager().set(300, specialEnergy * 10);\r\n\t\tplayer.getConfigManager().set(43, attackStyleIndex);\r\n\t\tplayer.getPacketDispatch().sendRunEnergy();\r\n\t\tupdateChatSettings();\r\n\t\tPulse pulse = player.getAttribute(\"energy-restore\", null);\r\n\t\tif (pulse == null || !pulse.isRunning()) {\r\n\t\t\tpulse = new Pulse(50, player) {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic boolean pulse() {\r\n\t\t\t\t\tif (specialEnergy < 100) {\r\n\t\t\t\t\t\tint heal = 100 - specialEnergy;\r\n\t\t\t\t\t\tsetSpecialEnergy(specialEnergy + (heal > 10 ? 10 : heal));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tpulse.setTicksPassed(1);\r\n\t\t\tGameWorld.Pulser.submit(pulse);\r\n\t\t\tplayer.setAttribute(\"energy-restore\", pulse);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the attack style index.\r\n\t * @param index The index.\r\n\t */\r\n\tpublic void toggleAttackStyleIndex(int index) {\r\n\t\tthis.attackStyleIndex = index;\r\n\t\tplayer.getConfigManager().set(43, attackStyleIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the chat settings.\r\n\t */\r\n\tpublic void updateChatSettings() {\r\n\t\tplayer.getSession().write(new IoBuffer(232).put(publicChatSetting).put(privateChatSetting).put(tradeSetting));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the chat settings.\r\n\t * @param pub The public chat setting.\r\n\t * @param priv The private chat setting.\r\n\t * @param trade The trade setting.\r\n\t */\r\n\tpublic void updateChatSettings(int pub, int priv, int trade) {\r\n\t\tboolean update = false;\r\n\t\tif (publicChatSetting != pub) {\r\n\t\t\tpublicChatSetting = pub;\r\n\t\t\tupdate = true;\r\n\t\t}\r\n\t\tif (privateChatSetting != priv) {\r\n\t\t\tprivateChatSetting = priv;\r\n\t\t\tupdate = true;\r\n\t\t\tCommunicationInfo.notifyPlayers(player, privateChatSetting != 2, true);\r\n\t\t}\r\n\t\tif (tradeSetting != trade) {\r\n\t\t\ttradeSetting = trade;\r\n\t\t\tupdate = true;\r\n\t\t}\r\n\t\tif (update) {\r\n\t\t\tupdateChatSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the chat settings.\r\n\t * @param pub The public chat setting.\r\n\t * @param priv The private chat setting.\r\n\t * @param trade The trade setting.\r\n\t */\r\n\tpublic void setChatSettings(int pub, int priv, int trade) {\r\n\t\tpublicChatSetting = pub;\r\n\t\tprivateChatSetting = priv;\r\n\t\ttradeSetting = trade;\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the settings on the byte buffer.\r\n\t * @param buffer The byte buffer.\r\n\t */\r\n\tpublic void save(ByteBuffer buffer) {\r\n\t\tbuffer.put((byte) 1).put((byte) brightness).put((byte) musicVolume).put((byte) soundEffectVolume).put((byte) areaSoundVolume).put((byte) (singleMouseButton ? 1 : 0)).put((byte) (disableChatEffects ? 1 : 0)).put((byte) (splitPrivateChat ? 1 : 0)).put((byte) (acceptAid ? 1 : 0)).put((byte) (runToggled ? 1 : 0)).put((byte) publicChatSetting).put((byte) privateChatSetting).put((byte) clanChatSetting).put((byte) tradeSetting).put((byte) assistSetting).put(((byte) runEnergy));\r\n\t\tif (!player.getProperties().isRetaliating()) {\r\n\t\t\tbuffer.put((byte) 2);\r\n\t\t}\r\n\t\tif (specialEnergy != 100) {\r\n\t\t\tbuffer.put((byte) 3).put((byte) specialEnergy);\r\n\t\t}\r\n\t\tif (attackStyleIndex != 0) {\r\n\t\t\tbuffer.put((byte) 4).put((byte) attackStyleIndex);\r\n\t\t}\r\n\t\tbuffer.put((byte) 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the settings from the byte buffer.\r\n\t * @param buffer The byte buffer.\r\n\t */\r\n\tpublic void parse(ByteBuffer buffer) {\r\n\t\tint opcode;\r\n\t\twhile ((opcode = buffer.get() & 0xFF) != 0) {\r\n\t\t\tswitch (opcode) {\r\n\t\t\tcase 1:\r\n\t\t\t\tbrightness = buffer.get();\r\n\t\t\t\tmusicVolume = buffer.get();\r\n\t\t\t\tsoundEffectVolume = buffer.get();\r\n\t\t\t\tareaSoundVolume = buffer.get();\r\n\t\t\t\tsingleMouseButton = buffer.get() == 1;\r\n\t\t\t\tdisableChatEffects = buffer.get() == 1;\r\n\t\t\t\tsplitPrivateChat = buffer.get() == 1;\r\n\t\t\t\tacceptAid = buffer.get() == 1;\r\n\t\t\t\trunToggled = buffer.get() == 1;\r\n\t\t\t\tpublicChatSetting = buffer.get();\r\n\t\t\t\tprivateChatSetting = buffer.get();\r\n\t\t\t\tclanChatSetting = buffer.get();\r\n\t\t\t\ttradeSetting = buffer.get();\r\n\t\t\t\tassistSetting = buffer.get();\r\n\t\t\t\trunEnergy = buffer.get();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tplayer.getProperties().setRetaliating(false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tspecialEnergy = buffer.get() & 0xFF;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tattackStyleIndex = buffer.get();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the special attack bar.\r\n\t */\r\n\tpublic void toggleSpecialBar() {\r\n\t\tsetSpecialToggled(!specialToggled);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the special attack bar.\r\n\t * @param enable If the special attack should be enabled.\r\n\t */\r\n\tpublic void setSpecialToggled(boolean enable) {\r\n\t\tspecialToggled = !specialToggled;\r\n\t\tplayer.getConfigManager().set(301, specialToggled ? 1 : 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the special attack bar is toggled.\r\n\t * @return {@code True} if so.\r\n\t */\r\n\tpublic boolean isSpecialToggled() {\r\n\t\treturn specialToggled;\r\n\t}\r\n\r\n\t/**\r\n\t * Drains an amount of special attack energy.\r\n\t * @param amount The amount to drain.\r\n\t * @return {@code True} if succesful, {@code false} if the special attack\r\n\t * energy amount hasn't changed after calling this method.\r\n\t */\r\n\tpublic boolean drainSpecial(int amount) {\r\n\t\tif (!specialToggled) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tsetSpecialToggled(false);\r\n\t\tif (amount > specialEnergy) {\r\n\t\t\tplayer.getPacketDispatch().sendMessage(\"You do not have enough special attack energy left.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tsetSpecialEnergy(specialEnergy - amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the special energy amount.\r\n\t * @param value The amount to set.\r\n\t */\r\n\tpublic void setSpecialEnergy(int value) {\r\n\t\tspecialEnergy = value;\r\n\t\tplayer.getConfigManager().set(300, specialEnergy * 10);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the amount of special energy left.\r\n\t * @return The amount of energy.\r\n\t */\r\n\tpublic int getSpecialEnergy() {\r\n\t\treturn specialEnergy;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the retaliating button.\r\n\t */\r\n\tpublic void toggleRetaliating() {\r\n\t\tplayer.getProperties().setRetaliating(!player.getProperties().isRetaliating());\r\n\t\tplayer.getConfigManager().set(172, !player.getProperties().isRetaliating() ? 1 : 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the singleMouseButton.\r\n\t */\r\n\tpublic void toggleMouseButton() {\r\n\t\tsingleMouseButton = !singleMouseButton;\r\n\t\tplayer.getConfigManager().set(170, singleMouseButton ? 1 : 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the disableChatEffects.\r\n\t */\r\n\tpublic void toggleChatEffects() {\r\n\t\tdisableChatEffects = !disableChatEffects;\r\n\t\tplayer.getConfigManager().set(171, disableChatEffects ? 1 : 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the splitPrivateChat.\r\n\t */\r\n\tpublic void toggleSplitPrivateChat() {\r\n\t\tsplitPrivateChat = !splitPrivateChat;\r\n\t\tplayer.getConfigManager().set(287, splitPrivateChat ? 1 : 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the acceptAid.\r\n\t */\r\n\tpublic void toggleAcceptAid() {\r\n\t\tacceptAid = !acceptAid;\r\n\t\tplayer.getConfigManager().set(427, acceptAid ? 1 : 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the run button.\r\n\t */\r\n\tpublic void toggleRun() {\r\n\t\tsetRunToggled(!runToggled);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the run button.\r\n\t * @param If the run button should be enabled.\r\n\t */\r\n\tpublic void setRunToggled(boolean enabled) {\r\n\t\trunToggled = enabled;\r\n\t\tplayer.getConfigManager().set(173, runToggled ? 1 : 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Decreases the run energy with the given amount (drain parameter). <br> To\r\n\t * increase, use a negative drain value.\r\n\t * @param drain The drain amount.\r\n\t */\r\n\tpublic void updateRunEnergy(double drain) {\r\n\t\trunEnergy -= drain;\r\n\t\tif (runEnergy < 0) {\r\n\t\t\trunEnergy = 0.0;\r\n\t\t} else if (runEnergy > 100) {\r\n\t\t\trunEnergy = 100.0;\r\n\t\t}\r\n\t\tplayer.getPacketDispatch().sendRunEnergy();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weight.\r\n\t */\r\n\tpublic void updateWeight() {\r\n\t\tweight = 0.0;\r\n\t\tfor (int i = 0; i < 28; i++) {\r\n\t\t\tItem item = player.getInventory().get(i);\r\n\t\t\tif (item == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tdouble value = item.getDefinition().getConfiguration(ItemConfigParser.WEIGHT, 0.0);\r\n\t\t\tif (value > 0) {\r\n\t\t\t\tweight += value;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (int i = 0; i < 11; i++) {\r\n\t\t\tItem item = player.getEquipment().get(i);\r\n\t\t\tif (item == null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tweight += item.getDefinition().getConfiguration(ItemConfigParser.WEIGHT, 0.0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the weight.\r\n\t * @return The weight.\r\n\t */\r\n\tpublic double getWeight() {\r\n\t\treturn weight;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the brightness.\r\n\t * @return The brightness.\r\n\t */\r\n\tpublic int getBrightness() {\r\n\t\treturn brightness;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the brightness.\r\n\t * @param brightness The brightness to set.\r\n\t */\r\n\tpublic void setBrightness(int brightness) {\r\n\t\tthis.brightness = brightness;\r\n\t\tplayer.getConfigManager().set(166, brightness + 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the musicVolume.\r\n\t * @return The musicVolume.\r\n\t */\r\n\tpublic int getMusicVolume() {\r\n\t\treturn musicVolume;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the musicVolume.\r\n\t * @param musicVolume The musicVolume to set.\r\n\t */\r\n\tpublic void setMusicVolume(int musicVolume) {\r\n\t\tthis.musicVolume = musicVolume;\r\n\t\tplayer.getConfigManager().set(168, musicVolume);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the soundEffectVolume.\r\n\t * @return The soundEffectVolume.\r\n\t */\r\n\tpublic int getSoundEffectVolume() {\r\n\t\treturn soundEffectVolume;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the soundEffectVolume.\r\n\t * @param soundEffectVolume The soundEffectVolume to set.\r\n\t */\r\n\tpublic void setSoundEffectVolume(int soundEffectVolume) {\r\n\t\tthis.soundEffectVolume = soundEffectVolume;\r\n\t\tplayer.getConfigManager().set(169, soundEffectVolume);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the areaSoundVolume.\r\n\t * @return The areaSoundVolume.\r\n\t */\r\n\tpublic int getAreaSoundVolume() {\r\n\t\treturn areaSoundVolume;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the areaSoundVolume.\r\n\t * @param areaSoundVolume The areaSoundVolume to set.\r\n\t */\r\n\tpublic void setAreaSoundVolume(int areaSoundVolume) {\r\n\t\tthis.areaSoundVolume = areaSoundVolume;\r\n\t\tplayer.getConfigManager().set(872, areaSoundVolume);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the singleMouseButton.\r\n\t * @return The singleMouseButton.\r\n\t */\r\n\tpublic boolean isSingleMouseButton() {\r\n\t\treturn singleMouseButton;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the disableChatEffects.\r\n\t * @return The disableChatEffects.\r\n\t */\r\n\tpublic boolean isDisableChatEffects() {\r\n\t\treturn disableChatEffects;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the splitPrivateChat.\r\n\t * @return The splitPrivateChat.\r\n\t */\r\n\tpublic boolean isSplitPrivateChat() {\r\n\t\treturn splitPrivateChat;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the acceptAid.\r\n\t * @return The acceptAid.\r\n\t */\r\n\tpublic boolean isAcceptAid() {\r\n\t\tif (player.getIronmanManager().isIronman()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn acceptAid;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the runToggled.\r\n\t * @return The runToggled.\r\n\t */\r\n\tpublic boolean isRunToggled() {\r\n\t\treturn runToggled;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the publicChatSetting.\r\n\t * @return The publicChatSetting.\r\n\t */\r\n\tpublic int getPublicChatSetting() {\r\n\t\treturn publicChatSetting;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the publicChatSetting.\r\n\t * @param publicChatSetting The publicChatSetting to set.\r\n\t */\r\n\tpublic void setPublicChatSetting(int publicChatSetting) {\r\n\t\tthis.publicChatSetting = publicChatSetting;\r\n\t\tupdateChatSettings();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the privateChatSetting.\r\n\t * @return The privateChatSetting.\r\n\t */\r\n\tpublic int getPrivateChatSetting() {\r\n\t\treturn privateChatSetting;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the privateChatSetting.\r\n\t * @param privateChatSetting The privateChatSetting to set.\r\n\t */\r\n\tpublic void setPrivateChatSetting(int privateChatSetting) {\r\n\t\tthis.privateChatSetting = privateChatSetting;\r\n\t\tupdateChatSettings();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the clanChatSetting.\r\n\t * @return The clanChatSetting.\r\n\t */\r\n\tpublic int getClanChatSetting() {\r\n\t\treturn clanChatSetting;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the clanChatSetting.\r\n\t * @param clanChatSetting The clanChatSetting to set.\r\n\t */\r\n\tpublic void setClanChatSetting(int clanChatSetting) {\r\n\t\tthis.clanChatSetting = clanChatSetting;\r\n\t\tplayer.getConfigManager().set(1054, clanChatSetting);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the tradeSetting.\r\n\t * @return The tradeSetting.\r\n\t */\r\n\tpublic int getTradeSetting() {\r\n\t\treturn tradeSetting;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the tradeSetting.\r\n\t * @param tradeSetting The tradeSetting to set.\r\n\t */\r\n\tpublic void setTradeSetting(int tradeSetting) {\r\n\t\tthis.tradeSetting = tradeSetting;\r\n\t\tupdateChatSettings();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the assistSetting.\r\n\t * @return The assistSetting.\r\n\t */\r\n\tpublic int getAssistSetting() {\r\n\t\treturn assistSetting;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the assistSetting.\r\n\t * @param assistSetting The assistSetting to set.\r\n\t */\r\n\tpublic void setAssistSetting(int assistSetting) {\r\n\t\tthis.assistSetting = assistSetting;\r\n\t\tplayer.getConfigManager().set(1055, assistSetting);\r\n\t}\r\n\r\n\t/**\r\n\t * @return the runEnergy\r\n\t */\r\n\tpublic double getRunEnergy() {\r\n\t\treturn runEnergy;\r\n\t}\r\n\r\n\t/**\r\n\t * @param runEnergy the runEnergy to set\r\n\t */\r\n\tpublic void setRunEnergy(double runEnergy) {\r\n\t\tthis.runEnergy = runEnergy;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the attackStyleIndex.\r\n\t * @return The attackStyleIndex.\r\n\t */\r\n\tpublic int getAttackStyleIndex() {\r\n\t\treturn attackStyleIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the attackStyleIndex.\r\n\t * @param attackStyleIndex The attackStyleIndex to set.\r\n\t */\r\n\tpublic void setAttackStyleIndex(int attackStyleIndex) {\r\n\t\tthis.attackStyleIndex = attackStyleIndex;\r\n\t}\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Server/src/main/java/Server/core/game/node/entity/player/link/Settings.java	(revision 69a985b011f58fadd8002e3af1b1cb123010a235)
+++ Server/src/main/java/Server/core/game/node/entity/player/link/Settings.java	(date 1597089529771)
@@ -1,6 +1,7 @@
 package core.game.node.entity.player.link;
 
 import core.game.system.config.ItemConfigParser;
+import org.json.simple.JSONObject;
 import plugin.tutorial.TutorialSession;
 import core.game.node.entity.player.Player;
 import core.game.node.item.Item;
@@ -273,6 +274,27 @@
 		}
 	}
 
+	public void parse(JSONObject settingsData){
+		brightness = Integer.parseInt( settingsData.get("brightness").toString());
+		musicVolume = Integer.parseInt( settingsData.get("musicVolume").toString());
+		soundEffectVolume = Integer.parseInt( settingsData.get("soundEffectVolume").toString());
+		areaSoundVolume = Integer.parseInt( settingsData.get("areaSoundVolume").toString());
+		singleMouseButton = (boolean) settingsData.get("singleMouse");
+		disableChatEffects = (boolean) settingsData.get("disableChatEffects");
+		splitPrivateChat = (boolean) settingsData.get("splitPrivate");
+		acceptAid = (boolean) settingsData.get("acceptAid");
+		runToggled = (boolean) settingsData.get("runToggled");
+		publicChatSetting = Integer.parseInt( settingsData.get("publicChatSetting").toString());
+		privateChatSetting = Integer.parseInt( settingsData.get("privateChatSetting").toString());
+		clanChatSetting = Integer.parseInt( settingsData.get("clanChatSetting").toString());
+		tradeSetting = Integer.parseInt( settingsData.get("tradeSetting").toString());
+		assistSetting = Integer.parseInt( settingsData.get("assistSetting").toString());
+		runEnergy = Double.parseDouble( settingsData.get("runEnergy").toString());
+		specialEnergy = Integer.parseInt( settingsData.get("specialEnergy").toString());
+		attackStyleIndex = Integer.parseInt( settingsData.get("attackStyle").toString());
+		player.getProperties().setRetaliating((boolean) settingsData.get("retaliation"));
+	}
+
 	/**
 	 * Toggles the special attack bar.
 	 */
@@ -382,7 +404,7 @@
 
 	/**
 	 * Toggles the run button.
-	 * @param If the run button should be enabled.
+	 * If the run button should be enabled.
 	 */
 	public void setRunToggled(boolean enabled) {
 		runToggled = enabled;
